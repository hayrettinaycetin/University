.. |pydwf|                                    replace:: *pydwf*
.. |pydwf.core.dwf_library|                   replace:: *pydwf.core.dwf_library*
.. |pydwf.utilities|                          replace:: *pydwf.utilities*
.. |pydwf.core.auxiliary.exceptions|          replace:: *pydwf.core.auxiliary.exceptions*
.. |pydwf.core.auxiliary.enum_types|          replace:: *pydwf.core.auxiliary.enum_types*
.. |pydwf.utilities.openDwfDevice:link|       replace:: :py:func:`pydwf.utilities.openDwfDevice() <pydwf.utilities.open_dwf_device.openDwfDevice>`

.. |DwfLibrary|                     replace:: *DwfLibrary*
.. |DwfLibrary:link|                replace:: :py:class:`~pydwf.core.dwf_library.DwfLibrary`

.. |DwfDevice|                      replace:: *DwfDevice*
.. |DwfDevice:link|                 replace:: :py:class:`~pydwf.core.dwf_device.DwfDevice`

.. |pip|                            replace:: *pip*
.. |pip3|                           replace:: *pip3*

.. When updating the 'libdwf-version' substitution, remember to also update the README.md!
.. |libdwf|                         replace:: *libdwf*
.. |libdwf-version|                 replace:: 3.20.1
.. |libdwf-enum-count|              replace:: 27
.. |libdwf-func-count|              replace:: 478
.. |libdwf-func-count-obsolete|     replace:: 33

.. |DwfEnumConfigInfo.AnalogInChannelCount:link|  replace:: :py:attr:`DwfEnumConfigInfo.AnalogInChannelCount  <pydwf.core.auxiliary.enum_types.DwfEnumConfigInfo.AnalogInChannelCount>`
.. |DwfEnumConfigInfo.AnalogInBufferSize:link|    replace:: :py:attr:`DwfEnumConfigInfo.AnalogInBufferSize    <pydwf.core.auxiliary.enum_types.DwfEnumConfigInfo.AnalogInBufferSize>`

.. |DwfLibrary.deviceEnum:link|               replace:: :py:attr:`DwfLibrary.deviceEnum      <pydwf.core.dwf_library.DwfLibrary.deviceEnum>`
.. |DwfLibrary.deviceControl:link|            replace:: :py:attr:`DwfLibrary.deviceControl   <pydwf.core.dwf_library.DwfLibrary.deviceControl>`
.. |DwfLibrary.spectrum:link|                 replace:: :py:attr:`DwfLibrary.spectrum        <pydwf.core.dwf_library.DwfLibrary.spectrum>`
.. |DwfDevice.analogIn:link|                  replace:: :py:attr:`DwfDevice.analogIn         <pydwf.core.dwf_device.DwfDevice.analogIn>`
.. |DwfDevice.analogOut:link|                 replace:: :py:attr:`DwfDevice.analogOut        <pydwf.core.dwf_device.DwfDevice.analogOut>`
.. |DwfDevice.analogIO:link|                  replace:: :py:attr:`DwfDevice.analogIO         <pydwf.core.dwf_device.DwfDevice.analogIO>`
.. |DwfDevice.analogImpedance:link|           replace:: :py:attr:`DwfDevice.analogImpedance  <pydwf.core.dwf_device.DwfDevice.analogImpedance>`
.. |DwfDevice.digitalIn:link|                 replace:: :py:attr:`DwfDevice.digitalIn        <pydwf.core.dwf_device.DwfDevice.digitalIn>`
.. |DwfDevice.digitalOut:link|                replace:: :py:attr:`DwfDevice.digitalOut       <pydwf.core.dwf_device.DwfDevice.digitalOut>`
.. |DwfDevice.digitalIO:link|                 replace:: :py:attr:`DwfDevice.digitalIO        <pydwf.core.dwf_device.DwfDevice.digitalIO>`
.. |DwfDevice.protocol.uart:link|             replace:: :py:attr:`DwfDevice.protocol.uart    <pydwf.core.dwf_device.DwfDevice.protocol.uart>`
.. |DwfDevice.protocol.spi:link|              replace:: :py:attr:`DwfDevice.protocol.spi     <pydwf.core.dwf_device.DwfDevice.protocol.spi>`
.. |DwfDevice.protocol.i2c:link|              replace:: :py:attr:`DwfDevice.protocol.i2c     <pydwf.core.dwf_device.DwfDevice.protocol.i2c>`
.. |DwfDevice.protocol.can:link|              replace:: :py:attr:`DwfDevice.protocol.can     <pydwf.core.dwf_device.DwfDevice.protocol.can>`
.. |DwfDevice.protocol.swd:link|              replace:: :py:attr:`DwfDevice.protocol.swd     <pydwf.core.dwf_device.DwfDevice.protocol.swd>`

.. |deviceEnum:link|                          replace:: :py:attr:`deviceEnum       <pydwf.core.dwf_library.DwfLibrary.deviceEnum>`
.. |deviceControl:link|                       replace:: :py:attr:`deviceControl    <pydwf.core.dwf_library.DwfLibrary.deviceControl>`
.. |spectrum:link|                            replace:: :py:attr:`spectrum         <pydwf.core.dwf_library.DwfLibrary.spectrum>`
.. |analogIn:link|                            replace:: :py:attr:`analogIn         <pydwf.core.dwf_device.DwfDevice.analogIn>`
.. |analogOut:link|                           replace:: :py:attr:`analogOut        <pydwf.core.dwf_device.DwfDevice.analogOut>`
.. |analogIO:link|                            replace:: :py:attr:`analogIO         <pydwf.core.dwf_device.DwfDevice.analogIO>`
.. |analogImpedance:link|                     replace:: :py:attr:`analogImpedance  <pydwf.core.dwf_device.DwfDevice.analogImpedance>`
.. |digitalIn:link|                           replace:: :py:attr:`digitalIn        <pydwf.core.dwf_device.DwfDevice.digitalIn>`
.. |digitalOut:link|                          replace:: :py:attr:`digitalOut       <pydwf.core.dwf_device.DwfDevice.digitalOut>`
.. |digitalIO:link|                           replace:: :py:attr:`digitalIO        <pydwf.core.dwf_device.DwfDevice.digitalIO>`
.. |protocol.uart:link|                       replace:: :py:attr:`protocol.uart    <pydwf.core.dwf_device.DwfDevice.protocol.uart>`
.. |protocol.spi:link|                        replace:: :py:attr:`protocol.spi     <pydwf.core.dwf_device.DwfDevice.protocol.spi>`
.. |protocol.i2c:link|                        replace:: :py:attr:`protocol.i2c     <pydwf.core.dwf_device.DwfDevice.protocol.i2c>`
.. |protocol.can:link|                        replace:: :py:attr:`protocol.can     <pydwf.core.dwf_device.DwfDevice.protocol.can>`
.. |protocol.swd:link|                        replace:: :py:attr:`protocol.swd     <pydwf.core.dwf_device.DwfDevice.protocol.swd>`

.. |DwfLibrary.deviceEnum|                    replace:: *DwfLibrary.deviceEnum*
.. |DwfLibrary.deviceControl|                 replace:: *DwfLibrary.deviceControl*
.. |DwfLibrary.spectrum|                      replace:: *DwfLibrary.spectrum*

.. |DwfDevice.close:link|                     replace:: :py:meth:`DwfDevice.close()                          <pydwf.core.dwf_device.DwfDevice.close>`
.. |DwfDevice.triggerInfo:link|               replace:: :py:meth:`DwfDevice.triggerInfo()                    <pydwf.core.dwf_device.DwfDevice.triggerInfo>`

.. |AnalogIn.status:link|                     replace:: :py:meth:`AnalogIn.status()                          <pydwf.core.api.analog_in.AnalogIn.status>`
.. |AnalogOut.status:link|                    replace:: :py:meth:`AnalogOut.status()                         <pydwf.core.api.analog_out.AnalogOut.status>`
.. |DigitalIn.status:link|                    replace:: :py:meth:`DigitalIn.status()                         <pydwf.core.api.digital_in.DigitalIn.status>`
.. |DigitalOut.status:link|                   replace:: :py:meth:`DigitalOut.status()                        <pydwf.core.api.digital_out.DigitalOut.status>`
.. |AnalogImpedance.status:link|              replace:: :py:meth:`AnalogImpedance.status()                   <pydwf.core.api.analog_impedance.AnalogImpedance.status>`

.. |DeviceEnumeration|                        replace:: *DeviceEnumeration*
.. |DeviceEnumeration:link|                   replace:: :py:class:`~pydwf.core.api.device_enumeration.DeviceEnumeration`

.. |DeviceControl|                            replace:: *DeviceControl*
.. |DeviceControl:link|                       replace:: :py:class:`~pydwf.core.api.device_control.DeviceControl`

.. |Spectrum|                                 replace:: *Spectrum*
.. |Spectrum:link|                            replace:: :py:class:`~pydwf.core.api.spectrum.Spectrum`

.. |API documentation:link|                   replace:: :doc:`API documentation    </pydwf_api/pydwf_overview>`
.. |device control:link|                      replace:: :doc:`device control       </pydwf_api/DwfLibrary.deviceControl>`
.. |device enumeration:link|                  replace:: :doc:`device enumeration   </pydwf_api/DwfLibrary.deviceEnum>`
.. |signal processing:link|                   replace:: :doc:`signal processing    </pydwf_api/DwfLibrary.spectrum>`
.. |enumeration types:link|                   replace:: :doc:`enumeration types    </pydwf_api/pydwf_enumeration_types>`
.. |pydwf.utilities:link|                     replace:: :doc:`pydwf.utilities      </pydwf_api/pydwf_utilities>`

.. |dwfsdk.pdf|                               replace:: *dwfsdk.pdf*

.. |command-line tool:link|                   replace:: :doc:`command-line tool     </background/CommandLineTool>`
.. |triggering:link|                          replace:: :doc:`triggering            </background/Triggering>`
.. |device parameters:link|                   replace:: :doc:`device parameters     </background/DeviceParameters>`
.. |low-level C library:link|                 replace:: :doc:`low-level C library   </background/C_Library>`
.. |examples:link|                            replace:: :doc:`examples              </background/Examples>`
.. |examples overview:link|                   replace:: :doc:`examples overview     </background/Examples>`
.. |device configuration:link|                replace:: :ref:`device configuration  <device-configurations>`
.. |device configurations:link|               replace:: :ref:`device configurations <device-configurations>`

.. |installing-dwf-here:link|                 replace:: :ref:`here <Installing DWF>`

.. |AnalogIn|                                 replace:: *AnalogIn*
.. |AnalogIn:link|                            replace:: :py:class:`~pydwf.core.api.analog_in.AnalogIn`

.. |AnalogOut|                                replace:: *AnalogOut*
.. |AnalogOut:link|                           replace:: :py:class:`~pydwf.core.api.analog_out.AnalogOut`

.. |AnalogIO|                                 replace:: *AnalogIO*
.. |AnalogIO:link|                            replace:: :py:class:`~pydwf.core.api.analog_io.AnalogIO`

.. |AnalogImpedance|                          replace:: *AnalogImpedance*
.. |AnalogImpedance:link|                     replace:: :py:class:`~pydwf.core.api.analog_impedance.AnalogImpedance`

.. |DigitalIn|                                replace:: *DigitalIn*
.. |DigitalIn:link|                           replace:: :py:class:`~pydwf.core.api.digital_in.DigitalIn`

.. |DigitalOut|                               replace:: *DigitalOut*
.. |DigitalOut:link|                          replace:: :py:class:`~pydwf.core.api.digital_out.DigitalOut`

.. |DigitalIO|                                replace:: *DigitalIO*
.. |DigitalIO:link|                           replace:: :py:class:`~pydwf.core.api.digital_io.DigitalIO`

.. |ProtocolUART|                             replace:: *ProtocolUART*
.. |ProtocolUART:link|                        replace:: :py:class:`~pydwf.core.api.protocol_uart.ProtocolUART`

.. |ProtocolSPI|                              replace:: *ProtocolSPI*
.. |ProtocolSPI:link|                         replace:: :py:class:`~pydwf.core.api.protocol_spi.ProtocolSPI`

.. |ProtocolI2C|                              replace:: *ProtocolI2C*
.. |ProtocolI2C:link|                         replace:: :py:class:`~pydwf.core.api.protocol_i2c.ProtocolI2C`

.. |ProtocolCAN|                              replace:: *ProtocolCAN*
.. |ProtocolCAN:link|                         replace:: :py:class:`~pydwf.core.api.protocol_can.ProtocolCAN`

.. |ProtocolSWD|                              replace:: *ProtocolSWD*
.. |ProtocolSWD:link|                         replace:: :py:class:`~pydwf.core.api.protocol_swd.ProtocolSWD`

.. Links to specific external web-pages.

.. |Jigsaw B.V.|                     replace:: `Jigsaw B.V. <https://www.jigsaw.nl/>`__
.. |give us a call|                  replace:: `give us a call <https://jigsaw.nl/#Contact>`__
.. |Digilent|                        replace:: `Digilent <https://digilent.com/>`__
.. |Impedance analyzer:link|         replace:: `Impedance analyzer <https://digilent.com/reference/add-ons/impedance-analyzer/start>`__
.. |Analog Devices AD9648|           replace:: `Analog Devices AD9648 <https://www.analog.com/media/en/technical-documentation/data-sheets/AD9648.pdf>`__
.. |numpy:link|                      replace:: `numpy <https://numpy.org/>`__
.. |matplotlib:link|                 replace:: `matplotlib <https://matplotlib.org/>`__
.. |PyPI|                            replace:: `PyPI <https://pypi.org/>`__
.. |Read The Docs|                   replace:: `Read The Docs <https://readthedocs.org/>`__
.. |GitHub|                          replace:: `GitHub <https://github.com/>`__

.. |adept-download-here|             replace:: `here <https://digilent.com/shop/software/digilent-adept/download/>`__
.. |adept-download-direct-here|      replace:: `here <https://lp.digilent.com/complete-adept-runtime-download/>`__
.. |waveforms-download-here|         replace:: `here <https://digilent.com/shop/software/digilent-waveforms/download/>`__
.. |waveforms-download-direct-here|  replace:: `here <https://lp.digilent.com/complete-waveforms-download/>`__

.. |Electronics Explorer:link|       replace:: `Electronics Explorer                <https://digilent.com/reference/test-and-measurement/electronics-explorer/start>`__
.. |Analog Discovery:link|           replace:: `Analog Discovery                    <https://digilent.com/reference/test-and-measurement/analog-discovery/start>`__
.. |Analog Discovery 2:link|         replace:: `Analog Discovery 2                  <https://digilent.com/reference/test-and-measurement/analog-discovery-2/start>`__
.. |Analog Discovery 3:link|         replace:: `Analog Discovery 3                  <https://digilent.com/reference/test-and-measurement/analog-discovery-3/start>`__
.. |DPS3340 Discovery:link|          replace:: `DPS3340 Discovery USB power supply  <https://digilent.com/reference/test-and-measurement/discovery-power-supply-3340/start>`__
.. |Digital Discovery:link|          replace:: `Digital Discovery                   <https://digilent.com/reference/test-and-measurement/digital-discovery/start>`__
.. |Analog Discovery Studio:link|    replace:: `Analog Discovery Studio             <https://digilent.com/reference/test-and-measurement/analog-discovery-studio/start>`__
.. |Analog Discovery Pro 3x50:link|  replace:: `Analog Discovery Pro 3x50           <https://digilent.com/reference/test-and-measurement/analog-discovery-pro-3x50/start>`__
.. |Analog Discovery Pro 5250:link|  replace:: `Analog Discovery Pro 5250           <https://digilent.com/reference/test-and-measurement/analog-discovery-pro-5250/start>`__

.. Exceptions

.. |Exception|              replace:: :py:exc:`Exception`

.. |PyDwfError|             replace:: *PyDwfError*
.. |PyDwfError:link|        replace:: :py:exc:`~pydwf.core.auxiliary.exceptions.PyDwfError`

.. |DwfLibraryError|        replace:: *DwfLibraryError*
.. |DwfLibraryError:link|   replace:: :py:exc:`~pydwf.core.auxiliary.exceptions.DwfLibraryError`

.. Intersphinx links.

.. |ctypes:link|      replace:: :py:mod:`ctypes`

.. Specific methods.

.. |DwfLibrary.getLastError:link|             replace:: :py:meth:`DwfLibrary.getLastError()            <pydwf.core.dwf_device.DwfLibrary.getLastError>`
.. |DeviceEnum.enumerateDevices:link|         replace:: :py:meth:`DeviceEnum.enumerateDevices()        <pydwf.core.api.device_enumeration.DeviceEnumeration.enumerateDevices>`
.. |DeviceEnum.enumerateStart:link|           replace:: :py:meth:`DeviceEnum.enumerateStart()          <pydwf.core.api.device_enumeration.DeviceEnumeration.enumerateStart>`
.. |DeviceEnum.enumerateConfigurations:link|  replace:: :py:meth:`DeviceEnum.enumerateConfigurations() <pydwf.core.api.device_enumeration.DeviceEnumeration.enumerateConfigurations>`
.. |DeviceEnum.configInfo:link|               replace:: :py:meth:`DeviceEnum.configInfo()              <pydwf.core.api.device_enumeration.DeviceEnumeration.configInfo>`
.. |DeviceEnum.deviceType:link|               replace:: :py:meth:`DeviceEnum.deviceType()              <pydwf.core.api.device_enumeration.DeviceEnumeration.deviceType>`
.. |DeviceControl.open:link|                  replace:: :py:meth:`DeviceControl.open()                 <pydwf.core.api.device_control.DeviceControl.open>`
.. |DeviceControl.openEx:link|                replace:: :py:meth:`DeviceControl.openEx()               <pydwf.core.api.device_control.DeviceControl.openEx>`
.. |DeviceControl.closeAll:link|              replace:: :py:meth:`DeviceControl.closeAll()             <pydwf.core.api.device_control.DeviceControl.closeAll>`

.. |AnalogIn.bitsInfo:link|                   replace:: :py:meth:`AnalogIn.bitsInfo()                  <pydwf.core.api.analog_in.AnalogIn.bitsInfo>`
.. |AnalogIn.channelCount:link|               replace:: :py:meth:`AnalogIn.channelCount()              <pydwf.core.api.analog_in.AnalogIn.channelCount>`
.. |AnalogIn.frequencyInfo:link|              replace:: :py:meth:`AnalogIn.frequencyInfo()             <pydwf.core.api.analog_in.AnalogIn.frequencyInfo>`
.. |AnalogIn.bufferSizeGet:link|              replace:: :py:meth:`AnalogIn.bufferSizeGet()             <pydwf.core.api.analog_in.AnalogIn.bufferSizeGet>`
.. |AnalogIO.channelCount:link|               replace:: :py:meth:`AnalogIO.channelCount()              <pydwf.core.api.analog_io.AnalogIO.channelCount>`
.. |AnalogImpedance.statusMeasure:link|       replace:: :py:meth:`AnalogImpedance.statusMeasure()      <pydwf.core.api.analog_impedance.AnalogImpedance.statusMeasure>`

.. All 8 DwfState constants, as links.

.. |Ready:link|       replace:: :py:attr:`Ready     <pydwf.core.auxiliary.enum_types.DwfState.Ready>`
.. |Config:link|      replace:: :py:attr:`Configure <pydwf.core.auxiliary.enum_types.DwfState.Config>`
.. |Prefill:link|     replace:: :py:attr:`Prefill   <pydwf.core.auxiliary.enum_types.DwfState.Prefill>`
.. |Armed:link|       replace:: :py:attr:`Armed     <pydwf.core.auxiliary.enum_types.DwfState.Armed>`
.. |Wait:link|        replace:: :py:attr:`Wait      <pydwf.core.auxiliary.enum_types.DwfState.Wait>`
.. |Triggered:link|   replace:: :py:attr:`Triggered <pydwf.core.auxiliary.enum_types.DwfState.Triggered>`
.. |Running:link|     replace:: :py:attr:`Running   <pydwf.core.auxiliary.enum_types.DwfState.Running>`
.. |Done:link|        replace:: :py:attr:`Done      <pydwf.core.auxiliary.enum_types.DwfState.Done>`

.. All 27 pydwf enumeration types, as links.

.. |DwfErrorCode:link|                       replace:: :py:class:`~pydwf.core.auxiliary.enum_types.DwfErrorCode`
.. |DwfEnumFilter:link|                      replace:: :py:class:`~pydwf.core.auxiliary.enum_types.DwfEnumFilter`
.. |DwfEnumConfigInfo:link|                  replace:: :py:class:`~pydwf.core.auxiliary.enum_types.DwfEnumConfigInfo`
.. |DwfDeviceID:link|                        replace:: :py:class:`~pydwf.core.auxiliary.enum_types.DwfDeviceID`
.. |DwfDeviceVersion:link|                   replace:: :py:class:`~pydwf.core.auxiliary.enum_types.DwfDeviceVersion`
.. |DwfDeviceParameter:link|                 replace:: :py:class:`~pydwf.core.auxiliary.enum_types.DwfDeviceParameter`
.. |DwfWindow:link|                          replace:: :py:class:`~pydwf.core.auxiliary.enum_types.DwfWindow`
.. |DwfState:link|                           replace:: :py:class:`~pydwf.core.auxiliary.enum_types.DwfState`
.. |DwfTriggerSource:link|                   replace:: :py:class:`~pydwf.core.auxiliary.enum_types.DwfTriggerSource`
.. |DwfTriggerSlope:link|                    replace:: :py:class:`~pydwf.core.auxiliary.enum_types.DwfTriggerSlope`
.. |DwfAcquisitionMode:link|                 replace:: :py:class:`~pydwf.core.auxiliary.enum_types.DwfAcquisitionMode`
.. |DwfAnalogInFilter:link|                  replace:: :py:class:`~pydwf.core.auxiliary.enum_types.DwfAnalogInFilter`
.. |DwfAnalogCoupling:link|                  replace:: :py:class:`~pydwf.core.auxiliary.enum_types.DwfAnalogCoupling`
.. |DwfAnalogInTriggerType:link|             replace:: :py:class:`~pydwf.core.auxiliary.enum_types.DwfAnalogInTriggerType`
.. |DwfAnalogInTriggerLengthCondition:link|  replace:: :py:class:`~pydwf.core.auxiliary.enum_types.DwfAnalogInTriggerLengthCondition`
.. |DwfAnalogOutFunction:link|               replace:: :py:class:`~pydwf.core.auxiliary.enum_types.DwfAnalogOutFunction`
.. |DwfAnalogOutNode:link|                   replace:: :py:class:`~pydwf.core.auxiliary.enum_types.DwfAnalogOutNode`
.. |DwfAnalogOutMode:link|                   replace:: :py:class:`~pydwf.core.auxiliary.enum_types.DwfAnalogOutMode`
.. |DwfAnalogOutIdle:link|                   replace:: :py:class:`~pydwf.core.auxiliary.enum_types.DwfAnalogOutIdle`
.. |DwfDigitalInClockSource:link|            replace:: :py:class:`~pydwf.core.auxiliary.enum_types.DwfDigitalInClockSource`
.. |DwfDigitalInSampleMode:link|             replace:: :py:class:`~pydwf.core.auxiliary.enum_types.DwfDigitalInSampleMode`
.. |DwfDigitalOutOutput:link|                replace:: :py:class:`~pydwf.core.auxiliary.enum_types.DwfDigitalOutOutput`
.. |DwfDigitalOutType:link|                  replace:: :py:class:`~pydwf.core.auxiliary.enum_types.DwfDigitalOutType`
.. |DwfDigitalOutIdle:link|                  replace:: :py:class:`~pydwf.core.auxiliary.enum_types.DwfDigitalOutIdle`
.. |DwfAnalogIO:link|                        replace:: :py:class:`~pydwf.core.auxiliary.enum_types.DwfAnalogIO`
.. |DwfAnalogImpedance:link|                 replace:: :py:class:`~pydwf.core.auxiliary.enum_types.DwfAnalogImpedance`
.. |DwfDmm:link|                             replace:: :py:class:`~pydwf.core.auxiliary.enum_types.DwfDmm`
