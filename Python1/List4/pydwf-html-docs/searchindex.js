Search.setIndex({"docnames": ["background/C_Library", "background/CommandLineTool", "background/DeviceParameters", "background/DigilentWaveformsDevices", "background/Examples", "background/Triggering", "index", "pydwf_api/DwfDevice", "pydwf_api/DwfDevice.analogIO", "pydwf_api/DwfDevice.analogImpedance", "pydwf_api/DwfDevice.analogIn", "pydwf_api/DwfDevice.analogOut", "pydwf_api/DwfDevice.digitalIO", "pydwf_api/DwfDevice.digitalIn", "pydwf_api/DwfDevice.digitalOut", "pydwf_api/DwfDevice.protocol.can", "pydwf_api/DwfDevice.protocol.i2c", "pydwf_api/DwfDevice.protocol.spi", "pydwf_api/DwfDevice.protocol.swd", "pydwf_api/DwfDevice.protocol.uart", "pydwf_api/DwfDeviceToC", "pydwf_api/DwfLibrary", "pydwf_api/DwfLibrary.deviceControl", "pydwf_api/DwfLibrary.deviceEnum", "pydwf_api/DwfLibrary.spectrum", "pydwf_api/DwfLibraryToC", "pydwf_api/pydwf_enumeration_types", "pydwf_api/pydwf_exceptions", "pydwf_api/pydwf_overview", "pydwf_api/pydwf_utilities", "substitutions", "welcome"], "filenames": ["background/C_Library.rst", "background/CommandLineTool.rst", "background/DeviceParameters.rst", "background/DigilentWaveformsDevices.rst", "background/Examples.rst", "background/Triggering.rst", "index.rst", "pydwf_api/DwfDevice.rst", "pydwf_api/DwfDevice.analogIO.rst", "pydwf_api/DwfDevice.analogImpedance.rst", "pydwf_api/DwfDevice.analogIn.rst", "pydwf_api/DwfDevice.analogOut.rst", "pydwf_api/DwfDevice.digitalIO.rst", "pydwf_api/DwfDevice.digitalIn.rst", "pydwf_api/DwfDevice.digitalOut.rst", "pydwf_api/DwfDevice.protocol.can.rst", "pydwf_api/DwfDevice.protocol.i2c.rst", "pydwf_api/DwfDevice.protocol.spi.rst", "pydwf_api/DwfDevice.protocol.swd.rst", "pydwf_api/DwfDevice.protocol.uart.rst", "pydwf_api/DwfDeviceToC.rst", "pydwf_api/DwfLibrary.rst", "pydwf_api/DwfLibrary.deviceControl.rst", "pydwf_api/DwfLibrary.deviceEnum.rst", "pydwf_api/DwfLibrary.spectrum.rst", "pydwf_api/DwfLibraryToC.rst", "pydwf_api/pydwf_enumeration_types.rst", "pydwf_api/pydwf_exceptions.rst", "pydwf_api/pydwf_overview.rst", "pydwf_api/pydwf_utilities.rst", "substitutions.rst", "welcome.rst"], "titles": ["About the DWF C Library", "Using <em>pydwf</em> as a command line tool", "Device parameters", "Digilent Waveforms devices and their configurations", "Example scripts", "Triggering explained", "pydwf 1.1.19 \u2014 Table of Contents", "The <em>DwfDevice</em> class", "Analog I/O", "Analog impedance measurements", "Analog input instrument", "Analog output instrument", "Digital I/O", "Digital input instrument", "Digital output instrument", "CAN protocol", "I\u00b2C protocol", "SPI protocol", "SWD protocol", "UART protocol", "The <em>DwfDevice</em> class and its attributes", "The <em>DwfLibrary</em> class", "Device control functionality", "Device enumeration functionality", "Signal processing functionality", "The <em>DwfLibrary</em> class and its attributes", "<em>pydwf</em> enumeration types", "<em>pydwf</em> exceptions", "Overview of <em>pydwf</em>", "<em>pydwf</em> utilities", "&lt;no title&gt;", "Welcome to <em>pydwf</em> !"], "terms": {"pydwf": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30], "core": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "dwf_librari": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "util": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31], "auxiliari": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "except": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31], "enum_typ": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "opendwfdevic": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31], "dwflibrari": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31], "dwfdevic": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "pip": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "pip3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "libdwf": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31], "27": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "478": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "33": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "dwfenumconfiginfo": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "analoginchannelcount": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "analoginbuffers": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "deviceenum": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "devicecontrol": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31], "spectrum": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31], "analogin": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "analogout": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "analogio": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "analogimped": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "digitalin": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "digitalout": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "digitalio": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "protocol": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "uart": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "spi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "i2c": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "can": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "swd": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "close": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "triggerinfo": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "statu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "deviceenumer": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31], "document": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "devic": [0, 1, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30], "control": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31], "enumer": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31], "signal": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31], "process": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31], "type": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31], "dwfsdk": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "pdf": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "command": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "line": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "tool": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "trigger": [0, 1, 2, 3, 4, 6, 7, 8, 9, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "paramet": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "low": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "level": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "exampl": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30], "configur": [0, 1, 2, 4, 5, 6, 7, 8, 9, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "here": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "protocoluart": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "protocolspi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "protocoli2c": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "protocolcan": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "protocolswd": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "jigsaw": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "b": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "v": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "give": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "u": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "call": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "digil": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "imped": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "analyz": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "analog": [0, 1, 2, 4, 5, 6, 7, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "ad9648": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "numpi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "matplotlib": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "pypi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "read": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "The": [0, 1, 2, 3, 4, 5, 8, 9, 12, 15, 16, 17, 18, 19, 22, 23, 24, 26, 27, 29, 30, 31], "doc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "github": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "electron": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "explor": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "discoveri": [0, 1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "2": [0, 1, 2, 4, 5, 6, 7, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "dps3340": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "usb": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "power": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "suppli": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "digit": [0, 1, 2, 4, 5, 6, 7, 9, 10, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "studio": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "pro": [0, 1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "3x50": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "5250": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "pydwferror": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "dwflibraryerror": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "ctype": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "getlasterror": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "enumeratedevic": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "enumeratestart": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "enumerateconfigur": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "configinfo": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "devicetyp": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "open": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "openex": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31], "closeal": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "bitsinfo": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "channelcount": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "frequencyinfo": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "buffersizeget": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "statusmeasur": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "readi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "prefil": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "arm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "wait": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "run": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "done": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "dwferrorcod": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "dwfenumfilt": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "dwfdeviceid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "dwfdevicevers": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "dwfdeviceparamet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "dwfwindow": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "dwfstate": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "dwftriggersourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "dwftriggerslop": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "dwfacquisitionmod": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "dwfanaloginfilt": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "dwfanalogcoupl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "dwfanalogintriggertyp": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "dwfanalogintriggerlengthcondit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "dwfanalogoutfunct": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "dwfanalogoutnod": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "dwfanalogoutmod": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "dwfanalogoutidl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "dwfdigitalinclocksourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "dwfdigitalinsamplemod": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "dwfdigitaloutoutput": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "dwfdigitalouttyp": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "dwfdigitaloutidl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "dwfanalogio": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "dwfanalogimped": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "dwfdmm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "provid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31], "waveform": [0, 1, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 26, 28, 29, 31], "test": [0, 7, 8, 21, 31], "measur": [0, 5, 6, 7, 10, 13, 14, 20, 26, 28, 31], "i": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31], "avail": [0, 1, 3, 4, 5, 7, 8, 10, 11, 13, 14, 21, 22, 23, 26, 27, 28, 29, 31], "dll": 0, "microsoft": 0, "window": [0, 3, 10, 24, 26, 31], "share": [0, 21, 27, 28, 31], "object": 0, "so": [0, 3, 6, 7, 8, 10, 12, 13, 14, 19, 26, 28, 31], "linux": [0, 31], "framework": 0, "appl": 0, "": [0, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 24, 26, 27, 28, 31], "maco": [0, 31], "accompani": [0, 6, 28, 31], "header": [0, 14, 26], "file": [0, 1, 4, 14, 26], "togeth": [0, 10], "itself": [0, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 26, 28, 31], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31], "allow": [0, 5, 10, 11, 15, 16, 17, 18, 19, 23, 29, 31], "program": [0, 3, 4, 7, 8, 11, 21, 23, 27, 28], "languag": 0, "most": [0, 3, 8, 10, 11, 12, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29], "popular": 0, "mechan": [0, 21, 27], "In": [0, 7, 10, 11, 12, 13, 14, 21, 22, 26, 28, 31], "modul": [0, 4, 11, 21, 26, 27, 29], "part": [0, 6, 7, 10, 13, 21, 26, 28, 31], "standard": [0, 11, 21, 24, 27, 31], "packag": [0, 1, 4, 21, 24, 26, 28, 29, 31], "bind": 0, "us": [0, 3, 4, 5, 6, 28], "It": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 26, 27, 28, 29, 31], "make": [0, 3, 4, 7, 13, 21, 24, 26, 27, 28, 31], "all": [0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 21, 22, 23, 24, 26, 27, 28, 29, 31], "wrap": [0, 31], "them": [0, 6, 10, 11, 13, 14, 17, 23, 26, 27, 28, 31], "small": [0, 7, 26, 28], "set": [0, 2, 4, 7, 8, 9, 12, 15, 16, 17, 18, 19, 21, 26], "class": [0, 3, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 27, 31], "easi": [0, 3, 23, 27, 29, 31], "come": [0, 3, 10, 11, 12, 13, 14, 31], "defin": [0, 2, 5, 9, 21, 26, 27, 29], "up": [0, 4, 10, 12, 13, 17, 19, 26, 31], "Of": 0, "ar": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 31], "label": [0, 8, 14], "obsolet": [0, 7, 10, 13, 14, 23, 26], "Their": 0, "usual": 0, "supersed": 0, "newer": [0, 14], "more": [0, 3, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 21, 22, 26, 28, 31], "gener": [0, 1, 3, 4, 5, 7, 10, 11, 12, 13, 14, 16, 17, 22, 24, 26, 28, 31], "organ": [0, 8, 11], "16": [0, 3, 8, 10, 13, 14, 17, 26], "sub": [0, 1, 4, 7, 21], "each": [0, 1, 4, 7, 8, 10, 11, 12, 13, 14, 17, 26, 27, 28, 31], "subset": 0, "specif": [0, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 26, 28, 29], "instrument": [0, 3, 4, 5, 6, 7, 8, 12, 16, 20, 23, 26, 28, 31], "send": [0, 7, 16, 17, 19, 28], "receiv": [0, 7, 10, 11, 13, 14, 15, 16, 17, 18, 19, 28], "messag": [0, 1, 4, 11, 21, 26, 27], "certain": [0, 3, 23, 28, 29], "list": [0, 1, 2, 3, 7, 10, 11, 13, 14, 16, 17, 22, 23, 26, 28, 29, 31], "below": [0, 1, 3, 7, 8, 10, 11, 13, 14, 22, 23, 26, 28, 29], "some": [0, 3, 4, 5, 6, 7, 8, 10, 11, 13, 16, 17, 23, 28, 31], "idea": 0, "complex": [0, 3, 24, 26], "differ": [0, 2, 3, 8, 9, 10, 13, 16, 17, 26, 27], "area": 0, "equival": [0, 11, 24, 26], "activ": [0, 3, 10, 13, 14, 17, 19], "total": [0, 10], "miscellan": [0, 21, 26, 28], "5": [0, 3, 8, 19, 24, 26], "0": [0, 3, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 22, 24, 26, 28], "fdwfenum": 0, "11": [0, 24, 26], "4": [0, 3, 8, 17, 18, 26], "15": [0, 26], "fdwfdevic": 0, "fdwfspectrum": 0, "fdwfanalogin": 0, "100": [0, 11, 16, 26], "101": [0, 10], "fdwfanalogout": 0, "58": 0, "25": 0, "83": [0, 11], "fdwfanalogio": 0, "17": [0, 8, 22, 23, 26], "fdwfanalogimped": 0, "23": [0, 13], "fdwfdigitalin": 0, "60": 0, "62": [0, 13], "fdwfdigitalout": 0, "52": 0, "53": [0, 14], "fdwfdigitalio": 0, "fdwfdigitaluart": 0, "10": [0, 3, 26], "fdwfdigitalspi": 0, "32": [0, 12, 13, 17], "fdwfdigitali2c": 0, "14": [0, 10, 26], "fdwfdigitalcan": 0, "7": [0, 3, 26], "fdwfdigitalswd": 0, "12": [0, 23, 26, 29], "445": 0, "tabl": [0, 22, 26], "clear": [0, 11, 16, 18, 21, 23], "oscilloscop": [0, 4, 7, 10, 28], "follow": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 22, 23, 26, 27, 28, 31], "logic": [0, 7, 13, 28], "pattern": [0, 3, 7, 13, 26, 28], "directli": [0, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 28], "relat": [0, 10], "four": [0, 4, 7], "return": [0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 29], "an": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 31], "integ": [0, 3, 7, 10, 13, 14, 19, 23, 26], "indic": [0, 8, 10, 11, 13, 14, 16, 18, 19, 23, 26], "its": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29], "success": [0, 14], "A": [0, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 24, 26, 27, 29, 31], "valu": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 31], "while": [0, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 26, 31], "note": [0, 3, 8, 10, 12, 19, 26], "convent": 0, "where": [0, 11, 12, 13, 14, 15, 16, 17, 19, 26, 27], "earlier": [0, 3], "oper": [0, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 26, 28, 31], "wa": [0, 7, 8, 10, 11, 12, 13, 15, 18, 21, 22, 23, 26, 27], "specifi": [0, 1, 4, 7, 8, 10, 11, 13, 14, 19, 22, 23, 24, 26], "bool": [0, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 21, 23], "true": [0, 7, 10, 11, 13, 14, 15, 16, 21, 23, 28], "fals": [0, 7, 10, 11, 13, 14, 16, 21, 23], "failur": [0, 18, 27], "chang": [0, 4, 7, 8, 10, 11, 13, 14, 26], "int": [0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 29], "point": [0, 6, 7, 14, 21, 24, 28, 31], "remain": [0, 6, 10, 11, 12, 13, 14, 28, 29, 31], "same": [0, 10, 11, 12, 13, 14, 23, 24, 26], "reason": [0, 6, 7, 10, 13, 22, 23, 26, 28, 31], "backward": 0, "compat": 0, "case": [0, 8, 10, 11, 12, 13, 14, 21, 26, 27, 28, 29], "kind": [0, 6, 10, 11, 13, 14, 28, 31], "two": [0, 3, 4, 6, 8, 9, 10, 13, 14, 19, 24, 26], "inquir": 0, "fdwfgetlasterror": [0, 27], "dwferc": [0, 26], "repres": [0, 3, 7, 8, 10, 11, 13, 14, 26, 27, 28], "caus": [0, 13, 27, 29], "last": [0, 6, 8, 10, 12, 17, 21, 24, 26, 27, 28, 31], "fdwfgetlasterrormsg": [0, 27], "string": [0, 14, 21, 22, 23, 29], "describ": [0, 7, 21, 23, 29], "report": [0, 4, 8, 10, 21, 23, 26, 27, 31], "check": [0, 7, 10, 13, 14, 16, 18, 21, 23], "ani": [0, 5, 7, 8, 9, 10, 11, 13, 14, 17, 23, 26, 27, 29, 31], "rais": [0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 29], "whenev": [0, 28], "detect": [0, 10, 11, 13, 14, 16, 21, 23, 26, 27, 29], "3": [1, 2, 4, 5, 6, 7, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "20": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "1": [1, 2, 3, 4, 5, 7, 8, 9, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "api": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "c": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "librari": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "overview": [1, 2, 4, 5, 6, 7, 8, 9, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31], "after": [1, 4, 7, 10, 11, 12, 13, 14, 16, 21, 23, 26, 27, 28, 31], "instal": [1, 4, 6], "execut": [1, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 31], "python3": [1, 3], "m": [1, 3, 4, 23, 31], "number": [1, 4, 8, 10, 11, 12, 13, 14, 16, 17, 19, 21, 22, 23, 24, 26, 28, 29, 31], "version": [1, 3, 6, 8, 11, 12, 13, 21, 22, 23, 26, 28, 29, 31], "show": [1, 3, 4, 8, 10, 11, 13, 14, 26, 27, 31], "dwf": [1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 31], "add": [1, 6, 7, 28, 31], "option": [1, 4, 7, 9, 10, 11, 13, 23, 24, 26, 27, 28, 29], "support": [1, 3, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 22, 24, 26, 28], "extract": [1, 4, 31], "local": [1, 4, 31], "directori": [1, 4, 31], "python": [1, 4, 6, 21, 23, 24, 26, 27, 28, 31], "script": [1, 6, 21, 23, 26, 27, 28, 31], "html": [1, 31], "manual": [1, 31], "output": [1, 3, 4, 6, 7, 8, 12, 20, 26, 28], "help": [1, 15, 18, 21, 31], "h": [1, 26], "shown": [1, 3, 26, 28], "usag": [1, 6], "l": 1, "posit": [1, 8, 10, 13, 26], "argument": [1, 10], "current": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 26, 28, 29, 31], "exit": 1, "To": [1, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 29], "get": [1, 7, 8, 9, 10, 11, 12, 13, 14, 16, 21, 23, 24, 26], "question": 1, "section": [2, 3, 4, 5, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 28, 31], "incomplet": [2, 3, 4, 5, 9, 11, 14, 15, 16, 17, 18, 19], "onli": [2, 3, 4, 5, 8, 10, 11, 12, 13, 14, 19, 21, 26, 28, 29, 31], "intent": [2, 5, 7], "detail": [2, 5, 10, 11, 13, 14, 23, 29], "inform": [2, 3, 7, 8, 9, 10, 11, 12, 13, 14, 21, 23, 31], "what": [2, 6, 9, 11, 13, 23, 24, 26, 28, 31], "do": [2, 6, 9, 11, 12, 14, 23, 24, 26, 27, 28, 29, 31], "exist": [2, 6, 10, 26, 28, 31], "have": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 26, 28, 31], "been": [2, 8, 10, 11, 13, 14, 22, 26, 28, 31], "usbpow": [2, 26], "ledbright": [2, 26], "onclos": [2, 26], "audioout": [2, 26], "usblimit": [2, 26], "frequenc": [2, 4, 8, 9, 10, 11, 13, 14, 17, 23, 24, 26], "introduc": [3, 10, 11, 13, 14, 28], "past": 3, "present": [3, 14, 26], "thei": [3, 6, 7, 8, 9, 21, 23, 24, 26, 27, 28, 31], "we": [3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 26, 28], "need": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 28, 29, 31], "gather": 3, "data": [3, 6, 7, 15, 16, 17, 18, 19, 24, 26, 28, 31], "For": [3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 22, 23, 24, 26, 28, 29, 31], "multipl": [3, 7, 10, 11, 13, 14, 17, 21, 26, 27, 29], "firmwar": 3, "tradeoff": [3, 29], "hard": 3, "code": [3, 4, 21, 26, 27], "one": [3, 4, 5, 7, 8, 10, 11, 13, 17, 21, 26, 27, 28], "mai": [3, 6, 8, 10, 21, 24, 26, 27, 28, 29, 31], "lot": [3, 31], "buffer": [3, 10, 11, 13, 14, 23, 26, 28, 29], "memori": [3, 21, 23], "anoth": [3, 11, 14], "sever": [3, 4, 7, 10, 13, 16, 17, 19, 22, 23, 24, 26, 28, 29, 31], "default": [3, 4, 7, 8, 10, 11, 12, 13, 14, 16, 19, 21, 22, 26, 29], "balanc": [3, 29], "function": [3, 4, 5, 6, 7, 9, 11, 14, 20, 21, 25, 26, 27, 28, 31], "work": [3, 4, 6, 11, 13, 14, 22, 23, 24, 28, 29, 31], "well": [3, 19, 31], "applic": [3, 11, 21, 23, 31], "howev": [3, 8, 27], "user": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 31], "select": [3, 4, 7, 8, 10, 11, 13, 14, 17, 22, 23, 26, 28, 29], "better": [3, 24, 31], "suit": 3, "task": [3, 7, 23, 26, 28, 29, 31], "hand": [3, 21, 28, 29], "wai": [3, 4, 6, 8, 10, 13, 19, 22, 23, 26, 28, 31], "relev": [3, 10, 12, 13, 14], "properti": [3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24], "best": [3, 29], "handl": [3, 6, 7, 12, 26, 28, 31], "involv": 3, "quit": [3, 13, 14, 27, 28, 29], "bit": [3, 10, 12, 13, 14, 15, 17, 18, 19, 23], "bookkeep": 3, "mani": [3, 4, 7, 8, 10, 11, 14, 16, 21, 29, 31], "avoid": [3, 14], "conveni": [3, 7, 21, 22, 23, 28], "altern": [3, 4, 26, 28, 31], "deal": [3, 28], "collect": [3, 13, 26], "given": [3, 4, 6, 22, 26, 28, 29, 31], "older": 3, "predecessor": 3, "black": 3, "enclosur": 3, "cost": 3, "multi": [3, 7, 26, 28], "successor": 3, "origin": [3, 6, 27, 28, 31], "user_nam": 3, "discovery2": [3, 23, 26], "device_nam": 3, "6": [3, 8, 26, 31], "analogoutchannelcount": [3, 26], "analogiochannelcount": [3, 26], "digitalinchannelcount": [3, 26], "digitaloutchannelcount": [3, 26], "8": [3, 9, 10, 12, 13, 14, 15, 17, 19, 26], "digitaliochannelcount": [3, 26], "8192": [3, 10], "16384": [3, 10], "2048": [3, 10, 26], "512": [3, 10], "analogoutbuffers": [3, 26], "4096": [3, 10], "1024": [3, 10], "256": [3, 26], "digitalinbuffers": [3, 26], "digitaloutbuffers": [3, 26], "look": [3, 4], "ident": [3, 6, 26, 28, 31], "also": [3, 5, 8, 9, 10, 11, 12, 13, 14, 15, 23, 26, 28, 31], "consid": [3, 6, 11, 22, 23, 28, 29, 31], "otherinfotext": [3, 26], "d": [3, 6, 28, 31], "see": [3, 4, 12, 22, 23, 29, 31], "singl": [3, 7, 10, 13, 16, 17, 19, 21, 22, 23, 26, 27, 28, 29], "period": [3, 9, 26], "charact": [3, 14, 19, 21, 23, 26, 27], "1v8_digital_input": 3, "those": [3, 5, 6, 7, 8, 28, 31], "inde": 3, "distinct": 3, "discovery3": 3, "tooltiptext": [3, 26], "length": [3, 10, 11, 13, 14, 24, 26], "413": 3, "404": 3, "412": 3, "411": 3, "_": 3, "32768": 3, "similar": [3, 26], "omit": [3, 29], "input": [3, 4, 6, 7, 8, 9, 11, 12, 14, 20, 23, 24, 26, 28, 29], "On": [3, 10, 26], "plu": 3, "side": 3, "high": [3, 5, 9, 12, 13, 14, 15, 17, 26, 29, 31], "speed": [3, 12, 31], "differenti": 3, "captur": [3, 5, 10, 13, 26, 31], "usernam": [3, 22, 23], "ddiscoveri": [3, 23, 26], "devicenam": [3, 23], "24": [3, 11, 13], "67108864": [3, 26], "spiritu": 3, "featur": [3, 6, 8, 10, 22, 26, 28, 31], "wise": 3, "compar": [3, 24], "sold": 3, "sinc": [3, 6, 7, 8, 12, 14, 21, 28, 31], "2020": 3, "hardwar": [3, 6, 7, 19, 23, 26, 28, 31], "end": [3, 11, 26, 28, 29], "bnc": 3, "connector": 3, "includ": [3, 4, 10, 11, 13, 14, 21, 28], "model": [3, 31], "3250": [3, 31], "3450": [3, 31], "adp3450": [3, 31], "65536": [3, 10], "clone": 3, "nation": [3, 6, 28, 31], "vb": [3, 31], "8012": [3, 31], "creat": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 29, 31], "contain": [4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 27, 28, 31], "demonstr": [4, 29, 31], "capabl": [4, 11, 23, 31], "miss": [4, 10, 13, 23], "main": [4, 6, 7, 26], "mode": [4, 9, 10, 11, 12, 13, 17, 26], "inter": 4, "digitaldiscoveryledbrightnessparamet": 4, "py": [4, 8, 22], "bright": [4, 26], "led": [4, 26], "No": [4, 26], "yet": [4, 9, 10, 13, 15, 26], "now": [4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 28, 31], "recommend": [4, 8, 21, 22, 26], "list_devic": 4, "__main": 4, "py__": 4, "top": [4, 21, 26, 27, 28, 29], "analoginsimpl": 4, "easiest": [4, 8], "obtain": [4, 7, 10, 13, 14, 21, 23, 27, 28], "sampl": [4, 11, 13, 14, 23, 26], "from": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 31], "channel": [4, 6, 7, 9, 12, 13, 15, 16, 17, 18, 19, 23, 26, 28, 31], "method": [4, 7, 8, 9, 12, 15, 16, 17, 19, 21, 23, 26, 28, 29], "precis": [4, 6, 10, 11, 12, 13, 14, 16, 22, 28, 31], "time": [4, 6, 10, 11, 12, 17, 23, 26, 28, 31], "import": [4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 31], "analoginshiftscanshiftscreendemo": 4, "record": [4, 10, 13, 26], "scanscreen": [4, 10, 13, 26], "scanshift": [4, 26], "acquisit": [4, 6, 7, 26, 28, 31], "analoginrecordmod": 4, "emit": 4, "sinusoid": [4, 26], "first": [4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 28, 29, 31], "continu": [4, 10, 11, 13, 14, 26], "assum": 4, "connect": [4, 10, 22, 26, 28, 31], "plot": 4, "result": [4, 6, 10, 13, 22, 27, 28, 29, 31], "analogoutshowchannelandnodeinfo": 4, "start": [4, 5, 7, 9, 10, 11, 13, 14, 16, 17, 23, 26, 28, 31], "ha": [4, 8, 10, 11, 13, 14, 17, 26, 29, 31], "largest": [4, 23], "count": [4, 13, 23], "node": [4, 26, 28], "mostli": 4, "interest": 4, "rare": [4, 8, 19], "third": [4, 10, 13, 18], "fourth": 4, "which": [4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 31], "These": [4, 7, 8, 11, 14, 21, 26, 28, 31], "extra": 4, "essenti": [4, 6, 10, 23, 28, 31], "analogoutsimpl": 4, "simpl": [4, 12, 14, 15, 16, 17, 18, 19, 26], "squar": [4, 26], "doesn": 4, "t": [4, 6, 10, 13, 28, 31], "actual": [4, 8, 9, 10, 19, 22], "By": 4, "drive": [4, 7, 8, 11, 12, 14, 26], "initi": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 29], "idl": [4, 11, 14, 17, 18, 26], "voltag": [4, 7, 8, 10, 11, 26, 28], "manipul": 4, "amplitud": [4, 9, 11, 26], "occasion": [4, 22], "techniqu": 4, "much": [4, 7, 12], "faster": [4, 10, 24], "than": [4, 10, 15, 26], "approach": 4, "offset": [4, 9, 10, 11, 13, 26], "take": [4, 8, 11, 21, 22, 23, 26, 29], "long": [4, 8, 23, 29], "stabil": 4, "due": [4, 21], "presenc": [4, 26], "pass": [4, 7, 10, 11, 14, 21, 22], "filter": [4, 10, 26, 29], "rate": [4, 10, 14, 15, 16, 18, 19, 26], "hundr": 4, "per": [4, 10, 13, 14, 17, 23], "second": [4, 10, 11, 13, 14, 16, 18, 22, 23, 24, 29], "analogoutplayfunct": 4, "plai": [4, 11, 14, 26], "built": [4, 21, 23, 27, 29], "phase": [4, 9, 11, 17, 24, 26], "symmetri": [4, 11], "analogoutshowfunctionsymmetri": 4, "behavior": [4, 7, 10, 11, 12, 13, 14, 16, 17, 23, 26], "analogoutamplitudemodulationdemo": 4, "am": [4, 6, 11, 26, 28, 31], "carrier": [4, 26, 28], "sine": [4, 11, 26, 28], "wave": [4, 11, 26], "analogoutplaycustomwaveform": 4, "custom": [4, 6, 11, 14, 26, 28, 31], "ch1": [4, 28], "human": 4, "readabl": 4, "If": [4, 6, 8, 10, 11, 12, 13, 14, 15, 19, 21, 22, 23, 24, 26, 28, 29, 31], "filenam": 4, "hook": 4, "your": [4, 7, 16, 31], "analogoutcontinuousplai": 4, "either": [4, 6, 7, 10, 11, 13, 21, 22, 23, 26, 27, 28, 31], "circl": 4, "polygon": 4, "x": 4, "ch2": 4, "y": 4, "properli": [4, 10, 11, 13, 14, 15, 16, 17], "appreci": 4, "displai": [4, 10, 13, 26], "analogoutspinningglob": 4, "spin": 4, "globe": 4, "quantiti": [4, 7, 8, 9, 26, 28], "associ": [4, 8, 10, 11, 13, 14, 26], "monitor": [4, 7, 8, 10, 11, 12, 13, 14, 26, 28], "Not": [4, 22], "digitaloutshowstatusduringpulseplayback": 4, "dure": [4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26], "puls": [4, 7, 10, 14, 26], "playback": [4, 11, 26], "static": [4, 7, 8, 12, 28], "pin": [4, 7, 12, 13, 14, 15, 16, 17, 19, 26], "loopback": 4, "transmiss": [4, 19], "recept": [4, 19], "bu": [4, 5, 7, 15, 16, 17, 18, 23], "readout": 4, "adxl345": 4, "tripl": 4, "axi": [4, 26], "acceleromet": 4, "expect": [4, 6, 8, 28, 31], "find": [4, 23], "ic": 4, "attach": [4, 17], "proper": 4, "sourc": [4, 6, 7, 8, 9, 10, 11, 13, 14, 26], "descript": [4, 10, 13, 22, 26, 27, 28, 29], "how": [4, 8, 9, 10, 11, 13, 14, 31], "i\u00b2c": [4, 6, 7, 20, 28], "discuss": [5, 10, 11, 13, 14, 20, 25], "architectur": 5, "explan": 5, "possibl": [5, 7, 10, 11, 13, 14, 19, 23, 26, 27], "limit": [5, 8, 11, 26, 29], "would": [5, 7, 10, 15, 18, 26], "spec": 5, "latenc": [5, 7], "jitter": 5, "common": [5, 19, 29, 31], "could": [5, 21, 22, 23, 29], "intern": [5, 7, 8, 10, 13, 14, 23, 26], "rel": [5, 10, 19, 26], "extern": [5, 7, 26], "event": [5, 7, 10, 11, 13, 14, 21], "infrastructur": 5, "highli": [5, 10, 13], "flexibl": 5, "detector": [5, 26], "themselv": 5, "other": [5, 6, 7, 8, 10, 11, 19, 21, 23, 24, 26, 28, 31], "sent": [5, 10, 13, 14, 17, 26], "pc": [5, 7, 10, 12, 13, 26, 31], "none_": [5, 7, 26], "detectoranalogin": [5, 26], "detectordigitalin": [5, 26], "analogout1": [5, 26], "analogout2": [5, 26], "analogout3": [5, 26], "analogout4": [5, 26], "external1": [5, 26], "external2": [5, 26], "external3": [5, 26], "external4": [5, 26], "clock": [5, 8, 13, 14, 16, 17, 18, 26], "written": 5, "notic": [6, 11, 14, 28, 31], "decis": [6, 28, 31], "octob": [6, 28, 31], "2023": [6, 28, 31], "requir": [6, 10, 11, 12, 13, 14, 28, 31], "creation": [6, 28, 31], "login": [6, 28, 31], "account": [6, 28, 31], "download": [6, 28, 31], "softwar": [6, 8, 26, 28, 31], "decid": [6, 26, 28, 31], "suspend": [6, 28, 31], "my": [6, 28, 31], "indefinit": [6, 11, 28, 31], "There": [6, 9, 28, 31], "new": [6, 7, 8, 10, 11, 13, 14, 26, 28, 31], "bug": [6, 21, 26, 28, 31], "fix": [6, 10, 26, 28, 31], "me": [6, 28, 31], "via": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 28, 31], "forum": [6, 11, 12, 14, 23, 26, 28, 31], "primari": [6, 11, 28, 31], "uneth": [6, 28, 31], "sell": [6, 28, 31], "mandatori": [6, 28, 31], "accept": [6, 28, 31], "term": [6, 28, 31], "condit": [6, 10, 13, 16, 26, 27, 28, 31], "were": [6, 8, 28, 31], "sale": [6, 28, 31], "regist": [6, 28, 31], "person": [6, 28, 31], "identifi": [6, 22, 28, 29, 31], "realiz": [6, 28, 31], "unsavori": [6, 28, 31], "practic": [6, 26, 28, 29, 31], "pervas": [6, 28, 31], "brave": [6, 28, 31], "world": [6, 28, 31], "modern": [6, 16, 28, 31], "technologi": [6, 28, 31], "motiv": [6, 28, 31], "free": [6, 11, 28, 31], "zero": [6, 10, 11, 12, 13, 14, 22, 23, 28, 31], "being": [6, 10, 13, 23, 26, 28, 31], "probabl": [6, 14, 28, 31], "forev": [6, 14, 28, 31], "don": [6, 28, 31], "revers": [6, 28, 31], "cours": [6, 28, 31], "releas": [6, 28, 31], "18": [6, 26, 28, 31], "promin": [6, 28, 31], "ad": [6, 10, 22, 23, 28, 31], "pretti": [6, 28, 29, 31], "cool": [6, 28, 31], "engin": [6, 28, 31], "compani": [6, 28, 31], "veri": [6, 11, 12, 14, 28, 31], "nice": [6, 28, 31], "fpga": [6, 28, 31], "develop": [6, 21, 28, 31], "board": [6, 8, 28, 31], "excel": [6, 28, 31], "unfortun": [6, 13, 28, 31], "orient": [6, 28, 31], "reput": [6, 28, 31], "rapidli": [6, 28, 31], "deterior": [6, 28, 31], "adopt": [6, 28, 31], "unfriendli": [6, 28, 31], "back": [6, 10, 11, 13, 14, 19, 28, 31], "2013": [6, 28, 31], "wind": [6, 28, 31], "down": [6, 12, 14, 26, 28, 31], "taken": [6, 26, 28, 31], "repositori": [6, 28, 31], "privat": [6, 28, 31], "prevent": [6, 23, 26, 28, 31], "uncoordin": [6, 28, 31], "fork": [6, 28, 31], "readthedoc": [6, 28, 31], "futur": [6, 19, 28, 31], "remov": [6, 28, 31], "you": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 28, 29, 31], "project": [6, 28], "advic": [6, 28, 31], "against": [6, 21, 28, 31], "depend": [6, 7, 10, 22, 28], "good": [6, 26, 28, 31], "cut": [6, 28, 31], "apologis": [6, 28, 31], "inconveni": [6, 28, 31], "welcom": 6, "host": [6, 22, 26], "acknowledg": [6, 18], "minim": [6, 14, 26], "attribut": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 27, 28], "o": [6, 7, 18, 20, 26, 28], "error": [6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 26], "refer": [6, 31], "explain": [6, 11, 12, 13, 14, 15, 16, 17, 23], "about": [6, 10, 13, 23, 31], "legaci": [6, 31], "access": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28], "previous": [7, 22, 23, 26, 28], "entri": [7, 14, 21], "instanc": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 28, 29], "should": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 31], "explicitli": [7, 10, 11, 12, 13, 14, 22], "implicitli": 7, "context": [7, 22, 28], "manag": [7, 8, 12, 22, 28], "latter": [7, 11, 12, 14, 21], "often": [7, 16, 26, 28], "prefer": [7, 26, 29], "guarante": 7, "even": [7, 10, 19], "when": [7, 8, 10, 11, 12, 13, 14, 21, 24, 26, 31], "occur": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 26, 27, 28], "leav": 7, "statement": [7, 28], "print": [7, 8, 21, 23, 27], "insid": [7, 10, 13], "bodi": 7, "runtimeerror": 7, "yike": 7, "dozen": 7, "next": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 26, 29], "twelv": [7, 20], "particular": [7, 21, 24, 28, 29, 31], "temperatur": [7, 8, 26, 28], "valid": [7, 10, 11, 13, 14, 19, 21], "interfac": 7, "dynam": 7, "digitaluart": 7, "old": 7, "style": [7, 26], "instead": [7, 10, 11, 13, 14, 23, 24, 26], "digitalspi": 7, "digitali2c": 7, "digitalcan": 7, "digitalswd": 7, "none": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 29], "longer": 7, "onc": [7, 10, 11, 13, 14], "cannot": [7, 8, 10, 21, 22, 23], "autoconfigureset": 7, "auto_configur": 7, "enabl": [7, 8, 10, 11, 12, 13, 14, 16, 21, 22, 26], "disabl": [7, 8, 10, 11, 12, 14, 16, 26], "autoconfigur": [7, 8, 10, 12, 13], "automat": [7, 10, 11, 13, 14, 21, 22], "transmit": [7, 15, 16, 19], "without": [7, 10, 13, 26, 31], "explicit": [7, 10, 11, 13, 14], "amount": [7, 11, 23, 31], "everi": [7, 14, 26], "just": [7, 28], "correspond": [7, 10, 21, 27], "littl": [7, 22, 23], "turn": [7, 18, 27], "off": [7, 10, 26], "unless": [7, 10, 11, 13], "want": [7, 8, 17, 23, 31], "frequent": 7, "between": [7, 10, 11, 13, 14, 16, 17, 24, 31], "With": [7, 10, 11, 28], "appli": [7, 10, 11, 12, 26], "stop": [7, 10, 11, 13, 14, 16, 17, 19, 23, 26], "autoconfigureget": 7, "retriev": [7, 9, 11, 14, 21, 23, 26], "reset": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 28], "immedi": [7, 8, 10, 11, 12, 13, 14, 22, 26], "enableset": [7, 8, 11, 14], "state": [7, 8, 9, 12, 16, 23, 26], "global": [7, 26], "out": [7, 9, 11, 13, 14, 17, 22, 23, 26, 28], "happen": [7, 10, 28], "independ": [7, 10, 11, 26], "triggerset": [7, 13], "pin_index": 7, "trigger_sourc": [7, 10, 11, 13, 14], "dedic": 7, "driven": [7, 11, 12, 14], "e": [7, 8, 10, 12, 13, 14, 19, 21, 23, 24, 26, 27, 29], "g": [7, 8, 10, 14, 19, 21, 23, 24], "appropri": [7, 8, 26], "triggerget": [7, 13], "triggerpc": 7, "triggerslopeinfo": 7, "slope": [7, 10, 11, 13, 14, 26], "paramset": [7, 21], "sure": [7, 13, 21, 28], "assign": [7, 8, 9, 10, 11, 12, 13, 14, 22, 23, 24], "paramget": [7, 21], "sensor": 8, "despit": 8, "name": [8, 10, 22, 23], "doe": [8, 10, 11, 12, 13, 15, 16, 17, 22, 23, 26, 29], "overlap": 8, "perhap": 8, "made": [8, 15, 22, 23, 27, 28, 31], "regular": [8, 11], "bandwidth": [8, 10, 24], "non": [8, 10, 11, 23, 24], "constant": [8, 26], "far": [8, 12, 14], "accomplish": 8, "typic": [8, 28], "three": [8, 10, 13, 21, 25, 29], "fulli": [8, 10, 11, 13], "passiv": 8, "neg": [8, 10, 24], "studi": 8, "understand": [8, 11], "ch": 8, "unit": [8, 9, 10, 11, 13, 14], "n": [8, 10, 11, 13, 14, 24, 26], "aux": [8, 26], "vdd": 8, "dinpp": 8, "diop": 8, "diopp": 8, "slew": [8, 12, 26], "hz": [8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 26], "vio": 8, "dvcc": 8, "zynq": 8, "vccint": 8, "vccaux": 8, "vccbram": 8, "vccpint": 8, "vccpaux": 8, "vccddr": 8, "zynqmin": 8, "zynqmax": 8, "incorrectli": 8, "correct": [8, 17, 18], "voltmet": 8, "ammet": 8, "thermomet": 8, "might": 8, "instanti": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 28, 29], "subsequ": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26], "public": [8, 9, 10, 11, 12, 13, 14, 22, 23, 24], "effect": [8, 10, 13, 26], "transfer": [8, 10, 11, 12, 13, 14, 17, 31], "store": [8, 10, 13, 26], "inquiri": [8, 12, 23], "machin": [8, 9, 12, 26], "enableinfo": 8, "tupl": [8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 23, 24], "verifi": [8, 22], "master": [8, 11, 16, 17], "switch": [8, 26], "queri": [8, 10, 13, 21, 28], "enableget": [8, 11, 14], "enablestatu": 8, "over": [8, 11, 12, 14, 26], "protect": 8, "circuit": [8, 9], "element": [8, 9, 10, 13, 16, 18, 24], "whether": [8, 9, 10, 11, 13, 14], "respect": [8, 10, 13], "master_en": 8, "channelnam": 8, "channel_index": [8, 9, 10, 11, 14, 15, 16, 17, 19], "str": [8, 14, 21, 22, 23, 27, 29], "text": [8, 26], "short": [8, 9, 11, 23], "channelinfo": 8, "channelnodenam": 8, "node_index": 8, "channelnodeinfo": 8, "physic": [8, 9], "channelnodesetinfo": 8, "float": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24], "thing": [8, 26, 31], "etc": 8, "minimum": [8, 10, 26], "maximum": [8, 10, 12, 13, 14, 26], "step": [8, 10, 13, 21, 29], "resolut": [8, 10, 14, 23], "channelnodeset": 8, "node_valu": 8, "channelnodeget": 8, "channelnodestatusinfo": 8, "rang": [8, 9, 10, 11, 13, 14, 26], "channelnodestatu": 8, "recent": [8, 10, 26, 31], "fetch": [8, 26], "updat": [8, 10, 11, 13, 14], "variabl": [8, 9, 11, 12, 14, 15, 16, 17, 18, 19], "belong": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "propag": 9, "lack": [9, 11, 14], "mean": [9, 10, 11, 13, 14, 17, 19, 21, 26], "perform": [9, 10, 11, 13, 14, 16, 18, 21, 22, 23, 24, 26, 29, 31], "modeset": [9, 11, 17], "w1": 9, "c1": 9, "dut": 9, "c2": 9, "r": 9, "gnd": 9, "modeget": [9, 11], "referenceset": 9, "load": [9, 14, 21, 28], "ohm": [9, 10, 26], "referenceget": 9, "frequencyset": [9, 10, 11, 17], "frequencyget": [9, 10, 11], "amplitudeset": [9, 11], "volt": [9, 10, 11, 26], "amplitudeget": [9, 11], "offsetset": [9, 11], "offsetget": [9, 11], "probeset": 9, "resist": [9, 26], "capacit": [9, 26], "probe": [9, 10, 23], "farad": [9, 26], "probeget": 9, "capac": 9, "periodset": 9, "figur": [9, 10, 11, 13, 14, 22, 23], "why": 9, "periodget": 9, "compreset": 9, "comput": [9, 28], "compset": 9, "open_resist": 9, "open_react": 9, "short_resist": 9, "short_react": 9, "reactanc": [9, 26], "compget": 9, "statusinput": 9, "gain": 9, "radian": [9, 26], "statuswarn": 9, "warn": 9, "scope": 9, "exceed": 9, "both": [9, 12, 14, 21, 24, 27, 28], "request": [9, 10, 11, 13, 14, 15, 17, 23, 26], "normal": [10, 11, 13, 14, 19, 26], "stand": [10, 11, 13, 14], "alon": [10, 11, 13, 14], "behav": [10, 13], "As": [10, 11, 13, 14, 21, 27, 28, 29], "prepar": [10, 11, 13, 14, 19], "goe": [10, 11, 13, 14], "through": [10, 11, 13, 14, 21, 29], "variou": [10, 11, 13, 14], "transit": [10, 11, 13, 14, 26], "preparatori": [10, 11, 13, 14], "auto": [10, 11, 13, 14], "reconfigur": [10, 13], "stage": [10, 11, 13, 14], "enter": [10, 11, 13, 14, 28], "momentarili": [10, 13], "push": [10, 13, 14, 26], "thereaft": [10, 13], "go": [10, 11, 13, 14, 23, 29, 31], "mark": [10, 13], "begin": [10, 13], "sequenc": [10, 11, 13, 14, 26], "acquir": [10, 13, 26], "until": [10, 11, 13, 14, 26], "enough": [10, 13], "react": [10, 13], "must": [10, 11, 12, 13, 14, 19, 23, 24, 31], "yield": [10, 13, 28], "prior": [10, 13, 19, 26], "moment": [10, 13], "abl": [10, 13], "proce": [10, 11, 13, 14], "soon": [10, 11, 13, 14], "complet": [10, 13, 22, 23, 26, 29], "reach": [10, 11, 13, 14, 26, 31], "fill": [10, 13], "finish": [10, 11, 13, 14], "complic": [10, 11, 12, 13, 14, 29], "categor": [10, 11, 13, 14], "shortli": [10, 11, 13, 14, 28], "found": [10, 11, 13, 14, 23, 28, 29], "like": [10, 11, 13, 14, 23, 31], "bulk": [10, 28], "nois": [10, 13, 24, 26], "elabor": [10, 13], "timestamp": [10, 13], "statustim": [10, 13], "statussampl": 10, "flag": [10, 13, 21], "statusautotrigg": [10, 13], "left": [10, 11, 13, 14], "statussamplesleft": [10, 13], "statussamplesvalid": [10, 13, 26], "write": [10, 13, 16, 17, 18, 26], "index": [10, 11, 13, 22, 23], "statusindexwrit": [10, 13, 26], "statusrecord": [10, 13], "read_data": [10, 13], "statusdata": [10, 13], "statusdata2": [10, 13], "raw": 10, "statusdata16": 10, "statusnois": 10, "statusnoise2": [10, 13], "adc": [10, 26], "recordlengthset": [10, 26], "size": [10, 13, 14, 15, 23, 26, 28, 29], "buffersizeinfo": [10, 13], "noisesizeinfo": 10, "acquisitionmodeinfo": [10, 13], "distinguish": [10, 13], "real": [10, 24, 26], "channelenableset": 10, "channelfilterinfo": 10, "channelrangeinfo": 10, "channeloffsetinfo": 10, "attenu": 10, "channelattenuationset": 10, "channelbandwidthset": 10, "channelimpedanceset": 10, "coupl": [10, 26], "channelcouplinginfo": 10, "own": [10, 11, 13, 14, 17, 28, 31], "triggersourceinfo": [10, 11, 13, 14], "triggerpositioninfo": [10, 13], "timeout": [10, 13, 16, 26], "triggerautotimeoutinfo": [10, 13], "triggerforc": 10, "nine": [10, 26], "hold": 10, "triggerholdoffinfo": 10, "triggertypeinfo": 10, "triggerchannelinfo": 10, "triggerfilterinfo": 10, "triggerlevelinfo": 10, "hysteresi": 10, "triggerhysteresisinfo": 10, "triggerconditioninfo": 10, "triggerlengthinfo": 10, "triggerlengthconditioninfo": 10, "counterinfo": [10, 13, 14], "counterstatu": [10, 13], "determin": [10, 11, 12, 13, 14, 23], "samplingsourceset": 10, "samplingslopeset": 10, "delai": [10, 17], "samplingdelayset": 10, "otherwis": [10, 13, 16, 19, 23, 27, 29], "addit": [10, 26], "ongo": [10, 13], "read_data_flag": [10, 13], "respons": [10, 11, 13, 14], "regardless": [10, 13], "posix": [10, 13], "numer": [10, 13], "denomin": [10, 13], "fraction": [10, 13], "hasn": [10, 13], "convers": [10, 26], "finit": [10, 13], "durat": [10, 11, 13, 14, 29], "equal": [10, 13, 24], "max": [10, 26], "scan": [10, 13], "bar": [10, 13], "loss": 10, "overwritten": 10, "corrupt": [10, 11, 13], "previou": 10, "try": [10, 16, 27], "optim": [10, 23, 26], "loop": [10, 11], "reduc": 10, "less": [10, 26], "record_length": 10, "buffer_s": [10, 13], "sample_frequ": [10, 24], "lost": [10, 11, 13], "order": [10, 12, 13, 14, 17, 31], "ndarrai": [10, 11, 13, 24], "calcul": [10, 24], "binari": 10, "channeloffsetget": 10, "channelrangeget": 10, "raw_sampl": 10, "calibr": 10, "1d": [10, 13, 24], "arrai": [10, 13, 24], "nd": 10, "sign": 10, "least": [10, 13, 31], "signific": 10, "stretch": [10, 16], "convert": [10, 21], "copi": 10, "125": 10, "mhz": [10, 26], "alwai": [10, 26], "record_dur": 10, "arbitrari": [10, 11, 14], "recordlengthget": 10, "min": [10, 26], "individu": [10, 11, 14, 22], "channelfilterset": 10, "info": [10, 11, 12, 13, 14, 23, 26], "buffersizeset": [10, 13], "adjust": [10, 26], "express": [10, 14, 29], "clip": 10, "noisesizeset": 10, "noise_buffer_s": 10, "suggest": 10, "noisesizeget": 10, "divid": [10, 13, 14, 26], "accord": [10, 11, 14, 19, 26], "impli": 10, "acquisitionmodeset": [10, 13], "acquisition_mod": [10, 13], "acquisitionmodeget": [10, 13], "fiilter": 10, "channel_en": 10, "channelenableget": 10, "channel_filt": 10, "channelfilterget": 10, "ideal": 10, "channelrangestep": 10, "represent": [10, 24], "discret": 10, "channelrangeset": 10, "channel_rang": 10, "transform": [10, 24], "channeloffsetset": 10, "channel_offset": 10, "channel_attenu": 10, "dimensionless": 10, "factor": [10, 24, 26], "compens": 10, "direct": 10, "channelattenuationget": 10, "channel_bandwidth": 10, "channelbandwidthget": 10, "channel_imped": 10, "channelimpedanceget": 10, "channelcouplingset": 10, "channel_coupl": 10, "analogcoupl": 10, "channelcouplingget": 10, "dc": [10, 26], "ac": [10, 26], "triggersourceset": [10, 11, 13, 14], "triggersourceget": [10, 11, 13, 14], "triggerpositionset": [10, 13], "trigger_posit": 10, "befor": [10, 11, 12, 13, 14, 17, 23, 26, 27, 31], "place": [10, 13], "middl": 10, "center": 10, "triggerpositionget": [10, 13], "triggerpositionstatu": 10, "triggerautotimeoutset": [10, 13], "trigger_auto_timeout": 10, "desktop": 10, "triggerautotimeoutget": [10, 13], "assert": 10, "act": [10, 11, 19, 28], "artifici": 10, "holdoff": 10, "recogn": 10, "triggerholdoffset": 10, "trigger_detector_holdoff": 10, "triggerholdoffget": 10, "edg": [10, 13, 26], "triggertypeset": 10, "trigger_detector_typ": 10, "triggertypeget": 10, "triggerchannelset": 10, "trigger_detector_channel_index": 10, "triggerchannelget": 10, "triggerfilterset": 10, "trigger_detector_filt": 10, "triggerfilterget": 10, "triggerlevelset": 10, "trigger_detector_level": 10, "triggerlevelget": 10, "triggerhysteresisset": 10, "trigger_detector_hysteresi": 10, "triggerhysteresisget": 10, "triggerconditionset": 10, "trigger_detector_condit": 10, "triggerconditionget": 10, "triggerlengthset": [10, 13], "trigger_detector_length": 10, "triggerlengthget": 10, "triggerlengthconditionset": 10, "trigger_detector_length_condit": 10, "triggerlengthconditionget": 10, "counterset": [10, 13, 14], "counterget": [10, 13, 14], "sampling_sourc": 10, "samplingsourceget": 10, "sampling_slop": 10, "samplingslopeget": 10, "sampling_delai": 10, "samplingdelayget": 10, "design": 11, "masterset": 11, "becaus": [11, 23, 31], "repeat": [11, 14], "flow": [11, 14], "decrement": [11, 14], "unequ": [11, 14, 27], "produc": [11, 14, 26, 28], "did": [11, 14, 23], "becom": [11, 14], "form": 11, "fm": [11, 26], "vari": [11, 26], "combin": [11, 16, 22], "synthes": 11, "onto": 11, "dac": 11, "earli": 11, "implement": [11, 12, 19, 24, 26, 28, 29, 31], "introduct": 11, "concept": 11, "contribut": 11, "shape": [11, 26], "block": [11, 23], "triangl": [11, 26], "ramp": [11, 26], "modifi": 11, "alter": 11, "symmetr": [11, 24], "upload": [11, 14], "unusu": [11, 23, 24], "separ": [11, 21, 22, 27], "cycl": [11, 13, 14], "preced": [11, 12, 14, 23], "synchron": [11, 13, 26], "waitinfo": [11, 14], "runinfo": [11, 14], "repeatinfo": [11, 14], "repeattriggerset": [11, 14], "triggerslopeset": [11, 13, 14], "idleinfo": [11, 14], "limitationinfo": 11, "understood": [11, 13, 16, 26], "customamfmenableset": 11, "nodeinfo": 11, "nodeenableset": [11, 28], "nodefunctioninfo": 11, "nodefrequencyinfo": 11, "nodeamplitudeinfo": 11, "nodeoffsetinfo": 11, "nodesymmetryinfo": 11, "deg": 11, "nodephaseinfo": 11, "nodedatainfo": 11, "nodeplaystatu": 11, "nodeplaydata": 11, "replac": [11, 26], "functioninfo": 11, "amplitudeinfo": 11, "offsetinfo": 11, "symmetryinfo": 11, "phaseinfo": 11, "datainfo": [11, 14], "playstatu": 11, "playdata": 11, "waitset": [11, 14], "wait_dur": [11, 14], "waitget": [11, 14], "runset": [11, 14], "run_dur": [11, 14], "runget": [11, 14], "runstatu": [11, 14], "repeat_trigger_flag": [11, 14], "repeattriggerget": [11, 14], "repeatset": [11, 14], "repeatget": [11, 14], "repeatstatu": [11, 14], "decreas": 11, "master_channel_index": 11, "masterget": 11, "trigger_slop": [11, 13, 14], "triggerslopeget": [11, 13, 14], "idleset": [11, 14, 17], "idleget": [11, 14], "amp": [11, 12, 26], "limitationset": 11, "limitationget": 11, "customamfmenableget": 11, "nodeenableget": 11, "nodefunctionset": [11, 28], "func": [11, 26], "nodefunctionget": 11, "nodefrequencyset": [11, 28], "nodefrequencyget": 11, "nodeamplitudeset": 11, "nodeamplitudeget": 11, "nodeoffsetset": 11, "millisecond": 11, "nodeoffsetget": 11, "sinepow": [11, 26], "nodesymmetryset": 11, "nodesymmetryget": 11, "degre": [11, 26], "nodephaseset": 11, "nodephaseget": 11, "nodedataset": 11, "np": [11, 24], "functionset": 11, "functionget": 11, "symmetryset": 11, "symmetryget": 11, "phaseset": 11, "phaseget": 11, "dataset": [11, 14, 17], "simpler": 12, "accommod": 12, "fast": [12, 23, 24], "former": [12, 14], "realtim": [12, 14], "greater": [12, 14, 26], "rule": [12, 14], "topic": [12, 14], "summari": [12, 14], "dio": [12, 13, 14], "outputen": [12, 14], "z": [12, 14, 17, 24], "thu": [12, 14], "ensur": [12, 14], "circumst": [12, 14, 27], "necessari": [12, 14], "64": [12, 14], "variant": 12, "tri": 12, "outputenableinfo": 12, "bitmask": [12, 13], "known": [12, 23], "outputenableinfo64": 12, "outputenableset": 12, "output_en": 12, "outputenableset64": 12, "outputenableget": 12, "outputenableget64": 12, "outputinfo": [12, 14], "outputinfo64": 12, "outputset": [12, 14], "outputset64": 12, "outputget": [12, 14], "outputget64": 12, "pullinfo": 12, "pull": [12, 14, 26], "pullset": 12, "pull_up_mask": 12, "pull_down_mask": 12, "pullget": 12, "driveinfo": 12, "driveset": 12, "driveget": 12, "inputinfo": 12, "inputinfo64": 12, "inputstatu": 12, "inputstatus64": 12, "compress": 13, "statuscompress": 13, "byte": [13, 15, 19], "statuscompressed2": 13, "internalclockinfo": [13, 14], "clocksourceinfo": 13, "dividerinfo": [13, 14], "aspect": 13, "format": [13, 23, 31], "sampleformatset": 13, "inputorderset": 13, "samplemodeinfo": 13, "sensibl": 13, "samplesensibleset": 13, "triggerprefillset": 13, "spars": 13, "experiment": 13, "mask": 13, "triggerresetset": 13, "triggercountset": 13, "match": [13, 29], "triggermatchset": 13, "mix": [13, 26], "undocu": [13, 16, 26], "mixedset": 13, "sample_format": 13, "sampleformatget": 13, "unsign": [13, 26], "word": [13, 17, 18], "count_byt": 13, "first_sampl": 13, "clocksourceset": 13, "clock_sourc": 13, "clocksourceget": 13, "dividerset": [13, 14], "dividerget": [13, 14], "num_bit": 13, "dio_first": 13, "39": 13, "din": 13, "31": [13, 26], "samplemodeset": 13, "sample_mod": 13, "samplemodeget": 13, "compression_bit": 13, "unknown": [13, 14, 23, 26], "samplesensibleget": 13, "samples_before_trigg": 13, "triggerprefillget": 13, "samples_after_trigg": 13, "desir": [13, 14, 22, 26, 31], "auto_timeout": 13, "rise": [13, 26], "fall": [13, 26], "level_low": 13, "level_high": 13, "edge_ris": 13, "edge_fal": 13, "lead": [13, 21], "satisfi": 13, "bitfield": 13, "restart": 13, "min_length": 13, "max_length": 13, "sync_mod": 13, "pwm": 13, "wire": [13, 18], "bit_stuf": 13, "deseri": 13, "shift": [13, 26], "accordingli": 13, "msb": [13, 17], "stuf": 13, "statusoutput": 14, "typeinfo": 14, "init": [14, 26], "dividerinitset": 14, "counter": 14, "counterinitset": 14, "repetitit": 14, "repetitioninfo": 14, "playdataset": 14, "playrateset": 14, "offici": [14, 26], "maxim": [14, 23, 28, 29], "special": [14, 27], "48": 14, "doubl": 14, "nest": 14, "enable_flag": 14, "choic": [14, 19, 26], "tristat": [14, 26], "output_valu": 14, "typeset": 14, "output_typ": 14, "typeget": 14, "idle_mod": [14, 17], "divider_init_valu": 14, "dividerinitget": 14, "low_count": 14, "high_count": 14, "high_flag": 14, "counter_init_valu": 14, "counter_init": 14, "counterinitget": 14, "repetit": 14, "reload": 14, "twice": 14, "adp3x50": [14, 26], "repetitionset": 14, "repetitionget": 14, "lsb": [14, 17], "interpret": 14, "bits_per_sampl": 14, "count_of_sampl": 14, "pushpul": [14, 26], "opendrain": [14, 26], "opensourc": [14, 26], "implic": 14, "anyth": 14, "els": 14, "Its": [14, 26], "playupdateset": 14, "index_of_sampl": 14, "suffici": [14, 23], "playback_r": 14, "background": [15, 18, 23], "polar": [15, 17, 19], "vid": 15, "extend": [15, 22], "remot": [15, 26], "rx": [15, 19], "tx": [15, 16, 17, 19], "rateset": [15, 16, 18, 19], "data_r": [15, 16, 18], "transmitt": [15, 18, 19], "polarityset": [15, 19], "txset": [15, 19], "outgo": [15, 19], "rxset": [15, 19], "incom": [15, 19], "v_id": 15, "influenc": [16, 17, 26], "solv": 16, "lockup": 16, "stretchset": 16, "stretch_en": 16, "encount": [16, 19, 31], "khz": [16, 28], "400": 16, "higher": [16, 28, 31], "datasheet": [16, 17], "timeoutset": 16, "readnakset": 16, "nak_last_read_byt": 16, "nak": [16, 18], "sclset": 16, "scl": 16, "sdaset": 16, "sda": 16, "writeread": [16, 17], "address": [16, 18, 22], "number_of_rx_byt": 16, "target": 16, "octet": 16, "number_of_word": [16, 17], "writeon": [16, 17], "spystart": 16, "spy": 16, "spystatu": 16, "max_data_s": 16, "clockset": [17, 18], "spi_data_bit": 17, "dq0": 17, "mosi": 17, "siso": 17, "dq1": 17, "miso": 17, "dq2": 17, "dq3": 17, "spi_mod": 17, "cpol": 17, "cpha": 17, "slave": 17, "orderset": 17, "bit_ord": 17, "delayset": 17, "cmd": 17, "selectset": 17, "chip": 17, "talk": 17, "At": 17, "transfer_typ": 17, "bits_per_word": 17, "dual": 17, "quad": 17, "writeread16": 17, "writeread32": 17, "readon": 17, "read16": 17, "read32": 17, "write16": 17, "write32": 17, "cmdwriteread": 17, "command_bit": 17, "command_valu": 17, "dummy_bit": 17, "dummi": 17, "cmdwriteread16": 17, "cmdwriteread32": 17, "cmdread": 17, "cmreadon": 17, "cmdread16": 17, "cmdread32": 17, "cmdwrite": 17, "cmdwriteon": 17, "cmdwrite16": 17, "cmdwrite32": 17, "serial": [18, 19, 22, 23, 28, 29], "debug": 18, "ioset": 18, "turnset": 18, "turn_set": 18, "trailset": 18, "trail_set": 18, "trail": 18, "parkset": 18, "park_set": 18, "park": 18, "nakset": 18, "nak_set": 18, "ioidleset": 18, "io_idle_set": 18, "reset_valu": 18, "trail_valu": 18, "port": [18, 19], "a32": 18, "write_data": 18, "dataport": 18, "accessport": 18, "ok": 18, "crc": 18, "pariti": [18, 19], "univers": 19, "asynchron": 19, "unclear": [19, 26], "investig": 19, "viewpoint": 19, "basic": [19, 23], "commonli": 19, "handshak": 19, "rt": 19, "ct": 19, "commun": [19, 22], "notabl": 19, "baudrat": 19, "baud": 19, "300": 19, "600": [19, 26], "1200": 19, "2400": 19, "4800": 19, "9600": 19, "19200": 19, "38400": 19, "57600": 19, "115200": 19, "bitsset": 19, "databit": 19, "parityset": 19, "odd": 19, "invert": 19, "stopset": 19, "stopbit": 19, "round": 19, "highest": [19, 29], "declar": [19, 26], "anticip": 19, "tx_data": 19, "rx_max": 19, "importantli": 21, "getvers": 21, "__init__": 21, "check_library_vers": 21, "serv": 21, "exactli": 21, "mismatch": 21, "critic": 21, "annot": 21, "incompat": 21, "catch": [21, 27], "deriv": [21, 27], "unexpect": 21, "fail": [21, 22], "getlasterrormsg": 21, "consist": [21, 26], "newlin": [21, 27], "compos": 21, "major": 21, "minor": 21, "build": [21, 23], "device_paramet": 21, "ti": 21, "dwfparamet": 21, "complement": 22, "underli": [22, 23, 27, 31], "device_index": [22, 23], "config_index": [22, 23], "fdwfdeviceopen": 22, "fdwfdeviceconfigopen": 22, "base": [22, 23, 26, 27, 31], "discov": 22, "henc": 22, "ex": 22, "prefix": [22, 23, 26], "meth": 22, "sn": [22, 23], "config": [22, 26], "ip": 22, "network": [22, 23, 26], "hostnam": 22, "password": 22, "secur": 22, "tl": 22, "encrypt": 22, "syntax": 22, "semant": 22, "comma": 22, "across": 22, "potenti": 23, "revis": [23, 26], "lastli": [23, 31], "examin": [23, 26, 29], "alloc": 23, "resourc": 23, "device_count": 23, "enum_filt": [23, 29], "enumeratestop": 23, "invoc": 23, "approxim": 23, "advantag": 23, "thread": 23, "enumerateinfo": 23, "fdwfenuminfo": 23, "repli": 23, "id": [23, 26, 29], "fdwfenumdevicetyp": 23, "cast": 23, "deviceisopen": 23, "alreadi": [23, 26], "denot": [23, 26], "serialnumb": 23, "uniqu": [23, 29], "hex": 23, "discard": 23, "abov": [23, 28, 29], "somewhat": [23, 31], "union": 23, "analoginchannel": 23, "analoginbit": 23, "analoginfrequ": 23, "ham": [24, 26], "hamming_window": 24, "noise_equivalent_bandwidth": 24, "winfunc": 24, "beta": 24, "coeffici": 24, "kaiser": [24, 26], "unus": [24, 26], "scale": 24, "sum": [24, 26], "w": 24, "len": 24, "scipi": 24, "fft": 24, "fourier": 24, "dimension": 24, "magnitud": 24, "matlab": 24, "vector": 24, "rfft": 24, "exp": 24, "1j": 24, "simpli": [24, 26, 29], "num_bin": 24, "first_freq": 24, "last_freq": 24, "chirp": 24, "bin": 24, "inclus": 24, "czt": 24, "throughout": 26, "replic": 26, "trigcond": 26, "st": 26, "definit": 26, "enum": 26, "rather": 26, "typedef": 26, "alia": 26, "char": 26, "const": 26, "dwfstatereadi": 26, "dwfstateconfig": 26, "dwfstateprefil": 26, "dwfstatearm": 26, "dwfstatewait": 26, "dwfstatetrigg": 26, "dwfstaterun": 26, "dwfstatedon": 26, "renam": 26, "enumfilt": 26, "devid": 26, "devver": 26, "dwfparam": 26, "trigsrc": 26, "acqmod": 26, "trigtyp": 26, "triglen": 26, "analogoutnod": 26, "appear": 26, "gear": 26, "toward": 26, "dmm": 26, "offer": 26, "adp": 26, "ones": 26, "few": [26, 27], "field": 26, "noerc": 26, "unknownerror": 26, "pend": 26, "apilocktimeout": 26, "alreadyopen": 26, "notsupport": 26, "invalidparameter0": 26, "invalid": 26, "invalidparameter1": 26, "invalidparameter2": 26, "invalidparameter3": 26, "19": [26, 28, 31], "invalidparameter4": 26, "constrain": 26, "134217728": 26, "0x08000000": 26, "embed": 26, "16777216": 26, "0x01000000": 26, "audio": 26, "33554432": 26, "sound": [26, 29], "card": 26, "devicess": 26, "0x02000000": 26, "demo": 26, "0x04000000": 26, "exclus": [26, 28], "tooltip": 26, "reveal": 26, "9": 26, "eexplor": 26, "eclyps": 26, "adp5250": 26, "dp": 26, "3340": 26, "cover": 26, "eexplorerc": 26, "eexplorer": 26, "eexplorerf": 26, "f": 26, "discoverya": 26, "discoveryb": 26, "discoveryc": 26, "keeponclos": 26, "keep": 26, "multicolor": 26, "color": 26, "blue": 26, "green": 26, "percent": 26, "lab": 26, "sensit": 26, "optic": 26, "dark": 26, "drift": 26, "shut": 26, "consumpt": 26, "1000": [26, 28], "ma": 26, "system": [26, 31], "extfreq": 26, "clockmod": 26, "oscil": 26, "templimit": 26, "threshold": 26, "celciu": 26, "freqphas": 26, "rectangular": 26, "k": 26, "triangular": 26, "hann": 26, "cosin": 26, "blackmanharri": 26, "blackman": 26, "harri": 26, "flattop": 26, "flat": 26, "deliv": 26, "pre": 26, "13": 26, "re": [26, 31], "single1": 26, "fifo": 26, "ignor": [26, 29], "increas": 26, "imag": 26, "circularli": 26, "heart": 26, "overscan": 26, "algorithm": 26, "lower": [26, 27], "resampl": 26, "obviou": 26, "averag": 26, "suppress": 26, "sometim": 26, "know": 26, "hide": 26, "fact": 26, "decim": 26, "ratio": 26, "snr": 26, "suffer": 26, "outlier": 26, "easili": 26, "seen": 26, "minmax": 26, "th": 26, "interleav": 26, "concers": 26, "averagefit": 26, "fit": 26, "rampup": 26, "rampdown": 26, "uniformli": 26, "distribut": 26, "trapezium": 26, "custompattern": 26, "28": 26, "divis": 26, "verbatim": 26, "playpattern": 26, "29": 26, "stream": 26, "30": 26, "latest": [26, 31], "glitch": 26, "ring": 26, "drain": 26, "threestat": 26, "random": 26, "rom": 26, "lookup": 26, "primarili": 26, "zet": 26, "multimet": 26, "impedancephas": 26, "admitt": 26, "siemen": 26, "admittancephas": 26, "conduct": 26, "suscept": 26, "seriescapacit": 26, "seri": 26, "parallelcapacit": 26, "parallel": 26, "seriesinduct": 26, "induct": 26, "henri": 26, "parallelinduct": 26, "dissip": 26, "qualiti": 26, "vrm": 26, "vreal": 26, "vimag": 26, "imaginari": 26, "irm": 26, "ireal": 26, "iimag": 26, "intend": [26, 31], "diod": 26, "dcvoltag": 26, "acvoltag": 26, "dccurrent": 26, "accurr": 26, "dclowcurr": 26, "aclowcurr": 26, "use_pydwf": 27, "fortun": [27, 31], "inspect": 27, "dwerc": 27, "textual": 27, "almost": [27, 28], "Such": 27, "inherit": 27, "diagram": 27, "trivial": 27, "empti": 27, "easier": 27, "msg": 27, "simplifi": 28, "recur": 28, "tone": 28, "self": 28, "press": 28, "mind": 28, "interact": [28, 31], "summar": 28, "comprehens": 28, "later": 28, "further": 28, "reflect": 29, "symbol": 29, "use_dwf_devic": 29, "encapsul": 29, "serial_number_filt": 29, "device_id_filt": 29, "device_version_filt": 29, "score_func": 29, "callabl": 29, "dict": 29, "reachabl": 29, "Then": 29, "exclud": 29, "whose": 29, "fine": 29, "lambda": 29, "configuration_info": 29, "dictionari": 29, "kei": 29, "entir": 29, "unsuit": 29, "score": 29, "suitabl": 29, "construct": 29, "def": 29, "maximize_analog_in_buffer_s": 29, "config_paramet": 29, "use_device_with_big_analog_in_buff": 29, "final": 29, "newli": 29, "candid": 29, "usabl": 29, "lineup": 31, "intel": 31, "websit": 31, "among": 31, "reader": 31, "who": 31, "learn": 31, "rebrand": 31, "extens": 31, "haven": 31, "problem": 31, "pleas": 31, "issu": 31, "tracker": 31, "adept": 31, "speak": 31, "gui": 31, "consider": 31, "http": 31, "com": 31, "sidneycadot": 31, "org": 31, "link": 31, "io": 31, "en": 31, "thank": 31, "awesom": 31, "cross": 31, "platform": 31, "sdk": 31, "great": 31, "effort": 31, "tech": 31, "vicin": 31, "delft": 31, "netherland": 31, "longtim": 31, "friend": 31, "pepijn": 31, "proof": 31, "hi": 31, "perspect": 31, "came": 31, "petra": 31, "patienc": 31, "equip": 31, "live": 31, "room": 31, "enthusiasm": 31, "hobbi": 31, "enthusiast": 31, "sens": 31, "sc": 31}, "objects": {"pydwf.core.api.analog_impedance": [[9, 0, 1, "", "AnalogImpedance"]], "pydwf.core.api.analog_impedance.AnalogImpedance": [[9, 1, 1, "", "amplitudeGet"], [9, 1, 1, "", "amplitudeSet"], [9, 1, 1, "", "compGet"], [9, 1, 1, "", "compReset"], [9, 1, 1, "", "compSet"], [9, 1, 1, "", "configure"], [9, 2, 1, "", "device"], [9, 1, 1, "", "frequencyGet"], [9, 1, 1, "", "frequencySet"], [9, 1, 1, "", "modeGet"], [9, 1, 1, "", "modeSet"], [9, 1, 1, "", "offsetGet"], [9, 1, 1, "", "offsetSet"], [9, 1, 1, "", "periodGet"], [9, 1, 1, "", "periodSet"], [9, 1, 1, "", "probeGet"], [9, 1, 1, "", "probeSet"], [9, 1, 1, "", "referenceGet"], [9, 1, 1, "", "referenceSet"], [9, 1, 1, "", "reset"], [9, 1, 1, "", "status"], [9, 1, 1, "", "statusInput"], [9, 1, 1, "", "statusMeasure"], [9, 1, 1, "", "statusWarning"]], "pydwf.core.api.analog_in": [[10, 0, 1, "", "AnalogIn"]], "pydwf.core.api.analog_in.AnalogIn": [[10, 1, 1, "", "acquisitionModeGet"], [10, 1, 1, "", "acquisitionModeInfo"], [10, 1, 1, "", "acquisitionModeSet"], [10, 1, 1, "", "bitsInfo"], [10, 1, 1, "", "bufferSizeGet"], [10, 1, 1, "", "bufferSizeInfo"], [10, 1, 1, "", "bufferSizeSet"], [10, 1, 1, "", "channelAttenuationGet"], [10, 1, 1, "", "channelAttenuationSet"], [10, 1, 1, "", "channelBandwidthGet"], [10, 1, 1, "", "channelBandwidthSet"], [10, 1, 1, "", "channelCount"], [10, 1, 1, "", "channelCounts"], [10, 1, 1, "", "channelCouplingGet"], [10, 1, 1, "", "channelCouplingInfo"], [10, 1, 1, "", "channelCouplingSet"], [10, 1, 1, "", "channelEnableGet"], [10, 1, 1, "", "channelEnableSet"], [10, 1, 1, "", "channelFilterGet"], [10, 1, 1, "", "channelFilterInfo"], [10, 1, 1, "", "channelFilterSet"], [10, 1, 1, "", "channelImpedanceGet"], [10, 1, 1, "", "channelImpedanceSet"], [10, 1, 1, "", "channelOffsetGet"], [10, 1, 1, "", "channelOffsetInfo"], [10, 1, 1, "", "channelOffsetSet"], [10, 1, 1, "", "channelRangeGet"], [10, 1, 1, "", "channelRangeInfo"], [10, 1, 1, "", "channelRangeSet"], [10, 1, 1, "", "channelRangeSteps"], [10, 1, 1, "", "configure"], [10, 1, 1, "", "counterGet"], [10, 1, 1, "", "counterInfo"], [10, 1, 1, "", "counterSet"], [10, 1, 1, "", "counterStatus"], [10, 2, 1, "", "device"], [10, 1, 1, "", "frequencyGet"], [10, 1, 1, "", "frequencyInfo"], [10, 1, 1, "", "frequencySet"], [10, 1, 1, "", "noiseSizeGet"], [10, 1, 1, "", "noiseSizeInfo"], [10, 1, 1, "", "noiseSizeSet"], [10, 1, 1, "", "recordLengthGet"], [10, 1, 1, "", "recordLengthSet"], [10, 1, 1, "", "reset"], [10, 1, 1, "", "samplingDelayGet"], [10, 1, 1, "", "samplingDelaySet"], [10, 1, 1, "", "samplingSlopeGet"], [10, 1, 1, "", "samplingSlopeSet"], [10, 1, 1, "", "samplingSourceGet"], [10, 1, 1, "", "samplingSourceSet"], [10, 1, 1, "", "status"], [10, 1, 1, "", "statusAutoTriggered"], [10, 1, 1, "", "statusData"], [10, 1, 1, "", "statusData16"], [10, 1, 1, "", "statusData2"], [10, 1, 1, "", "statusIndexWrite"], [10, 1, 1, "", "statusNoise"], [10, 1, 1, "", "statusNoise2"], [10, 1, 1, "", "statusRecord"], [10, 1, 1, "", "statusSample"], [10, 1, 1, "", "statusSamplesLeft"], [10, 1, 1, "", "statusSamplesValid"], [10, 1, 1, "", "statusTime"], [10, 1, 1, "", "triggerAutoTimeoutGet"], [10, 1, 1, "", "triggerAutoTimeoutInfo"], [10, 1, 1, "", "triggerAutoTimeoutSet"], [10, 1, 1, "", "triggerChannelGet"], [10, 1, 1, "", "triggerChannelInfo"], [10, 1, 1, "", "triggerChannelSet"], [10, 1, 1, "", "triggerConditionGet"], [10, 1, 1, "", "triggerConditionInfo"], [10, 1, 1, "", "triggerConditionSet"], [10, 1, 1, "", "triggerFilterGet"], [10, 1, 1, "", "triggerFilterInfo"], [10, 1, 1, "", "triggerFilterSet"], [10, 1, 1, "", "triggerForce"], [10, 1, 1, "", "triggerHoldOffGet"], [10, 1, 1, "", "triggerHoldOffInfo"], [10, 1, 1, "", "triggerHoldOffSet"], [10, 1, 1, "", "triggerHysteresisGet"], [10, 1, 1, "", "triggerHysteresisInfo"], [10, 1, 1, "", "triggerHysteresisSet"], [10, 1, 1, "", "triggerLengthConditionGet"], [10, 1, 1, "", "triggerLengthConditionInfo"], [10, 1, 1, "", "triggerLengthConditionSet"], [10, 1, 1, "", "triggerLengthGet"], [10, 1, 1, "", "triggerLengthInfo"], [10, 1, 1, "", "triggerLengthSet"], [10, 1, 1, "", "triggerLevelGet"], [10, 1, 1, "", "triggerLevelInfo"], [10, 1, 1, "", "triggerLevelSet"], [10, 1, 1, "", "triggerPositionGet"], [10, 1, 1, "", "triggerPositionInfo"], [10, 1, 1, "", "triggerPositionSet"], [10, 1, 1, "", "triggerPositionStatus"], [10, 1, 1, "", "triggerSourceGet"], [10, 1, 1, "", "triggerSourceInfo"], [10, 1, 1, "", "triggerSourceSet"], [10, 1, 1, "", "triggerTypeGet"], [10, 1, 1, "", "triggerTypeInfo"], [10, 1, 1, "", "triggerTypeSet"]], "pydwf.core.api.analog_io": [[8, 0, 1, "", "AnalogIO"]], "pydwf.core.api.analog_io.AnalogIO": [[8, 1, 1, "", "channelCount"], [8, 1, 1, "", "channelInfo"], [8, 1, 1, "", "channelName"], [8, 1, 1, "", "channelNodeGet"], [8, 1, 1, "", "channelNodeInfo"], [8, 1, 1, "", "channelNodeName"], [8, 1, 1, "", "channelNodeSet"], [8, 1, 1, "", "channelNodeSetInfo"], [8, 1, 1, "", "channelNodeStatus"], [8, 1, 1, "", "channelNodeStatusInfo"], [8, 1, 1, "", "configure"], [8, 2, 1, "", "device"], [8, 1, 1, "", "enableGet"], [8, 1, 1, "", "enableInfo"], [8, 1, 1, "", "enableSet"], [8, 1, 1, "", "enableStatus"], [8, 1, 1, "", "reset"], [8, 1, 1, "", "status"]], "pydwf.core.api.analog_out": [[11, 0, 1, "", "AnalogOut"]], "pydwf.core.api.analog_out.AnalogOut": [[11, 1, 1, "", "amplitudeGet"], [11, 1, 1, "", "amplitudeInfo"], [11, 1, 1, "", "amplitudeSet"], [11, 1, 1, "", "configure"], [11, 1, 1, "", "count"], [11, 1, 1, "", "customAMFMEnableGet"], [11, 1, 1, "", "customAMFMEnableSet"], [11, 1, 1, "", "dataInfo"], [11, 1, 1, "", "dataSet"], [11, 2, 1, "", "device"], [11, 1, 1, "", "enableGet"], [11, 1, 1, "", "enableSet"], [11, 1, 1, "", "frequencyGet"], [11, 1, 1, "", "frequencyInfo"], [11, 1, 1, "", "frequencySet"], [11, 1, 1, "", "functionGet"], [11, 1, 1, "", "functionInfo"], [11, 1, 1, "", "functionSet"], [11, 1, 1, "", "idleGet"], [11, 1, 1, "", "idleInfo"], [11, 1, 1, "", "idleSet"], [11, 1, 1, "", "limitationGet"], [11, 1, 1, "", "limitationInfo"], [11, 1, 1, "", "limitationSet"], [11, 1, 1, "", "masterGet"], [11, 1, 1, "", "masterSet"], [11, 1, 1, "", "modeGet"], [11, 1, 1, "", "modeSet"], [11, 1, 1, "", "nodeAmplitudeGet"], [11, 1, 1, "", "nodeAmplitudeInfo"], [11, 1, 1, "", "nodeAmplitudeSet"], [11, 1, 1, "", "nodeDataInfo"], [11, 1, 1, "", "nodeDataSet"], [11, 1, 1, "", "nodeEnableGet"], [11, 1, 1, "", "nodeEnableSet"], [11, 1, 1, "", "nodeFrequencyGet"], [11, 1, 1, "", "nodeFrequencyInfo"], [11, 1, 1, "", "nodeFrequencySet"], [11, 1, 1, "", "nodeFunctionGet"], [11, 1, 1, "", "nodeFunctionInfo"], [11, 1, 1, "", "nodeFunctionSet"], [11, 1, 1, "", "nodeInfo"], [11, 1, 1, "", "nodeOffsetGet"], [11, 1, 1, "", "nodeOffsetInfo"], [11, 1, 1, "", "nodeOffsetSet"], [11, 1, 1, "", "nodePhaseGet"], [11, 1, 1, "", "nodePhaseInfo"], [11, 1, 1, "", "nodePhaseSet"], [11, 1, 1, "", "nodePlayData"], [11, 1, 1, "", "nodePlayStatus"], [11, 1, 1, "", "nodeSymmetryGet"], [11, 1, 1, "", "nodeSymmetryInfo"], [11, 1, 1, "", "nodeSymmetrySet"], [11, 1, 1, "", "offsetGet"], [11, 1, 1, "", "offsetInfo"], [11, 1, 1, "", "offsetSet"], [11, 1, 1, "", "phaseGet"], [11, 1, 1, "", "phaseInfo"], [11, 1, 1, "", "phaseSet"], [11, 1, 1, "", "playData"], [11, 1, 1, "", "playStatus"], [11, 1, 1, "", "repeatGet"], [11, 1, 1, "", "repeatInfo"], [11, 1, 1, "", "repeatSet"], [11, 1, 1, "", "repeatStatus"], [11, 1, 1, "", "repeatTriggerGet"], [11, 1, 1, "", "repeatTriggerSet"], [11, 1, 1, "", "reset"], [11, 1, 1, "", "runGet"], [11, 1, 1, "", "runInfo"], [11, 1, 1, "", "runSet"], [11, 1, 1, "", "runStatus"], [11, 1, 1, "", "status"], [11, 1, 1, "", "symmetryGet"], [11, 1, 1, "", "symmetryInfo"], [11, 1, 1, "", "symmetrySet"], [11, 1, 1, "", "triggerSlopeGet"], [11, 1, 1, "", "triggerSlopeSet"], [11, 1, 1, "", "triggerSourceGet"], [11, 1, 1, "", "triggerSourceInfo"], [11, 1, 1, "", "triggerSourceSet"], [11, 1, 1, "", "waitGet"], [11, 1, 1, "", "waitInfo"], [11, 1, 1, "", "waitSet"]], "pydwf.core.api.device_control": [[22, 0, 1, "", "DeviceControl"]], "pydwf.core.api.device_control.DeviceControl": [[22, 1, 1, "", "closeAll"], [22, 2, 1, "", "dwf"], [22, 1, 1, "", "open"], [22, 1, 1, "", "openEx"]], "pydwf.core.api.device_enumeration": [[23, 0, 1, "", "DeviceEnumeration"]], "pydwf.core.api.device_enumeration.DeviceEnumeration": [[23, 1, 1, "", "analogInBits"], [23, 1, 1, "", "analogInBufferSize"], [23, 1, 1, "", "analogInChannels"], [23, 1, 1, "", "analogInFrequency"], [23, 1, 1, "", "configInfo"], [23, 1, 1, "", "deviceIsOpened"], [23, 1, 1, "", "deviceName"], [23, 1, 1, "", "deviceType"], [23, 2, 1, "", "dwf"], [23, 1, 1, "", "enumerateConfigurations"], [23, 1, 1, "", "enumerateDevices"], [23, 1, 1, "", "enumerateInfo"], [23, 1, 1, "", "enumerateStart"], [23, 1, 1, "", "enumerateStop"], [23, 1, 1, "", "serialNumber"], [23, 1, 1, "", "userName"]], "pydwf.core.api.digital_in": [[13, 0, 1, "", "DigitalIn"]], "pydwf.core.api.digital_in.DigitalIn": [[13, 1, 1, "", "acquisitionModeGet"], [13, 1, 1, "", "acquisitionModeInfo"], [13, 1, 1, "", "acquisitionModeSet"], [13, 1, 1, "", "bitsInfo"], [13, 1, 1, "", "bufferSizeGet"], [13, 1, 1, "", "bufferSizeInfo"], [13, 1, 1, "", "bufferSizeSet"], [13, 1, 1, "", "clockSourceGet"], [13, 1, 1, "", "clockSourceInfo"], [13, 1, 1, "", "clockSourceSet"], [13, 1, 1, "", "configure"], [13, 1, 1, "", "counterGet"], [13, 1, 1, "", "counterInfo"], [13, 1, 1, "", "counterSet"], [13, 1, 1, "", "counterStatus"], [13, 2, 1, "", "device"], [13, 1, 1, "", "dividerGet"], [13, 1, 1, "", "dividerInfo"], [13, 1, 1, "", "dividerSet"], [13, 1, 1, "", "inputOrderSet"], [13, 1, 1, "", "internalClockInfo"], [13, 1, 1, "", "mixedSet"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "sampleFormatGet"], [13, 1, 1, "", "sampleFormatSet"], [13, 1, 1, "", "sampleModeGet"], [13, 1, 1, "", "sampleModeInfo"], [13, 1, 1, "", "sampleModeSet"], [13, 1, 1, "", "sampleSensibleGet"], [13, 1, 1, "", "sampleSensibleSet"], [13, 1, 1, "", "status"], [13, 1, 1, "", "statusAutoTriggered"], [13, 1, 1, "", "statusCompress"], [13, 1, 1, "", "statusCompressed"], [13, 1, 1, "", "statusCompressed2"], [13, 1, 1, "", "statusData"], [13, 1, 1, "", "statusData2"], [13, 1, 1, "", "statusIndexWrite"], [13, 1, 1, "", "statusNoise2"], [13, 1, 1, "", "statusRecord"], [13, 1, 1, "", "statusSamplesLeft"], [13, 1, 1, "", "statusSamplesValid"], [13, 1, 1, "", "statusTime"], [13, 1, 1, "", "triggerAutoTimeoutGet"], [13, 1, 1, "", "triggerAutoTimeoutInfo"], [13, 1, 1, "", "triggerAutoTimeoutSet"], [13, 1, 1, "", "triggerCountSet"], [13, 1, 1, "", "triggerGet"], [13, 1, 1, "", "triggerInfo"], [13, 1, 1, "", "triggerLengthSet"], [13, 1, 1, "", "triggerMatchSet"], [13, 1, 1, "", "triggerPositionGet"], [13, 1, 1, "", "triggerPositionInfo"], [13, 1, 1, "", "triggerPositionSet"], [13, 1, 1, "", "triggerPrefillGet"], [13, 1, 1, "", "triggerPrefillSet"], [13, 1, 1, "", "triggerResetSet"], [13, 1, 1, "", "triggerSet"], [13, 1, 1, "", "triggerSlopeGet"], [13, 1, 1, "", "triggerSlopeSet"], [13, 1, 1, "", "triggerSourceGet"], [13, 1, 1, "", "triggerSourceInfo"], [13, 1, 1, "", "triggerSourceSet"]], "pydwf.core.api.digital_io": [[12, 0, 1, "", "DigitalIO"]], "pydwf.core.api.digital_io.DigitalIO": [[12, 1, 1, "", "configure"], [12, 2, 1, "", "device"], [12, 1, 1, "", "driveGet"], [12, 1, 1, "", "driveInfo"], [12, 1, 1, "", "driveSet"], [12, 1, 1, "", "inputInfo"], [12, 1, 1, "", "inputInfo64"], [12, 1, 1, "", "inputStatus"], [12, 1, 1, "", "inputStatus64"], [12, 1, 1, "", "outputEnableGet"], [12, 1, 1, "", "outputEnableGet64"], [12, 1, 1, "", "outputEnableInfo"], [12, 1, 1, "", "outputEnableInfo64"], [12, 1, 1, "", "outputEnableSet"], [12, 1, 1, "", "outputEnableSet64"], [12, 1, 1, "", "outputGet"], [12, 1, 1, "", "outputGet64"], [12, 1, 1, "", "outputInfo"], [12, 1, 1, "", "outputInfo64"], [12, 1, 1, "", "outputSet"], [12, 1, 1, "", "outputSet64"], [12, 1, 1, "", "pullGet"], [12, 1, 1, "", "pullInfo"], [12, 1, 1, "", "pullSet"], [12, 1, 1, "", "reset"], [12, 1, 1, "", "status"]], "pydwf.core.api.digital_out": [[14, 0, 1, "", "DigitalOut"]], "pydwf.core.api.digital_out.DigitalOut": [[14, 1, 1, "", "configure"], [14, 1, 1, "", "count"], [14, 1, 1, "", "counterGet"], [14, 1, 1, "", "counterInfo"], [14, 1, 1, "", "counterInitGet"], [14, 1, 1, "", "counterInitSet"], [14, 1, 1, "", "counterSet"], [14, 1, 1, "", "dataInfo"], [14, 1, 1, "", "dataSet"], [14, 2, 1, "", "device"], [14, 1, 1, "", "dividerGet"], [14, 1, 1, "", "dividerInfo"], [14, 1, 1, "", "dividerInitGet"], [14, 1, 1, "", "dividerInitSet"], [14, 1, 1, "", "dividerSet"], [14, 1, 1, "", "enableGet"], [14, 1, 1, "", "enableSet"], [14, 1, 1, "", "idleGet"], [14, 1, 1, "", "idleInfo"], [14, 1, 1, "", "idleSet"], [14, 1, 1, "", "internalClockInfo"], [14, 1, 1, "", "outputGet"], [14, 1, 1, "", "outputInfo"], [14, 1, 1, "", "outputSet"], [14, 1, 1, "", "playDataSet"], [14, 1, 1, "", "playRateSet"], [14, 1, 1, "", "playUpdateSet"], [14, 1, 1, "", "repeatGet"], [14, 1, 1, "", "repeatInfo"], [14, 1, 1, "", "repeatSet"], [14, 1, 1, "", "repeatStatus"], [14, 1, 1, "", "repeatTriggerGet"], [14, 1, 1, "", "repeatTriggerSet"], [14, 1, 1, "", "repetitionGet"], [14, 1, 1, "", "repetitionInfo"], [14, 1, 1, "", "repetitionSet"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "runGet"], [14, 1, 1, "", "runInfo"], [14, 1, 1, "", "runSet"], [14, 1, 1, "", "runStatus"], [14, 1, 1, "", "status"], [14, 1, 1, "", "statusOutput"], [14, 1, 1, "", "triggerSlopeGet"], [14, 1, 1, "", "triggerSlopeSet"], [14, 1, 1, "", "triggerSourceGet"], [14, 1, 1, "", "triggerSourceInfo"], [14, 1, 1, "", "triggerSourceSet"], [14, 1, 1, "", "typeGet"], [14, 1, 1, "", "typeInfo"], [14, 1, 1, "", "typeSet"], [14, 1, 1, "", "waitGet"], [14, 1, 1, "", "waitInfo"], [14, 1, 1, "", "waitSet"]], "pydwf.core.api.protocol_can": [[15, 0, 1, "", "ProtocolCAN"]], "pydwf.core.api.protocol_can.ProtocolCAN": [[15, 2, 1, "", "device"], [15, 1, 1, "", "polaritySet"], [15, 1, 1, "", "rateSet"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "rx"], [15, 1, 1, "", "rxSet"], [15, 1, 1, "", "tx"], [15, 1, 1, "", "txSet"]], "pydwf.core.api.protocol_i2c": [[16, 0, 1, "", "ProtocolI2C"]], "pydwf.core.api.protocol_i2c.ProtocolI2C": [[16, 1, 1, "", "clear"], [16, 2, 1, "", "device"], [16, 1, 1, "", "rateSet"], [16, 1, 1, "", "read"], [16, 1, 1, "", "readNakSet"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "sclSet"], [16, 1, 1, "", "sdaSet"], [16, 1, 1, "", "spyStart"], [16, 1, 1, "", "spyStatus"], [16, 1, 1, "", "stretchSet"], [16, 1, 1, "", "timeoutSet"], [16, 1, 1, "", "write"], [16, 1, 1, "", "writeOne"], [16, 1, 1, "", "writeRead"]], "pydwf.core.api.protocol_spi": [[17, 0, 1, "", "ProtocolSPI"]], "pydwf.core.api.protocol_spi.ProtocolSPI": [[17, 1, 1, "", "clockSet"], [17, 1, 1, "", "cmReadOne"], [17, 1, 1, "", "cmdRead"], [17, 1, 1, "", "cmdRead16"], [17, 1, 1, "", "cmdRead32"], [17, 1, 1, "", "cmdWrite"], [17, 1, 1, "", "cmdWrite16"], [17, 1, 1, "", "cmdWrite32"], [17, 1, 1, "", "cmdWriteOne"], [17, 1, 1, "", "cmdWriteRead"], [17, 1, 1, "", "cmdWriteRead16"], [17, 1, 1, "", "cmdWriteRead32"], [17, 1, 1, "", "dataSet"], [17, 1, 1, "", "delaySet"], [17, 2, 1, "", "device"], [17, 1, 1, "", "frequencySet"], [17, 1, 1, "", "idleSet"], [17, 1, 1, "", "modeSet"], [17, 1, 1, "", "orderSet"], [17, 1, 1, "", "read"], [17, 1, 1, "", "read16"], [17, 1, 1, "", "read32"], [17, 1, 1, "", "readOne"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "select"], [17, 1, 1, "", "selectSet"], [17, 1, 1, "", "write"], [17, 1, 1, "", "write16"], [17, 1, 1, "", "write32"], [17, 1, 1, "", "writeOne"], [17, 1, 1, "", "writeRead"], [17, 1, 1, "", "writeRead16"], [17, 1, 1, "", "writeRead32"]], "pydwf.core.api.protocol_swd": [[18, 0, 1, "", "ProtocolSWD"]], "pydwf.core.api.protocol_swd.ProtocolSWD": [[18, 1, 1, "", "clear"], [18, 1, 1, "", "clockSet"], [18, 2, 1, "", "device"], [18, 1, 1, "", "ioIdleSet"], [18, 1, 1, "", "ioSet"], [18, 1, 1, "", "nakSet"], [18, 1, 1, "", "parkSet"], [18, 1, 1, "", "rateSet"], [18, 1, 1, "", "read"], [18, 1, 1, "", "reset"], [18, 1, 1, "", "trailSet"], [18, 1, 1, "", "turnSet"], [18, 1, 1, "", "write"]], "pydwf.core.api.protocol_uart": [[19, 0, 1, "", "ProtocolUART"]], "pydwf.core.api.protocol_uart.ProtocolUART": [[19, 1, 1, "", "bitsSet"], [19, 2, 1, "", "device"], [19, 1, 1, "", "paritySet"], [19, 1, 1, "", "polaritySet"], [19, 1, 1, "", "rateSet"], [19, 1, 1, "", "reset"], [19, 1, 1, "", "rx"], [19, 1, 1, "", "rxSet"], [19, 1, 1, "", "stopSet"], [19, 1, 1, "", "tx"], [19, 1, 1, "", "txSet"]], "pydwf.core.api.spectrum": [[24, 0, 1, "", "Spectrum"]], "pydwf.core.api.spectrum.Spectrum": [[24, 2, 1, "", "dwf"], [24, 1, 1, "", "fft"], [24, 1, 1, "", "transform"], [24, 1, 1, "", "window"]], "pydwf.core.auxiliary.enum_types": [[26, 0, 1, "", "DwfAcquisitionMode"], [26, 0, 1, "", "DwfAnalogCoupling"], [26, 0, 1, "", "DwfAnalogIO"], [26, 0, 1, "", "DwfAnalogImpedance"], [26, 0, 1, "", "DwfAnalogInFilter"], [26, 0, 1, "", "DwfAnalogInTriggerLengthCondition"], [26, 0, 1, "", "DwfAnalogInTriggerType"], [26, 0, 1, "", "DwfAnalogOutFunction"], [26, 0, 1, "", "DwfAnalogOutIdle"], [26, 0, 1, "", "DwfAnalogOutMode"], [26, 0, 1, "", "DwfAnalogOutNode"], [26, 0, 1, "", "DwfDeviceID"], [26, 0, 1, "", "DwfDeviceParameter"], [26, 0, 1, "", "DwfDeviceVersion"], [26, 0, 1, "", "DwfDigitalInClockSource"], [26, 0, 1, "", "DwfDigitalInSampleMode"], [26, 0, 1, "", "DwfDigitalOutIdle"], [26, 0, 1, "", "DwfDigitalOutOutput"], [26, 0, 1, "", "DwfDigitalOutType"], [26, 0, 1, "", "DwfDmm"], [26, 0, 1, "", "DwfEnumConfigInfo"], [26, 0, 1, "", "DwfEnumFilter"], [26, 0, 1, "", "DwfErrorCode"], [26, 0, 1, "", "DwfState"], [26, 0, 1, "", "DwfTriggerSlope"], [26, 0, 1, "", "DwfTriggerSource"], [26, 0, 1, "", "DwfWindow"]], "pydwf.core.auxiliary.enum_types.DwfAcquisitionMode": [[26, 3, 1, "", "Overs"], [26, 3, 1, "", "Record"], [26, 3, 1, "", "ScanScreen"], [26, 3, 1, "", "ScanShift"], [26, 3, 1, "", "Single"], [26, 3, 1, "", "Single1"]], "pydwf.core.auxiliary.enum_types.DwfAnalogCoupling": [[26, 3, 1, "", "AC"], [26, 3, 1, "", "DC"]], "pydwf.core.auxiliary.enum_types.DwfAnalogIO": [[26, 3, 1, "", "Current"], [26, 3, 1, "", "Dmm"], [26, 3, 1, "", "Enable"], [26, 3, 1, "", "Frequency"], [26, 3, 1, "", "Measure"], [26, 3, 1, "", "Power"], [26, 3, 1, "", "Range"], [26, 3, 1, "", "Resistance"], [26, 3, 1, "", "Slew"], [26, 3, 1, "", "Temperature"], [26, 3, 1, "", "Time"], [26, 3, 1, "", "Undocumented"], [26, 3, 1, "", "Voltage"]], "pydwf.core.auxiliary.enum_types.DwfAnalogImpedance": [[26, 3, 1, "", "Admittance"], [26, 3, 1, "", "AdmittancePhase"], [26, 3, 1, "", "Conductance"], [26, 3, 1, "", "Dissipation"], [26, 3, 1, "", "Iimag"], [26, 3, 1, "", "Impedance"], [26, 3, 1, "", "ImpedancePhase"], [26, 3, 1, "", "Ireal"], [26, 3, 1, "", "Irms"], [26, 3, 1, "", "ParallelCapacitance"], [26, 3, 1, "", "ParallelInductance"], [26, 3, 1, "", "Quality"], [26, 3, 1, "", "Reactance"], [26, 3, 1, "", "Resistance"], [26, 3, 1, "", "SeriesCapacitance"], [26, 3, 1, "", "SeriesInductance"], [26, 3, 1, "", "Susceptance"], [26, 3, 1, "", "Vimag"], [26, 3, 1, "", "Vreal"], [26, 3, 1, "", "Vrms"]], "pydwf.core.auxiliary.enum_types.DwfAnalogInFilter": [[26, 3, 1, "", "Average"], [26, 3, 1, "", "AverageFit"], [26, 3, 1, "", "Decimate"], [26, 3, 1, "", "MinMax"]], "pydwf.core.auxiliary.enum_types.DwfAnalogInTriggerLengthCondition": [[26, 3, 1, "", "Less"], [26, 3, 1, "", "More"], [26, 3, 1, "", "Timeout"]], "pydwf.core.auxiliary.enum_types.DwfAnalogInTriggerType": [[26, 3, 1, "", "Edge"], [26, 3, 1, "", "Pulse"], [26, 3, 1, "", "Transition"], [26, 3, 1, "", "Window"]], "pydwf.core.auxiliary.enum_types.DwfAnalogOutFunction": [[26, 3, 1, "", "Custom"], [26, 3, 1, "", "CustomPattern"], [26, 3, 1, "", "DC"], [26, 3, 1, "", "Noise"], [26, 3, 1, "", "Play"], [26, 3, 1, "", "PlayPattern"], [26, 3, 1, "", "Pulse"], [26, 3, 1, "", "RampDown"], [26, 3, 1, "", "RampUp"], [26, 3, 1, "", "Sine"], [26, 3, 1, "", "SinePower"], [26, 3, 1, "", "Square"], [26, 3, 1, "", "Trapezium"], [26, 3, 1, "", "Triangle"]], "pydwf.core.auxiliary.enum_types.DwfAnalogOutIdle": [[26, 3, 1, "", "Disable"], [26, 3, 1, "", "Initial"], [26, 3, 1, "", "Offset"]], "pydwf.core.auxiliary.enum_types.DwfAnalogOutMode": [[26, 3, 1, "", "Current"], [26, 3, 1, "", "Voltage"]], "pydwf.core.auxiliary.enum_types.DwfAnalogOutNode": [[26, 3, 1, "", "AM"], [26, 3, 1, "", "Carrier"], [26, 3, 1, "", "FM"]], "pydwf.core.auxiliary.enum_types.DwfDeviceID": [[26, 3, 1, "", "ADP3X50"], [26, 3, 1, "", "ADP5250"], [26, 3, 1, "", "DDiscovery"], [26, 3, 1, "", "DPS3340"], [26, 3, 1, "", "Discovery"], [26, 3, 1, "", "Discovery2"], [26, 3, 1, "", "EExplorer"], [26, 3, 1, "", "Eclypse"]], "pydwf.core.auxiliary.enum_types.DwfDeviceParameter": [[26, 3, 1, "", "AnalogOut"], [26, 3, 1, "", "AudioOut"], [26, 3, 1, "", "ClockMode"], [26, 3, 1, "", "ExtFreq"], [26, 3, 1, "", "FreqPhase"], [26, 3, 1, "", "Frequency"], [26, 3, 1, "", "KeepOnClose"], [26, 3, 1, "", "LedBrightness"], [26, 3, 1, "", "OnClose"], [26, 3, 1, "", "TempLimit"], [26, 3, 1, "", "UsbLimit"], [26, 3, 1, "", "UsbPower"]], "pydwf.core.auxiliary.enum_types.DwfDeviceVersion": [[26, 3, 1, "", "DiscoveryA"], [26, 3, 1, "", "DiscoveryB"], [26, 3, 1, "", "DiscoveryC"], [26, 3, 1, "", "EExplorerC"], [26, 3, 1, "", "EExplorerE"], [26, 3, 1, "", "EExplorerF"]], "pydwf.core.auxiliary.enum_types.DwfDigitalInClockSource": [[26, 3, 1, "", "External"], [26, 3, 1, "", "External2"], [26, 3, 1, "", "Internal"]], "pydwf.core.auxiliary.enum_types.DwfDigitalInSampleMode": [[26, 3, 1, "", "Noise"], [26, 3, 1, "", "Simple"]], "pydwf.core.auxiliary.enum_types.DwfDigitalOutIdle": [[26, 3, 1, "", "High"], [26, 3, 1, "", "Init"], [26, 3, 1, "", "Low"], [26, 3, 1, "", "Zet"]], "pydwf.core.auxiliary.enum_types.DwfDigitalOutOutput": [[26, 3, 1, "", "OpenDrain"], [26, 3, 1, "", "OpenSource"], [26, 3, 1, "", "PushPull"], [26, 3, 1, "", "ThreeState"]], "pydwf.core.auxiliary.enum_types.DwfDigitalOutType": [[26, 3, 1, "", "Custom"], [26, 3, 1, "", "Play"], [26, 3, 1, "", "Pulse"], [26, 3, 1, "", "ROM"], [26, 3, 1, "", "Random"], [26, 3, 1, "", "State"]], "pydwf.core.auxiliary.enum_types.DwfDmm": [[26, 3, 1, "", "ACCurrent"], [26, 3, 1, "", "ACLowCurrent"], [26, 3, 1, "", "ACVoltage"], [26, 3, 1, "", "Continuity"], [26, 3, 1, "", "DCCurrent"], [26, 3, 1, "", "DCLowCurrent"], [26, 3, 1, "", "DCVoltage"], [26, 3, 1, "", "Diode"], [26, 3, 1, "", "Resistance"], [26, 3, 1, "", "Temperature"]], "pydwf.core.auxiliary.enum_types.DwfEnumConfigInfo": [[26, 3, 1, "", "AnalogIOChannelCount"], [26, 3, 1, "", "AnalogInBufferSize"], [26, 3, 1, "", "AnalogInChannelCount"], [26, 3, 1, "", "AnalogOutBufferSize"], [26, 3, 1, "", "AnalogOutChannelCount"], [26, 3, 1, "", "DigitalIOChannelCount"], [26, 3, 1, "", "DigitalInBufferSize"], [26, 3, 1, "", "DigitalInChannelCount"], [26, 3, 1, "", "DigitalOutBufferSize"], [26, 3, 1, "", "DigitalOutChannelCount"], [26, 3, 1, "", "OtherInfoText"], [26, 3, 1, "", "TooltipText"]], "pydwf.core.auxiliary.enum_types.DwfEnumFilter": [[26, 3, 1, "", "AXI"], [26, 3, 1, "", "All"], [26, 3, 1, "", "Audio"], [26, 3, 1, "", "DEVID"], [26, 3, 1, "", "Demo"], [26, 3, 1, "", "Network"], [26, 3, 1, "", "Remote"], [26, 3, 1, "", "Type"], [26, 3, 1, "", "USB"]], "pydwf.core.auxiliary.enum_types.DwfErrorCode": [[26, 3, 1, "", "AlreadyOpened"], [26, 3, 1, "", "ApiLockTimeout"], [26, 3, 1, "", "InvalidParameter0"], [26, 3, 1, "", "InvalidParameter1"], [26, 3, 1, "", "InvalidParameter2"], [26, 3, 1, "", "InvalidParameter3"], [26, 3, 1, "", "InvalidParameter4"], [26, 3, 1, "", "NoErc"], [26, 3, 1, "", "NotSupported"], [26, 3, 1, "", "UnknownError"]], "pydwf.core.auxiliary.enum_types.DwfState": [[26, 3, 1, "", "Armed"], [26, 3, 1, "", "Config"], [26, 3, 1, "", "Done"], [26, 3, 1, "", "Prefill"], [26, 3, 1, "", "Ready"], [26, 3, 1, "", "Running"], [26, 3, 1, "", "Triggered"], [26, 3, 1, "", "Wait"]], "pydwf.core.auxiliary.enum_types.DwfTriggerSlope": [[26, 3, 1, "", "Either"], [26, 3, 1, "", "Fall"], [26, 3, 1, "", "Rise"]], "pydwf.core.auxiliary.enum_types.DwfTriggerSource": [[26, 3, 1, "", "AnalogIn"], [26, 3, 1, "", "AnalogOut1"], [26, 3, 1, "", "AnalogOut2"], [26, 3, 1, "", "AnalogOut3"], [26, 3, 1, "", "AnalogOut4"], [26, 3, 1, "", "Clock"], [26, 3, 1, "", "DetectorAnalogIn"], [26, 3, 1, "", "DetectorDigitalIn"], [26, 3, 1, "", "DigitalIn"], [26, 3, 1, "", "DigitalOut"], [26, 3, 1, "", "External1"], [26, 3, 1, "", "External2"], [26, 3, 1, "", "External3"], [26, 3, 1, "", "External4"], [26, 3, 1, "", "High"], [26, 3, 1, "", "Low"], [26, 3, 1, "", "None_"], [26, 3, 1, "", "PC"]], "pydwf.core.auxiliary.enum_types.DwfWindow": [[26, 3, 1, "", "BlackmanHarris"], [26, 3, 1, "", "Cosine"], [26, 3, 1, "", "FlatTop"], [26, 3, 1, "", "Hamming"], [26, 3, 1, "", "Hann"], [26, 3, 1, "", "Kaiser"], [26, 3, 1, "", "Rectangular"], [26, 3, 1, "", "Triangular"]], "pydwf.core.auxiliary.exceptions": [[27, 0, 1, "", "DwfLibraryError"], [27, 0, 1, "", "PyDwfError"]], "pydwf.core.auxiliary.exceptions.DwfLibraryError": [[27, 3, 1, "", "code"], [27, 3, 1, "", "msg"]], "pydwf.core.dwf_device": [[7, 0, 1, "", "DwfDevice"]], "pydwf.core.dwf_device.DwfDevice": [[7, 3, 1, "", "analogIO"], [7, 3, 1, "", "analogImpedance"], [7, 3, 1, "", "analogIn"], [7, 3, 1, "", "analogOut"], [7, 1, 1, "", "autoConfigureGet"], [7, 1, 1, "", "autoConfigureSet"], [7, 1, 1, "", "close"], [7, 2, 1, "", "digitalCan"], [7, 2, 1, "", "digitalI2c"], [7, 3, 1, "", "digitalIO"], [7, 3, 1, "", "digitalIn"], [7, 3, 1, "", "digitalOut"], [7, 2, 1, "", "digitalSpi"], [7, 2, 1, "", "digitalSwd"], [7, 2, 1, "", "digitalUart"], [7, 2, 1, "", "dwf"], [7, 1, 1, "", "enableSet"], [7, 1, 1, "", "paramGet"], [7, 1, 1, "", "paramSet"], [7, 1, 1, "", "reset"], [7, 1, 1, "", "triggerGet"], [7, 1, 1, "", "triggerInfo"], [7, 1, 1, "", "triggerPC"], [7, 1, 1, "", "triggerSet"], [7, 1, 1, "", "triggerSlopeInfo"]], "pydwf.core.dwf_device.DwfDevice.protocol": [[7, 3, 1, "", "can"], [7, 3, 1, "", "i2c"], [7, 3, 1, "", "spi"], [7, 3, 1, "", "swd"], [7, 3, 1, "", "uart"]], "pydwf.core.dwf_library": [[21, 0, 1, "", "DwfLibrary"]], "pydwf.core.dwf_library.DwfLibrary": [[21, 1, 1, "", "__init__"], [21, 3, 1, "", "deviceControl"], [21, 3, 1, "", "deviceEnum"], [21, 1, 1, "", "getLastError"], [21, 1, 1, "", "getLastErrorMsg"], [21, 1, 1, "", "getVersion"], [21, 1, 1, "", "paramGet"], [21, 1, 1, "", "paramSet"], [21, 3, 1, "", "spectrum"]], "pydwf.utilities.open_dwf_device": [[29, 4, 1, "", "openDwfDevice"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"about": [0, 3], "dwf": 0, "c": 0, "librari": 0, "access": 0, "from": 0, "python": 0, "overview": [0, 3, 10, 11, 13, 14, 28], "api": [0, 10, 11, 13, 14], "function": [0, 8, 10, 12, 13, 15, 16, 17, 18, 19, 22, 23, 24, 29], "count": [0, 10, 11, 14], "categori": 0, "version": 0, "3": [0, 3, 10, 11, 13], "20": [0, 11], "1": [0, 6, 10, 11, 13, 14], "error": [0, 27], "handl": [0, 27], "us": [1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 29, 31], "pydwf": [1, 6, 26, 27, 28, 29, 31], "command": 1, "line": 1, "tool": 1, "devic": [2, 3, 8, 22, 23, 31], "paramet": 2, "todo": [2, 3, 4, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 22, 23, 26], "digil": 3, "waveform": 3, "configur": [3, 10, 11, 13, 14], "an": 3, "electron": 3, "explor": 3, "legaci": 3, "analog": [3, 8, 9, 10, 11], "discoveri": [3, 8], "2": [3, 8, 10, 11], "digit": [3, 8, 12, 13, 14], "studio": 3, "dps3340": 3, "usb": 3, "power": 3, "suppli": 3, "pro": [3, 8], "3x50": 3, "5250": 3, "exampl": [4, 28, 31], "script": 4, "trigger": [5, 10, 11, 13, 14], "explain": 5, "sourc": 5, "time": [5, 13, 14], "precis": 5, "19": 6, "tabl": 6, "content": 6, "introduct": 6, "The": [6, 7, 10, 11, 13, 14, 20, 21, 25, 28], "packag": [6, 27], "background": 6, "inform": 6, "dwfdevic": [7, 20], "class": [7, 20, 21, 25, 26, 28], "refer": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 29], "i": [8, 12], "o": [8, 12], "analogio": 8, "channel": [8, 10, 11, 14], "node": [8, 11], "adp3450": 8, "imped": 9, "measur": 9, "analogimped": 9, "input": [10, 13], "instrument": [10, 11, 13, 14], "analogin": 10, "state": [10, 11, 13, 14], "machin": [10, 11, 13, 14], "control": [10, 11, 13, 14, 22], "method": [10, 11, 13, 14, 22], "statu": [10, 13], "variabl": [10, 13], "7": [10, 13], "data": [10, 11, 13, 14], "retriev": [10, 13], "5": [10, 11, 13, 14], "acquisit": [10, 13], "set": [10, 11, 13, 14], "15": [10, 11], "21": 10, "10": 10, "forc": 10, "detector": [10, 13], "27": 10, "counter": [10, 13], "4": [10, 11, 13, 14], "sampl": 10, "clock": 10, "6": 10, "output": [11, 14], "analogout": 11, "per": 11, "8": 11, "miscellan": [11, 13], "enumer": [11, 23, 26], "manag": 11, "carrier": 11, "obsolet": 11, "digitalio": 12, "digitalin": 13, "bulk": 13, "17": 13, "11": [13, 14], "digitalout": 14, "level": 14, "13": 14, "pattern": 14, "definit": 14, "14": 14, "playback": 14, "can": 15, "protocol": [15, 16, 17, 18, 19], "protocolcan": 15, "i\u00b2c": 16, "protocoli2c": 16, "spi": 17, "protocolspi": 17, "swd": 18, "protocolswd": 18, "uart": 19, "protocoluart": 19, "its": [20, 25], "attribut": [20, 25], "dwflibrari": [21, 25], "altern": [22, 23], "devicecontrol": 22, "option": 22, "openex": 22, "deviceenumer": 23, "signal": 24, "process": 24, "spectrum": 24, "type": 26, "correspond": 26, "between": 26, "libdwf": 26, "name": 26, "except": 27, "rais": 27, "A": 28, "minim": 28, "usag": 28, "two": 28, "main": 28, "util": 29, "opendwfdevic": 29, "welcom": 31, "support": 31, "depend": 31, "project": 31, "host": 31, "instal": 31, "pip": 31, "document": 31, "acknowledg": 31}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 60}, "alltitles": {"About the DWF C Library": [[0, "about-the-dwf-c-library"]], "Accessing the DWF library from Python": [[0, "accessing-the-dwf-library-from-python"]], "Overview of the C API": [[0, "overview-of-the-c-api"]], "DWF C API function counts (by category), version 3.20.1": [[0, "id1"]], "Error handling in the C API": [[0, "error-handling-in-the-c-api"]], "Using pydwf as a command line tool": [[1, "using-pydwf-as-a-command-line-tool"]], "Device parameters": [[2, "device-parameters"]], "Todo": [[2, "id1"], [3, "id1"], [4, "id1"], [5, "id1"], [9, "id1"], [9, "id2"], [9, "id3"], [10, "id1"], [11, "id1"], [11, "id2"], [11, "id3"], [11, "id5"], [13, "id1"], [13, "id2"], [13, "id3"], [13, "id4"], [13, "id5"], [13, "id6"], [13, "id7"], [13, "id8"], [13, "id9"], [13, "id10"], [13, "id11"], [13, "id12"], [13, "id13"], [14, "id1"], [14, "id2"], [15, "id1"], [16, "id1"], [16, "id2"], [16, "id3"], [16, "id4"], [17, "id1"], [18, "id1"], [19, "id1"], [19, "id2"], [22, "id1"], [23, "id1"], [26, "id2"], [26, "id3"], [26, "id4"], [26, "id5"]], "Digilent Waveforms devices and their configurations": [[3, "digilent-waveforms-devices-and-their-configurations"]], "About device configurations": [[3, "about-device-configurations"]], "An overview of Digilent Waveforms devices": [[3, "an-overview-of-digilent-waveforms-devices"]], "Electronics Explorer (legacy)": [[3, "electronics-explorer-link-legacy"]], "Analog Discovery (legacy)": [[3, "analog-discovery-link-legacy"]], "Analog Discovery 2": [[3, "analog-discovery-2-link"]], "Analog Discovery 3": [[3, "analog-discovery-3-link"]], "Digital Discovery": [[3, "digital-discovery-link"]], "Analog Discovery Studio": [[3, "analog-discovery-studio-link"]], "DPS3340 Discovery USB power supply": [[3, "dps3340-discovery-link"]], "Analog Discovery Pro 3x50": [[3, "analog-discovery-pro-3x50-link"]], "Analog Discovery Pro 5250": [[3, "analog-discovery-pro-5250-link"]], "Example scripts": [[4, "example-scripts"]], "Triggering explained": [[5, "triggering-explained"]], "Trigger sources": [[5, "trigger-sources"]], "Trigger timing and precision": [[5, "trigger-timing-and-precision"]], "pydwf 1.1.19 \u2014 Table of Contents": [[6, "pydwf-release-table-of-contents"]], "Introduction": [[6, null]], "The pydwf package": [[6, null]], "Background information": [[6, null]], "The DwfDevice class": [[7, "the-dwfdevice-class"]], "Using the DwfDevice class": [[7, "using-the-dwfdevice-class"]], "DwfDevice reference": [[7, "dwfdevice-reference"]], "Analog I/O": [[8, "analog-i-o"]], "Using the Analog I/O functionality": [[8, "using-the-analog-i-o-functionality"]], "AnalogIO channels and nodes": [[8, "analogio-channels-and-nodes"]], "AnalogIO channels and nodes of the Analog Discovery 2 device": [[8, "id1"]], "AnalogIO channels and nodes of the Digital Discovery device": [[8, "id2"]], "AnalogIO channels and nodes of the Analog Discovery Pro (ADP3450) device": [[8, "id3"]], "AnalogIO reference": [[8, "analogio-reference"]], "Analog impedance measurements": [[9, "analog-impedance-measurements"]], "Using the analog impedance measurements": [[9, "using-the-analog-impedance-measurements"]], "AnalogImpedance reference": [[9, "analogimpedance-reference"]], "Analog input instrument": [[10, "analog-input-instrument"]], "Using the analog input instrument": [[10, "using-the-analog-input-instrument"]], "The AnalogIn state machine": [[10, "the-analogin-state-machine"]], "AnalogIn instrument API overview": [[10, "analogin-instrument-api-overview"]], "Instrument control": [[10, "instrument-control"], [11, "instrument-control"], [13, "instrument-control"], [14, "instrument-control"]], "Instrument control (3 methods)": [[10, "id3"], [11, "id8"], [13, "id15"]], "Status variables": [[10, "status-variables"], [13, "status-variables"]], "Status variables (7 methods)": [[10, "id4"], [13, "id16"]], "Status data retrieval": [[10, "status-data-retrieval"], [13, "status-data-retrieval"]], "Status data retrieval (5 methods)": [[10, "id5"]], "Acquisition settings": [[10, "acquisition-settings"], [13, "acquisition-settings"]], "Acquisition settings (15 methods)": [[10, "id6"]], "Channel count": [[10, "channel-count"], [11, "channel-count"], [14, "channel-count"]], "Channel count (2 methods)": [[10, "id7"]], "Channel configuration": [[10, "channel-configuration"]], "Channel configuration (21 methods)": [[10, "id8"]], "Instrument trigger configuration": [[10, "instrument-trigger-configuration"], [13, "instrument-trigger-configuration"]], "Instrument trigger configuration (10 methods)": [[10, "id9"]], "Force instrument trigger": [[10, "force-instrument-trigger"]], "Force instrument trigger (1 method)": [[10, "id10"]], "Trigger detector configuration": [[10, "trigger-detector-configuration"], [13, "trigger-detector-configuration"]], "Trigger detector configuration (27 methods)": [[10, "id11"]], "Counter functionality": [[10, "counter-functionality"], [13, "counter-functionality"]], "Counter configuration (4 methods)": [[10, "id12"], [13, "id22"]], "Sampling clock configuration": [[10, "sampling-clock-configuration"]], "Sampling clock configuration (6 methods)": [[10, "id13"]], "AnalogIn reference": [[10, "analogin-reference"]], "Analog output instrument": [[11, "analog-output-instrument"]], "Using the analog output instrument": [[11, "using-the-analog-output-instrument"]], "The AnalogOut channel state machine": [[11, "the-analogout-channel-state-machine"]], "AnalogOut channel nodes": [[11, "analogout-channel-nodes"]], "AnalogOut instrument API overview": [[11, "analogout-instrument-api-overview"]], "Channel count (1 method)": [[11, "id9"], [14, "id5"]], "Per-channel state machine settings": [[11, "per-channel-state-machine-settings"]], "State machine settings (15 methods)": [[11, "id10"]], "Per-channel trigger configuration": [[11, "per-channel-trigger-configuration"]], "Per-channel trigger configuration (5 methods)": [[11, "id11"]], "Per-channel output settings": [[11, "per-channel-output-settings"]], "Per-channel output settings (8 methods)": [[11, "id12"]], "Per-channel miscellaneous settings": [[11, "per-channel-miscellaneous-settings"]], "Per-channel configuration (2 methods)": [[11, "id13"]], "Node enumeration": [[11, "node-enumeration"]], "Node enumeration (1 method)": [[11, "id14"]], "Node configuration": [[11, "node-configuration"]], "Node configuration (20 methods)": [[11, "id15"]], "Node data management": [[11, "node-data-management"]], "Node data management (4 methods)": [[11, "id16"]], "Carrier configuration (obsolete)": [[11, "carrier-configuration-obsolete"]], "Carrier configuration (20 methods)": [[11, "id17"]], "Carrier node data management (obsolete)": [[11, "carrier-node-data-management-obsolete"]], "Carrier data management (4 methods)": [[11, "id18"]], "AnalogOut reference": [[11, "analogout-reference"]], "Digital I/O": [[12, "digital-i-o"]], "Using the digital I/O functionality": [[12, "using-the-digital-i-o-functionality"]], "DigitalIO reference": [[12, "digitalio-reference"]], "Digital input instrument": [[13, "digital-input-instrument"]], "Using the digital input instrument": [[13, "using-the-digital-input-instrument"]], "The DigitalIn instrument state machine": [[13, "the-digitalin-instrument-state-machine"]], "DigitalIn instrument API overview": [[13, "digitalin-instrument-api-overview"]], "Bulk status data retrieval (5 methods)": [[13, "id17"]], "Acquisition timing settings": [[13, "acquisition-timing-settings"]], "Acquisition timing settings (7 methods)": [[13, "id18"]], "Acquisition settings (17 methods)": [[13, "id19"]], "Instrument trigger configuration (11 methods)": [[13, "id20"]], "Trigger detector configuration (7 methods)": [[13, "id21"]], "Miscellaneous settings": [[13, "miscellaneous-settings"]], "Miscellaneous settings (1 method)": [[13, "id23"]], "DigitalIn reference": [[13, "digitalin-reference"]], "Digital output instrument": [[14, "digital-output-instrument"]], "Using the digital output instrument": [[14, "using-the-digital-output-instrument"]], "The DigitalOut instrument state machine": [[14, "the-digitalout-instrument-state-machine"]], "DigitalOut instrument API overview": [[14, "digitalout-instrument-api-overview"]], "Instrument control (4 methods)": [[14, "id4"]], "Instrument-level state machine settings": [[14, "instrument-level-state-machine-settings"]], "State machine settings (13 methods)": [[14, "id6"]], "Trigger configuration": [[14, "trigger-configuration"]], "Trigger configuration (5 methods)": [[14, "id7"]], "Output settings": [[14, "output-settings"]], "Output settings (11 methods)": [[14, "id8"]], "Output pattern timing definition": [[14, "output-pattern-timing-definition"]], "Output pattern definition (14 methods)": [[14, "id9"]], "Data playback": [[14, "data-playback"]], "Data playback (4 methods)": [[14, "id10"]], "DigitalOut reference": [[14, "digitalout-reference"]], "CAN protocol": [[15, "can-protocol"]], "Using the CAN protocol functionality": [[15, "using-the-can-protocol-functionality"]], "ProtocolCAN reference": [[15, "protocolcan-reference"]], "I\u00b2C protocol": [[16, "i2c-protocol"]], "Using the I\u00b2C protocol functionality": [[16, "using-the-i2c-protocol-functionality"]], "ProtocolI2C reference": [[16, "protocoli2c-reference"]], "SPI protocol": [[17, "spi-protocol"]], "Using the SPI protocol functionality": [[17, "using-the-spi-protocol-functionality"]], "ProtocolSPI reference": [[17, "protocolspi-reference"]], "SWD protocol": [[18, "swd-protocol"]], "Using the SWD protocol functionality": [[18, "using-the-swd-protocol-functionality"]], "ProtocolSWD reference": [[18, "protocolswd-reference"]], "UART protocol": [[19, "uart-protocol"]], "Using the UART protocol functionality": [[19, "using-the-uart-protocol-functionality"]], "ProtocolUART reference": [[19, "protocoluart-reference"]], "The DwfDevice class and its attributes": [[20, "the-dwfdevice-class-and-its-attributes"]], "DwfDevice class": [[20, null]], "DwfDevice attributes": [[20, null]], "The DwfLibrary class": [[21, "the-dwflibrary-class"]], "Using the DwfLibrary class": [[21, "using-the-dwflibrary-class"]], "DwfLibrary reference": [[21, "dwflibrary-reference"]], "Device control functionality": [[22, "device-control-functionality"]], "Using the device control functionality": [[22, "using-the-device-control-functionality"]], "Alternatives to the device control functionality": [[22, "alternatives-to-the-device-control-functionality"]], "DeviceControl reference": [[22, "devicecontrol-reference"]], "Options for the openEx method": [[22, "id2"]], "Device enumeration functionality": [[23, "device-enumeration-functionality"]], "Using the device enumeration functionality": [[23, "using-the-device-enumeration-functionality"]], "Alternatives to the device enumeration functionality": [[23, "alternatives-to-the-device-enumeration-functionality"]], "DeviceEnumeration reference": [[23, "deviceenumeration-reference"]], "Signal processing functionality": [[24, "signal-processing-functionality"]], "Using the signal processing functionality": [[24, "using-the-signal-processing-functionality"]], "Spectrum reference": [[24, "spectrum-reference"]], "The DwfLibrary class and its attributes": [[25, "the-dwflibrary-class-and-its-attributes"]], "DwfLibrary class": [[25, null]], "DwfLibrary attributes": [[25, null]], "pydwf enumeration types": [[26, "pydwf-enumeration-types"]], "Using the pydwf enumeration types": [[26, "using-the-pydwf-enumeration-types"]], "Correspondence between libdwf and pydwf enumeration type names": [[26, "id6"]], "pydwf enumeration classes reference": [[26, "pydwf-enumeration-classes-reference"]], "pydwf exceptions": [[27, "pydwf-exceptions"]], "Using the pydwf exceptions": [[27, "using-the-pydwf-exceptions"]], "Error handling in the pydwf package": [[27, "error-handling-in-the-pydwf-package"]], "Exceptions raised by the pydwf package": [[27, "exceptions-raised-by-the-pydwf-package"]], "pydwf exceptions reference": [[27, "pydwf-exceptions-reference"]], "Overview of pydwf": [[28, "overview-of-pydwf"]], "A minimal example of pydwf usage": [[28, "a-minimal-example-of-pydwf-usage"]], "The two main pydwf classes": [[28, "the-two-main-pydwf-classes"]], "pydwf utilities": [[29, "pydwf-utilities"]], "Using the pydwf.utilities functionality": [[29, "using-the-pydwf-utilities-functionality"]], "pydwf.utilities.openDwfDevice function reference": [[29, "pydwf-utilities-opendwfdevice-function-reference"]], "Welcome to pydwf !": [[31, "welcome-to-pydwf"]], "Supported devices": [[31, "supported-devices"]], "Dependencies": [[31, "dependencies"]], "Project hosting": [[31, "project-hosting"]], "Installation using pip": [[31, "installation-using-pip"]], "Documentation": [[31, "documentation"]], "Examples": [[31, "examples"]], "Acknowledgements": [[31, "acknowledgements"]]}, "indexentries": {"dwfdevice (class in pydwf.core.dwf_device)": [[7, "pydwf.core.dwf_device.DwfDevice"]], "analogio (dwfdevice attribute)": [[7, "pydwf.core.dwf_device.DwfDevice.analogIO"]], "analogimpedance (dwfdevice attribute)": [[7, "pydwf.core.dwf_device.DwfDevice.analogImpedance"]], "analogin (dwfdevice attribute)": [[7, "pydwf.core.dwf_device.DwfDevice.analogIn"]], "analogout (dwfdevice attribute)": [[7, "pydwf.core.dwf_device.DwfDevice.analogOut"]], "autoconfigureget() (dwfdevice method)": [[7, "pydwf.core.dwf_device.DwfDevice.autoConfigureGet"]], "autoconfigureset() (dwfdevice method)": [[7, "pydwf.core.dwf_device.DwfDevice.autoConfigureSet"]], "can (dwfdevice.protocol attribute)": [[7, "pydwf.core.dwf_device.DwfDevice.protocol.can"]], "close() (dwfdevice method)": [[7, "pydwf.core.dwf_device.DwfDevice.close"]], "digitalcan (dwfdevice property)": [[7, "pydwf.core.dwf_device.DwfDevice.digitalCan"]], "digitali2c (dwfdevice property)": [[7, "pydwf.core.dwf_device.DwfDevice.digitalI2c"]], "digitalio (dwfdevice attribute)": [[7, "pydwf.core.dwf_device.DwfDevice.digitalIO"]], "digitalin (dwfdevice attribute)": [[7, "pydwf.core.dwf_device.DwfDevice.digitalIn"]], "digitalout (dwfdevice attribute)": [[7, "pydwf.core.dwf_device.DwfDevice.digitalOut"]], "digitalspi (dwfdevice property)": [[7, "pydwf.core.dwf_device.DwfDevice.digitalSpi"]], "digitalswd (dwfdevice property)": [[7, "pydwf.core.dwf_device.DwfDevice.digitalSwd"]], "digitaluart (dwfdevice property)": [[7, "pydwf.core.dwf_device.DwfDevice.digitalUart"]], "dwf (dwfdevice property)": [[7, "pydwf.core.dwf_device.DwfDevice.dwf"]], "enableset() (dwfdevice method)": [[7, "pydwf.core.dwf_device.DwfDevice.enableSet"]], "i2c (dwfdevice.protocol attribute)": [[7, "pydwf.core.dwf_device.DwfDevice.protocol.i2c"]], "paramget() (dwfdevice method)": [[7, "pydwf.core.dwf_device.DwfDevice.paramGet"]], "paramset() (dwfdevice method)": [[7, "pydwf.core.dwf_device.DwfDevice.paramSet"]], "reset() (dwfdevice method)": [[7, "pydwf.core.dwf_device.DwfDevice.reset"]], "spi (dwfdevice.protocol attribute)": [[7, "pydwf.core.dwf_device.DwfDevice.protocol.spi"]], "swd (dwfdevice.protocol attribute)": [[7, "pydwf.core.dwf_device.DwfDevice.protocol.swd"]], "triggerget() (dwfdevice method)": [[7, "pydwf.core.dwf_device.DwfDevice.triggerGet"]], "triggerinfo() (dwfdevice method)": [[7, "pydwf.core.dwf_device.DwfDevice.triggerInfo"]], "triggerpc() (dwfdevice method)": [[7, "pydwf.core.dwf_device.DwfDevice.triggerPC"]], "triggerset() (dwfdevice method)": [[7, "pydwf.core.dwf_device.DwfDevice.triggerSet"]], "triggerslopeinfo() (dwfdevice method)": [[7, "pydwf.core.dwf_device.DwfDevice.triggerSlopeInfo"]], "uart (dwfdevice.protocol attribute)": [[7, "pydwf.core.dwf_device.DwfDevice.protocol.uart"]], "analogio (class in pydwf.core.api.analog_io)": [[8, "pydwf.core.api.analog_io.AnalogIO"]], "channelcount() (analogio method)": [[8, "pydwf.core.api.analog_io.AnalogIO.channelCount"]], "channelinfo() (analogio method)": [[8, "pydwf.core.api.analog_io.AnalogIO.channelInfo"]], "channelname() (analogio method)": [[8, "pydwf.core.api.analog_io.AnalogIO.channelName"]], "channelnodeget() (analogio method)": [[8, "pydwf.core.api.analog_io.AnalogIO.channelNodeGet"]], "channelnodeinfo() (analogio method)": [[8, "pydwf.core.api.analog_io.AnalogIO.channelNodeInfo"]], "channelnodename() (analogio method)": [[8, "pydwf.core.api.analog_io.AnalogIO.channelNodeName"]], "channelnodeset() (analogio method)": [[8, "pydwf.core.api.analog_io.AnalogIO.channelNodeSet"]], "channelnodesetinfo() (analogio method)": [[8, "pydwf.core.api.analog_io.AnalogIO.channelNodeSetInfo"]], "channelnodestatus() (analogio method)": [[8, "pydwf.core.api.analog_io.AnalogIO.channelNodeStatus"]], "channelnodestatusinfo() (analogio method)": [[8, "pydwf.core.api.analog_io.AnalogIO.channelNodeStatusInfo"]], "configure() (analogio method)": [[8, "pydwf.core.api.analog_io.AnalogIO.configure"]], "device (analogio property)": [[8, "pydwf.core.api.analog_io.AnalogIO.device"]], "enableget() (analogio method)": [[8, "pydwf.core.api.analog_io.AnalogIO.enableGet"]], "enableinfo() (analogio method)": [[8, "pydwf.core.api.analog_io.AnalogIO.enableInfo"]], "enableset() (analogio method)": [[8, "pydwf.core.api.analog_io.AnalogIO.enableSet"]], "enablestatus() (analogio method)": [[8, "pydwf.core.api.analog_io.AnalogIO.enableStatus"]], "reset() (analogio method)": [[8, "pydwf.core.api.analog_io.AnalogIO.reset"]], "status() (analogio method)": [[8, "pydwf.core.api.analog_io.AnalogIO.status"]], "analogimpedance (class in pydwf.core.api.analog_impedance)": [[9, "pydwf.core.api.analog_impedance.AnalogImpedance"]], "amplitudeget() (analogimpedance method)": [[9, "pydwf.core.api.analog_impedance.AnalogImpedance.amplitudeGet"]], "amplitudeset() (analogimpedance method)": [[9, "pydwf.core.api.analog_impedance.AnalogImpedance.amplitudeSet"]], "compget() (analogimpedance method)": [[9, "pydwf.core.api.analog_impedance.AnalogImpedance.compGet"]], "compreset() (analogimpedance method)": [[9, "pydwf.core.api.analog_impedance.AnalogImpedance.compReset"]], "compset() (analogimpedance method)": [[9, "pydwf.core.api.analog_impedance.AnalogImpedance.compSet"]], "configure() (analogimpedance method)": [[9, "pydwf.core.api.analog_impedance.AnalogImpedance.configure"]], "device (analogimpedance property)": [[9, "pydwf.core.api.analog_impedance.AnalogImpedance.device"]], "frequencyget() (analogimpedance method)": [[9, "pydwf.core.api.analog_impedance.AnalogImpedance.frequencyGet"]], "frequencyset() (analogimpedance method)": [[9, "pydwf.core.api.analog_impedance.AnalogImpedance.frequencySet"]], "modeget() (analogimpedance method)": [[9, "pydwf.core.api.analog_impedance.AnalogImpedance.modeGet"]], "modeset() (analogimpedance method)": [[9, "pydwf.core.api.analog_impedance.AnalogImpedance.modeSet"]], "offsetget() (analogimpedance method)": [[9, "pydwf.core.api.analog_impedance.AnalogImpedance.offsetGet"]], "offsetset() (analogimpedance method)": [[9, "pydwf.core.api.analog_impedance.AnalogImpedance.offsetSet"]], "periodget() (analogimpedance method)": [[9, "pydwf.core.api.analog_impedance.AnalogImpedance.periodGet"]], "periodset() (analogimpedance method)": [[9, "pydwf.core.api.analog_impedance.AnalogImpedance.periodSet"]], "probeget() (analogimpedance method)": [[9, "pydwf.core.api.analog_impedance.AnalogImpedance.probeGet"]], "probeset() (analogimpedance method)": [[9, "pydwf.core.api.analog_impedance.AnalogImpedance.probeSet"]], "referenceget() (analogimpedance method)": [[9, "pydwf.core.api.analog_impedance.AnalogImpedance.referenceGet"]], "referenceset() (analogimpedance method)": [[9, "pydwf.core.api.analog_impedance.AnalogImpedance.referenceSet"]], "reset() (analogimpedance method)": [[9, "pydwf.core.api.analog_impedance.AnalogImpedance.reset"]], "status() (analogimpedance method)": [[9, "pydwf.core.api.analog_impedance.AnalogImpedance.status"]], "statusinput() (analogimpedance method)": [[9, "pydwf.core.api.analog_impedance.AnalogImpedance.statusInput"]], "statusmeasure() (analogimpedance method)": [[9, "pydwf.core.api.analog_impedance.AnalogImpedance.statusMeasure"]], "statuswarning() (analogimpedance method)": [[9, "pydwf.core.api.analog_impedance.AnalogImpedance.statusWarning"]], "analogin (class in pydwf.core.api.analog_in)": [[10, "pydwf.core.api.analog_in.AnalogIn"]], "acquisitionmodeget() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.acquisitionModeGet"]], "acquisitionmodeinfo() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.acquisitionModeInfo"]], "acquisitionmodeset() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.acquisitionModeSet"]], "bitsinfo() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.bitsInfo"]], "buffersizeget() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.bufferSizeGet"]], "buffersizeinfo() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.bufferSizeInfo"]], "buffersizeset() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.bufferSizeSet"]], "channelattenuationget() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.channelAttenuationGet"]], "channelattenuationset() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.channelAttenuationSet"]], "channelbandwidthget() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.channelBandwidthGet"]], "channelbandwidthset() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.channelBandwidthSet"]], "channelcount() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.channelCount"]], "channelcounts() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.channelCounts"]], "channelcouplingget() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.channelCouplingGet"]], "channelcouplinginfo() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.channelCouplingInfo"]], "channelcouplingset() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.channelCouplingSet"]], "channelenableget() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.channelEnableGet"]], "channelenableset() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.channelEnableSet"]], "channelfilterget() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.channelFilterGet"]], "channelfilterinfo() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.channelFilterInfo"]], "channelfilterset() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.channelFilterSet"]], "channelimpedanceget() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.channelImpedanceGet"]], "channelimpedanceset() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.channelImpedanceSet"]], "channeloffsetget() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.channelOffsetGet"]], "channeloffsetinfo() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.channelOffsetInfo"]], "channeloffsetset() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.channelOffsetSet"]], "channelrangeget() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.channelRangeGet"]], "channelrangeinfo() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.channelRangeInfo"]], "channelrangeset() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.channelRangeSet"]], "channelrangesteps() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.channelRangeSteps"]], "configure() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.configure"]], "counterget() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.counterGet"]], "counterinfo() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.counterInfo"]], "counterset() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.counterSet"]], "counterstatus() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.counterStatus"]], "device (analogin property)": [[10, "pydwf.core.api.analog_in.AnalogIn.device"]], "frequencyget() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.frequencyGet"]], "frequencyinfo() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.frequencyInfo"]], "frequencyset() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.frequencySet"]], "noisesizeget() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.noiseSizeGet"]], "noisesizeinfo() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.noiseSizeInfo"]], "noisesizeset() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.noiseSizeSet"]], "recordlengthget() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.recordLengthGet"]], "recordlengthset() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.recordLengthSet"]], "reset() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.reset"]], "samplingdelayget() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.samplingDelayGet"]], "samplingdelayset() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.samplingDelaySet"]], "samplingslopeget() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.samplingSlopeGet"]], "samplingslopeset() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.samplingSlopeSet"]], "samplingsourceget() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.samplingSourceGet"]], "samplingsourceset() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.samplingSourceSet"]], "status() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.status"]], "statusautotriggered() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.statusAutoTriggered"]], "statusdata() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.statusData"]], "statusdata16() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.statusData16"]], "statusdata2() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.statusData2"]], "statusindexwrite() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.statusIndexWrite"]], "statusnoise() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.statusNoise"]], "statusnoise2() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.statusNoise2"]], "statusrecord() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.statusRecord"]], "statussample() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.statusSample"]], "statussamplesleft() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.statusSamplesLeft"]], "statussamplesvalid() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.statusSamplesValid"]], "statustime() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.statusTime"]], "triggerautotimeoutget() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.triggerAutoTimeoutGet"]], "triggerautotimeoutinfo() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.triggerAutoTimeoutInfo"]], "triggerautotimeoutset() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.triggerAutoTimeoutSet"]], "triggerchannelget() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.triggerChannelGet"]], "triggerchannelinfo() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.triggerChannelInfo"]], "triggerchannelset() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.triggerChannelSet"]], "triggerconditionget() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.triggerConditionGet"]], "triggerconditioninfo() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.triggerConditionInfo"]], "triggerconditionset() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.triggerConditionSet"]], "triggerfilterget() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.triggerFilterGet"]], "triggerfilterinfo() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.triggerFilterInfo"]], "triggerfilterset() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.triggerFilterSet"]], "triggerforce() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.triggerForce"]], "triggerholdoffget() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.triggerHoldOffGet"]], "triggerholdoffinfo() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.triggerHoldOffInfo"]], "triggerholdoffset() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.triggerHoldOffSet"]], "triggerhysteresisget() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.triggerHysteresisGet"]], "triggerhysteresisinfo() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.triggerHysteresisInfo"]], "triggerhysteresisset() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.triggerHysteresisSet"]], "triggerlengthconditionget() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.triggerLengthConditionGet"]], "triggerlengthconditioninfo() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.triggerLengthConditionInfo"]], "triggerlengthconditionset() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.triggerLengthConditionSet"]], "triggerlengthget() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.triggerLengthGet"]], "triggerlengthinfo() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.triggerLengthInfo"]], "triggerlengthset() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.triggerLengthSet"]], "triggerlevelget() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.triggerLevelGet"]], "triggerlevelinfo() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.triggerLevelInfo"]], "triggerlevelset() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.triggerLevelSet"]], "triggerpositionget() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.triggerPositionGet"]], "triggerpositioninfo() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.triggerPositionInfo"]], "triggerpositionset() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.triggerPositionSet"]], "triggerpositionstatus() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.triggerPositionStatus"]], "triggersourceget() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.triggerSourceGet"]], "triggersourceinfo() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.triggerSourceInfo"]], "triggersourceset() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.triggerSourceSet"]], "triggertypeget() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.triggerTypeGet"]], "triggertypeinfo() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.triggerTypeInfo"]], "triggertypeset() (analogin method)": [[10, "pydwf.core.api.analog_in.AnalogIn.triggerTypeSet"]], "analogout (class in pydwf.core.api.analog_out)": [[11, "pydwf.core.api.analog_out.AnalogOut"]], "amplitudeget() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.amplitudeGet"]], "amplitudeinfo() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.amplitudeInfo"]], "amplitudeset() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.amplitudeSet"]], "configure() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.configure"]], "count() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.count"]], "customamfmenableget() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.customAMFMEnableGet"]], "customamfmenableset() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.customAMFMEnableSet"]], "datainfo() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.dataInfo"]], "dataset() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.dataSet"]], "device (analogout property)": [[11, "pydwf.core.api.analog_out.AnalogOut.device"]], "enableget() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.enableGet"]], "enableset() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.enableSet"]], "frequencyget() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.frequencyGet"]], "frequencyinfo() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.frequencyInfo"]], "frequencyset() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.frequencySet"]], "functionget() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.functionGet"]], "functioninfo() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.functionInfo"]], "functionset() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.functionSet"]], "idleget() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.idleGet"]], "idleinfo() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.idleInfo"]], "idleset() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.idleSet"]], "limitationget() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.limitationGet"]], "limitationinfo() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.limitationInfo"]], "limitationset() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.limitationSet"]], "masterget() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.masterGet"]], "masterset() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.masterSet"]], "modeget() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.modeGet"]], "modeset() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.modeSet"]], "nodeamplitudeget() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.nodeAmplitudeGet"]], "nodeamplitudeinfo() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.nodeAmplitudeInfo"]], "nodeamplitudeset() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.nodeAmplitudeSet"]], "nodedatainfo() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.nodeDataInfo"]], "nodedataset() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.nodeDataSet"]], "nodeenableget() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.nodeEnableGet"]], "nodeenableset() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.nodeEnableSet"]], "nodefrequencyget() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.nodeFrequencyGet"]], "nodefrequencyinfo() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.nodeFrequencyInfo"]], "nodefrequencyset() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.nodeFrequencySet"]], "nodefunctionget() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.nodeFunctionGet"]], "nodefunctioninfo() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.nodeFunctionInfo"]], "nodefunctionset() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.nodeFunctionSet"]], "nodeinfo() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.nodeInfo"]], "nodeoffsetget() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.nodeOffsetGet"]], "nodeoffsetinfo() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.nodeOffsetInfo"]], "nodeoffsetset() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.nodeOffsetSet"]], "nodephaseget() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.nodePhaseGet"]], "nodephaseinfo() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.nodePhaseInfo"]], "nodephaseset() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.nodePhaseSet"]], "nodeplaydata() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.nodePlayData"]], "nodeplaystatus() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.nodePlayStatus"]], "nodesymmetryget() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.nodeSymmetryGet"]], "nodesymmetryinfo() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.nodeSymmetryInfo"]], "nodesymmetryset() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.nodeSymmetrySet"]], "offsetget() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.offsetGet"]], "offsetinfo() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.offsetInfo"]], "offsetset() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.offsetSet"]], "phaseget() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.phaseGet"]], "phaseinfo() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.phaseInfo"]], "phaseset() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.phaseSet"]], "playdata() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.playData"]], "playstatus() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.playStatus"]], "repeatget() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.repeatGet"]], "repeatinfo() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.repeatInfo"]], "repeatset() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.repeatSet"]], "repeatstatus() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.repeatStatus"]], "repeattriggerget() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.repeatTriggerGet"]], "repeattriggerset() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.repeatTriggerSet"]], "reset() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.reset"]], "runget() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.runGet"]], "runinfo() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.runInfo"]], "runset() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.runSet"]], "runstatus() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.runStatus"]], "status() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.status"]], "symmetryget() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.symmetryGet"]], "symmetryinfo() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.symmetryInfo"]], "symmetryset() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.symmetrySet"]], "triggerslopeget() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.triggerSlopeGet"]], "triggerslopeset() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.triggerSlopeSet"]], "triggersourceget() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.triggerSourceGet"]], "triggersourceinfo() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.triggerSourceInfo"]], "triggersourceset() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.triggerSourceSet"]], "waitget() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.waitGet"]], "waitinfo() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.waitInfo"]], "waitset() (analogout method)": [[11, "pydwf.core.api.analog_out.AnalogOut.waitSet"]], "digitalio (class in pydwf.core.api.digital_io)": [[12, "pydwf.core.api.digital_io.DigitalIO"]], "configure() (digitalio method)": [[12, "pydwf.core.api.digital_io.DigitalIO.configure"]], "device (digitalio property)": [[12, "pydwf.core.api.digital_io.DigitalIO.device"]], "driveget() (digitalio method)": [[12, "pydwf.core.api.digital_io.DigitalIO.driveGet"]], "driveinfo() (digitalio method)": [[12, "pydwf.core.api.digital_io.DigitalIO.driveInfo"]], "driveset() (digitalio method)": [[12, "pydwf.core.api.digital_io.DigitalIO.driveSet"]], "inputinfo() (digitalio method)": [[12, "pydwf.core.api.digital_io.DigitalIO.inputInfo"]], "inputinfo64() (digitalio method)": [[12, "pydwf.core.api.digital_io.DigitalIO.inputInfo64"]], "inputstatus() (digitalio method)": [[12, "pydwf.core.api.digital_io.DigitalIO.inputStatus"]], "inputstatus64() (digitalio method)": [[12, "pydwf.core.api.digital_io.DigitalIO.inputStatus64"]], "outputenableget() (digitalio method)": [[12, "pydwf.core.api.digital_io.DigitalIO.outputEnableGet"]], "outputenableget64() (digitalio method)": [[12, "pydwf.core.api.digital_io.DigitalIO.outputEnableGet64"]], "outputenableinfo() (digitalio method)": [[12, "pydwf.core.api.digital_io.DigitalIO.outputEnableInfo"]], "outputenableinfo64() (digitalio method)": [[12, "pydwf.core.api.digital_io.DigitalIO.outputEnableInfo64"]], "outputenableset() (digitalio method)": [[12, "pydwf.core.api.digital_io.DigitalIO.outputEnableSet"]], "outputenableset64() (digitalio method)": [[12, "pydwf.core.api.digital_io.DigitalIO.outputEnableSet64"]], "outputget() (digitalio method)": [[12, "pydwf.core.api.digital_io.DigitalIO.outputGet"]], "outputget64() (digitalio method)": [[12, "pydwf.core.api.digital_io.DigitalIO.outputGet64"]], "outputinfo() (digitalio method)": [[12, "pydwf.core.api.digital_io.DigitalIO.outputInfo"]], "outputinfo64() (digitalio method)": [[12, "pydwf.core.api.digital_io.DigitalIO.outputInfo64"]], "outputset() (digitalio method)": [[12, "pydwf.core.api.digital_io.DigitalIO.outputSet"]], "outputset64() (digitalio method)": [[12, "pydwf.core.api.digital_io.DigitalIO.outputSet64"]], "pullget() (digitalio method)": [[12, "pydwf.core.api.digital_io.DigitalIO.pullGet"]], "pullinfo() (digitalio method)": [[12, "pydwf.core.api.digital_io.DigitalIO.pullInfo"]], "pullset() (digitalio method)": [[12, "pydwf.core.api.digital_io.DigitalIO.pullSet"]], "reset() (digitalio method)": [[12, "pydwf.core.api.digital_io.DigitalIO.reset"]], "status() (digitalio method)": [[12, "pydwf.core.api.digital_io.DigitalIO.status"]], "digitalin (class in pydwf.core.api.digital_in)": [[13, "pydwf.core.api.digital_in.DigitalIn"]], "acquisitionmodeget() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.acquisitionModeGet"]], "acquisitionmodeinfo() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.acquisitionModeInfo"]], "acquisitionmodeset() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.acquisitionModeSet"]], "bitsinfo() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.bitsInfo"]], "buffersizeget() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.bufferSizeGet"]], "buffersizeinfo() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.bufferSizeInfo"]], "buffersizeset() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.bufferSizeSet"]], "clocksourceget() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.clockSourceGet"]], "clocksourceinfo() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.clockSourceInfo"]], "clocksourceset() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.clockSourceSet"]], "configure() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.configure"]], "counterget() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.counterGet"]], "counterinfo() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.counterInfo"]], "counterset() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.counterSet"]], "counterstatus() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.counterStatus"]], "device (digitalin property)": [[13, "pydwf.core.api.digital_in.DigitalIn.device"]], "dividerget() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.dividerGet"]], "dividerinfo() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.dividerInfo"]], "dividerset() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.dividerSet"]], "inputorderset() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.inputOrderSet"]], "internalclockinfo() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.internalClockInfo"]], "mixedset() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.mixedSet"]], "reset() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.reset"]], "sampleformatget() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.sampleFormatGet"]], "sampleformatset() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.sampleFormatSet"]], "samplemodeget() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.sampleModeGet"]], "samplemodeinfo() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.sampleModeInfo"]], "samplemodeset() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.sampleModeSet"]], "samplesensibleget() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.sampleSensibleGet"]], "samplesensibleset() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.sampleSensibleSet"]], "status() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.status"]], "statusautotriggered() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.statusAutoTriggered"]], "statuscompress() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.statusCompress"]], "statuscompressed() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.statusCompressed"]], "statuscompressed2() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.statusCompressed2"]], "statusdata() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.statusData"]], "statusdata2() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.statusData2"]], "statusindexwrite() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.statusIndexWrite"]], "statusnoise2() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.statusNoise2"]], "statusrecord() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.statusRecord"]], "statussamplesleft() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.statusSamplesLeft"]], "statussamplesvalid() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.statusSamplesValid"]], "statustime() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.statusTime"]], "triggerautotimeoutget() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.triggerAutoTimeoutGet"]], "triggerautotimeoutinfo() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.triggerAutoTimeoutInfo"]], "triggerautotimeoutset() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.triggerAutoTimeoutSet"]], "triggercountset() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.triggerCountSet"]], "triggerget() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.triggerGet"]], "triggerinfo() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.triggerInfo"]], "triggerlengthset() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.triggerLengthSet"]], "triggermatchset() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.triggerMatchSet"]], "triggerpositionget() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.triggerPositionGet"]], "triggerpositioninfo() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.triggerPositionInfo"]], "triggerpositionset() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.triggerPositionSet"]], "triggerprefillget() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.triggerPrefillGet"]], "triggerprefillset() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.triggerPrefillSet"]], "triggerresetset() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.triggerResetSet"]], "triggerset() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.triggerSet"]], "triggerslopeget() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.triggerSlopeGet"]], "triggerslopeset() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.triggerSlopeSet"]], "triggersourceget() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.triggerSourceGet"]], "triggersourceinfo() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.triggerSourceInfo"]], "triggersourceset() (digitalin method)": [[13, "pydwf.core.api.digital_in.DigitalIn.triggerSourceSet"]], "digitalout (class in pydwf.core.api.digital_out)": [[14, "pydwf.core.api.digital_out.DigitalOut"]], "configure() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.configure"]], "count() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.count"]], "counterget() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.counterGet"]], "counterinfo() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.counterInfo"]], "counterinitget() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.counterInitGet"]], "counterinitset() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.counterInitSet"]], "counterset() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.counterSet"]], "datainfo() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.dataInfo"]], "dataset() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.dataSet"]], "device (digitalout property)": [[14, "pydwf.core.api.digital_out.DigitalOut.device"]], "dividerget() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.dividerGet"]], "dividerinfo() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.dividerInfo"]], "dividerinitget() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.dividerInitGet"]], "dividerinitset() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.dividerInitSet"]], "dividerset() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.dividerSet"]], "enableget() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.enableGet"]], "enableset() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.enableSet"]], "idleget() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.idleGet"]], "idleinfo() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.idleInfo"]], "idleset() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.idleSet"]], "internalclockinfo() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.internalClockInfo"]], "outputget() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.outputGet"]], "outputinfo() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.outputInfo"]], "outputset() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.outputSet"]], "playdataset() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.playDataSet"]], "playrateset() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.playRateSet"]], "playupdateset() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.playUpdateSet"]], "repeatget() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.repeatGet"]], "repeatinfo() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.repeatInfo"]], "repeatset() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.repeatSet"]], "repeatstatus() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.repeatStatus"]], "repeattriggerget() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.repeatTriggerGet"]], "repeattriggerset() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.repeatTriggerSet"]], "repetitionget() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.repetitionGet"]], "repetitioninfo() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.repetitionInfo"]], "repetitionset() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.repetitionSet"]], "reset() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.reset"]], "runget() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.runGet"]], "runinfo() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.runInfo"]], "runset() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.runSet"]], "runstatus() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.runStatus"]], "status() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.status"]], "statusoutput() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.statusOutput"]], "triggerslopeget() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.triggerSlopeGet"]], "triggerslopeset() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.triggerSlopeSet"]], "triggersourceget() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.triggerSourceGet"]], "triggersourceinfo() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.triggerSourceInfo"]], "triggersourceset() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.triggerSourceSet"]], "typeget() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.typeGet"]], "typeinfo() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.typeInfo"]], "typeset() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.typeSet"]], "waitget() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.waitGet"]], "waitinfo() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.waitInfo"]], "waitset() (digitalout method)": [[14, "pydwf.core.api.digital_out.DigitalOut.waitSet"]], "protocolcan (class in pydwf.core.api.protocol_can)": [[15, "pydwf.core.api.protocol_can.ProtocolCAN"]], "device (protocolcan property)": [[15, "pydwf.core.api.protocol_can.ProtocolCAN.device"]], "polarityset() (protocolcan method)": [[15, "pydwf.core.api.protocol_can.ProtocolCAN.polaritySet"]], "rateset() (protocolcan method)": [[15, "pydwf.core.api.protocol_can.ProtocolCAN.rateSet"]], "reset() (protocolcan method)": [[15, "pydwf.core.api.protocol_can.ProtocolCAN.reset"]], "rx() (protocolcan method)": [[15, "pydwf.core.api.protocol_can.ProtocolCAN.rx"]], "rxset() (protocolcan method)": [[15, "pydwf.core.api.protocol_can.ProtocolCAN.rxSet"]], "tx() (protocolcan method)": [[15, "pydwf.core.api.protocol_can.ProtocolCAN.tx"]], "txset() (protocolcan method)": [[15, "pydwf.core.api.protocol_can.ProtocolCAN.txSet"]], "protocoli2c (class in pydwf.core.api.protocol_i2c)": [[16, "pydwf.core.api.protocol_i2c.ProtocolI2C"]], "clear() (protocoli2c method)": [[16, "pydwf.core.api.protocol_i2c.ProtocolI2C.clear"]], "device (protocoli2c property)": [[16, "pydwf.core.api.protocol_i2c.ProtocolI2C.device"]], "rateset() (protocoli2c method)": [[16, "pydwf.core.api.protocol_i2c.ProtocolI2C.rateSet"]], "read() (protocoli2c method)": [[16, "pydwf.core.api.protocol_i2c.ProtocolI2C.read"]], "readnakset() (protocoli2c method)": [[16, "pydwf.core.api.protocol_i2c.ProtocolI2C.readNakSet"]], "reset() (protocoli2c method)": [[16, "pydwf.core.api.protocol_i2c.ProtocolI2C.reset"]], "sclset() (protocoli2c method)": [[16, "pydwf.core.api.protocol_i2c.ProtocolI2C.sclSet"]], "sdaset() (protocoli2c method)": [[16, "pydwf.core.api.protocol_i2c.ProtocolI2C.sdaSet"]], "spystart() (protocoli2c method)": [[16, "pydwf.core.api.protocol_i2c.ProtocolI2C.spyStart"]], "spystatus() (protocoli2c method)": [[16, "pydwf.core.api.protocol_i2c.ProtocolI2C.spyStatus"]], "stretchset() (protocoli2c method)": [[16, "pydwf.core.api.protocol_i2c.ProtocolI2C.stretchSet"]], "timeoutset() (protocoli2c method)": [[16, "pydwf.core.api.protocol_i2c.ProtocolI2C.timeoutSet"]], "write() (protocoli2c method)": [[16, "pydwf.core.api.protocol_i2c.ProtocolI2C.write"]], "writeone() (protocoli2c method)": [[16, "pydwf.core.api.protocol_i2c.ProtocolI2C.writeOne"]], "writeread() (protocoli2c method)": [[16, "pydwf.core.api.protocol_i2c.ProtocolI2C.writeRead"]], "protocolspi (class in pydwf.core.api.protocol_spi)": [[17, "pydwf.core.api.protocol_spi.ProtocolSPI"]], "clockset() (protocolspi method)": [[17, "pydwf.core.api.protocol_spi.ProtocolSPI.clockSet"]], "cmreadone() (protocolspi method)": [[17, "pydwf.core.api.protocol_spi.ProtocolSPI.cmReadOne"]], "cmdread() (protocolspi method)": [[17, "pydwf.core.api.protocol_spi.ProtocolSPI.cmdRead"]], "cmdread16() (protocolspi method)": [[17, "pydwf.core.api.protocol_spi.ProtocolSPI.cmdRead16"]], "cmdread32() (protocolspi method)": [[17, "pydwf.core.api.protocol_spi.ProtocolSPI.cmdRead32"]], "cmdwrite() (protocolspi method)": [[17, "pydwf.core.api.protocol_spi.ProtocolSPI.cmdWrite"]], "cmdwrite16() (protocolspi method)": [[17, "pydwf.core.api.protocol_spi.ProtocolSPI.cmdWrite16"]], "cmdwrite32() (protocolspi method)": [[17, "pydwf.core.api.protocol_spi.ProtocolSPI.cmdWrite32"]], "cmdwriteone() (protocolspi method)": [[17, "pydwf.core.api.protocol_spi.ProtocolSPI.cmdWriteOne"]], "cmdwriteread() (protocolspi method)": [[17, "pydwf.core.api.protocol_spi.ProtocolSPI.cmdWriteRead"]], "cmdwriteread16() (protocolspi method)": [[17, "pydwf.core.api.protocol_spi.ProtocolSPI.cmdWriteRead16"]], "cmdwriteread32() (protocolspi method)": [[17, "pydwf.core.api.protocol_spi.ProtocolSPI.cmdWriteRead32"]], "dataset() (protocolspi method)": [[17, "pydwf.core.api.protocol_spi.ProtocolSPI.dataSet"]], "delayset() (protocolspi method)": [[17, "pydwf.core.api.protocol_spi.ProtocolSPI.delaySet"]], "device (protocolspi property)": [[17, "pydwf.core.api.protocol_spi.ProtocolSPI.device"]], "frequencyset() (protocolspi method)": [[17, "pydwf.core.api.protocol_spi.ProtocolSPI.frequencySet"]], "idleset() (protocolspi method)": [[17, "pydwf.core.api.protocol_spi.ProtocolSPI.idleSet"]], "modeset() (protocolspi method)": [[17, "pydwf.core.api.protocol_spi.ProtocolSPI.modeSet"]], "orderset() (protocolspi method)": [[17, "pydwf.core.api.protocol_spi.ProtocolSPI.orderSet"]], "read() (protocolspi method)": [[17, "pydwf.core.api.protocol_spi.ProtocolSPI.read"]], "read16() (protocolspi method)": [[17, "pydwf.core.api.protocol_spi.ProtocolSPI.read16"]], "read32() (protocolspi method)": [[17, "pydwf.core.api.protocol_spi.ProtocolSPI.read32"]], "readone() (protocolspi method)": [[17, "pydwf.core.api.protocol_spi.ProtocolSPI.readOne"]], "reset() (protocolspi method)": [[17, "pydwf.core.api.protocol_spi.ProtocolSPI.reset"]], "select() (protocolspi method)": [[17, "pydwf.core.api.protocol_spi.ProtocolSPI.select"]], "selectset() (protocolspi method)": [[17, "pydwf.core.api.protocol_spi.ProtocolSPI.selectSet"]], "write() (protocolspi method)": [[17, "pydwf.core.api.protocol_spi.ProtocolSPI.write"]], "write16() (protocolspi method)": [[17, "pydwf.core.api.protocol_spi.ProtocolSPI.write16"]], "write32() (protocolspi method)": [[17, "pydwf.core.api.protocol_spi.ProtocolSPI.write32"]], "writeone() (protocolspi method)": [[17, "pydwf.core.api.protocol_spi.ProtocolSPI.writeOne"]], "writeread() (protocolspi method)": [[17, "pydwf.core.api.protocol_spi.ProtocolSPI.writeRead"]], "writeread16() (protocolspi method)": [[17, "pydwf.core.api.protocol_spi.ProtocolSPI.writeRead16"]], "writeread32() (protocolspi method)": [[17, "pydwf.core.api.protocol_spi.ProtocolSPI.writeRead32"]], "protocolswd (class in pydwf.core.api.protocol_swd)": [[18, "pydwf.core.api.protocol_swd.ProtocolSWD"]], "clear() (protocolswd method)": [[18, "pydwf.core.api.protocol_swd.ProtocolSWD.clear"]], "clockset() (protocolswd method)": [[18, "pydwf.core.api.protocol_swd.ProtocolSWD.clockSet"]], "device (protocolswd property)": [[18, "pydwf.core.api.protocol_swd.ProtocolSWD.device"]], "ioidleset() (protocolswd method)": [[18, "pydwf.core.api.protocol_swd.ProtocolSWD.ioIdleSet"]], "ioset() (protocolswd method)": [[18, "pydwf.core.api.protocol_swd.ProtocolSWD.ioSet"]], "nakset() (protocolswd method)": [[18, "pydwf.core.api.protocol_swd.ProtocolSWD.nakSet"]], "parkset() (protocolswd method)": [[18, "pydwf.core.api.protocol_swd.ProtocolSWD.parkSet"]], "rateset() (protocolswd method)": [[18, "pydwf.core.api.protocol_swd.ProtocolSWD.rateSet"]], "read() (protocolswd method)": [[18, "pydwf.core.api.protocol_swd.ProtocolSWD.read"]], "reset() (protocolswd method)": [[18, "pydwf.core.api.protocol_swd.ProtocolSWD.reset"]], "trailset() (protocolswd method)": [[18, "pydwf.core.api.protocol_swd.ProtocolSWD.trailSet"]], "turnset() (protocolswd method)": [[18, "pydwf.core.api.protocol_swd.ProtocolSWD.turnSet"]], "write() (protocolswd method)": [[18, "pydwf.core.api.protocol_swd.ProtocolSWD.write"]], "protocoluart (class in pydwf.core.api.protocol_uart)": [[19, "pydwf.core.api.protocol_uart.ProtocolUART"]], "bitsset() (protocoluart method)": [[19, "pydwf.core.api.protocol_uart.ProtocolUART.bitsSet"]], "device (protocoluart property)": [[19, "pydwf.core.api.protocol_uart.ProtocolUART.device"]], "parityset() (protocoluart method)": [[19, "pydwf.core.api.protocol_uart.ProtocolUART.paritySet"]], "polarityset() (protocoluart method)": [[19, "pydwf.core.api.protocol_uart.ProtocolUART.polaritySet"]], "rateset() (protocoluart method)": [[19, "pydwf.core.api.protocol_uart.ProtocolUART.rateSet"]], "reset() (protocoluart method)": [[19, "pydwf.core.api.protocol_uart.ProtocolUART.reset"]], "rx() (protocoluart method)": [[19, "pydwf.core.api.protocol_uart.ProtocolUART.rx"]], "rxset() (protocoluart method)": [[19, "pydwf.core.api.protocol_uart.ProtocolUART.rxSet"]], "stopset() (protocoluart method)": [[19, "pydwf.core.api.protocol_uart.ProtocolUART.stopSet"]], "tx() (protocoluart method)": [[19, "pydwf.core.api.protocol_uart.ProtocolUART.tx"]], "txset() (protocoluart method)": [[19, "pydwf.core.api.protocol_uart.ProtocolUART.txSet"]], "dwflibrary (class in pydwf.core.dwf_library)": [[21, "pydwf.core.dwf_library.DwfLibrary"]], "__init__() (dwflibrary method)": [[21, "pydwf.core.dwf_library.DwfLibrary.__init__"]], "devicecontrol (dwflibrary attribute)": [[21, "pydwf.core.dwf_library.DwfLibrary.deviceControl"]], "deviceenum (dwflibrary attribute)": [[21, "pydwf.core.dwf_library.DwfLibrary.deviceEnum"]], "getlasterror() (dwflibrary method)": [[21, "pydwf.core.dwf_library.DwfLibrary.getLastError"]], "getlasterrormsg() (dwflibrary method)": [[21, "pydwf.core.dwf_library.DwfLibrary.getLastErrorMsg"]], "getversion() (dwflibrary method)": [[21, "pydwf.core.dwf_library.DwfLibrary.getVersion"]], "paramget() (dwflibrary method)": [[21, "pydwf.core.dwf_library.DwfLibrary.paramGet"]], "paramset() (dwflibrary method)": [[21, "pydwf.core.dwf_library.DwfLibrary.paramSet"]], "spectrum (dwflibrary attribute)": [[21, "pydwf.core.dwf_library.DwfLibrary.spectrum"]], "devicecontrol (class in pydwf.core.api.device_control)": [[22, "pydwf.core.api.device_control.DeviceControl"]], "closeall() (devicecontrol method)": [[22, "pydwf.core.api.device_control.DeviceControl.closeAll"]], "dwf (devicecontrol property)": [[22, "pydwf.core.api.device_control.DeviceControl.dwf"]], "open() (devicecontrol method)": [[22, "pydwf.core.api.device_control.DeviceControl.open"]], "openex() (devicecontrol method)": [[22, "pydwf.core.api.device_control.DeviceControl.openEx"]], "deviceenumeration (class in pydwf.core.api.device_enumeration)": [[23, "pydwf.core.api.device_enumeration.DeviceEnumeration"]], "analoginbits() (deviceenumeration method)": [[23, "pydwf.core.api.device_enumeration.DeviceEnumeration.analogInBits"]], "analoginbuffersize() (deviceenumeration method)": [[23, "pydwf.core.api.device_enumeration.DeviceEnumeration.analogInBufferSize"]], "analoginchannels() (deviceenumeration method)": [[23, "pydwf.core.api.device_enumeration.DeviceEnumeration.analogInChannels"]], "analoginfrequency() (deviceenumeration method)": [[23, "pydwf.core.api.device_enumeration.DeviceEnumeration.analogInFrequency"]], "configinfo() (deviceenumeration method)": [[23, "pydwf.core.api.device_enumeration.DeviceEnumeration.configInfo"]], "deviceisopened() (deviceenumeration method)": [[23, "pydwf.core.api.device_enumeration.DeviceEnumeration.deviceIsOpened"]], "devicename() (deviceenumeration method)": [[23, "pydwf.core.api.device_enumeration.DeviceEnumeration.deviceName"]], "devicetype() (deviceenumeration method)": [[23, "pydwf.core.api.device_enumeration.DeviceEnumeration.deviceType"]], "dwf (deviceenumeration property)": [[23, "pydwf.core.api.device_enumeration.DeviceEnumeration.dwf"]], "enumerateconfigurations() (deviceenumeration method)": [[23, "pydwf.core.api.device_enumeration.DeviceEnumeration.enumerateConfigurations"]], "enumeratedevices() (deviceenumeration method)": [[23, "pydwf.core.api.device_enumeration.DeviceEnumeration.enumerateDevices"]], "enumerateinfo() (deviceenumeration method)": [[23, "pydwf.core.api.device_enumeration.DeviceEnumeration.enumerateInfo"]], "enumeratestart() (deviceenumeration method)": [[23, "pydwf.core.api.device_enumeration.DeviceEnumeration.enumerateStart"]], "enumeratestop() (deviceenumeration method)": [[23, "pydwf.core.api.device_enumeration.DeviceEnumeration.enumerateStop"]], "serialnumber() (deviceenumeration method)": [[23, "pydwf.core.api.device_enumeration.DeviceEnumeration.serialNumber"]], "username() (deviceenumeration method)": [[23, "pydwf.core.api.device_enumeration.DeviceEnumeration.userName"]], "spectrum (class in pydwf.core.api.spectrum)": [[24, "pydwf.core.api.spectrum.Spectrum"]], "dwf (spectrum property)": [[24, "pydwf.core.api.spectrum.Spectrum.dwf"]], "fft() (spectrum method)": [[24, "pydwf.core.api.spectrum.Spectrum.fft"]], "transform() (spectrum method)": [[24, "pydwf.core.api.spectrum.Spectrum.transform"]], "window() (spectrum method)": [[24, "pydwf.core.api.spectrum.Spectrum.window"]], "ac (dwfanalogcoupling attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogCoupling.AC"]], "accurrent (dwfdmm attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDmm.ACCurrent"]], "aclowcurrent (dwfdmm attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDmm.ACLowCurrent"]], "acvoltage (dwfdmm attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDmm.ACVoltage"]], "adp3x50 (dwfdeviceid attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDeviceID.ADP3X50"]], "adp5250 (dwfdeviceid attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDeviceID.ADP5250"]], "am (dwfanalogoutnode attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogOutNode.AM"]], "axi (dwfenumfilter attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfEnumFilter.AXI"]], "admittance (dwfanalogimpedance attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogImpedance.Admittance"]], "admittancephase (dwfanalogimpedance attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogImpedance.AdmittancePhase"]], "all (dwfenumfilter attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfEnumFilter.All"]], "alreadyopened (dwferrorcode attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfErrorCode.AlreadyOpened"]], "analogiochannelcount (dwfenumconfiginfo attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfEnumConfigInfo.AnalogIOChannelCount"]], "analogin (dwftriggersource attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfTriggerSource.AnalogIn"]], "analoginbuffersize (dwfenumconfiginfo attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfEnumConfigInfo.AnalogInBufferSize"]], "analoginchannelcount (dwfenumconfiginfo attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfEnumConfigInfo.AnalogInChannelCount"]], "analogout (dwfdeviceparameter attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDeviceParameter.AnalogOut"]], "analogout1 (dwftriggersource attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfTriggerSource.AnalogOut1"]], "analogout2 (dwftriggersource attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfTriggerSource.AnalogOut2"]], "analogout3 (dwftriggersource attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfTriggerSource.AnalogOut3"]], "analogout4 (dwftriggersource attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfTriggerSource.AnalogOut4"]], "analogoutbuffersize (dwfenumconfiginfo attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfEnumConfigInfo.AnalogOutBufferSize"]], "analogoutchannelcount (dwfenumconfiginfo attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfEnumConfigInfo.AnalogOutChannelCount"]], "apilocktimeout (dwferrorcode attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfErrorCode.ApiLockTimeout"]], "armed (dwfstate attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfState.Armed"]], "audio (dwfenumfilter attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfEnumFilter.Audio"]], "audioout (dwfdeviceparameter attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDeviceParameter.AudioOut"]], "average (dwfanaloginfilter attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogInFilter.Average"]], "averagefit (dwfanaloginfilter attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogInFilter.AverageFit"]], "blackmanharris (dwfwindow attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfWindow.BlackmanHarris"]], "carrier (dwfanalogoutnode attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogOutNode.Carrier"]], "clock (dwftriggersource attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfTriggerSource.Clock"]], "clockmode (dwfdeviceparameter attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDeviceParameter.ClockMode"]], "conductance (dwfanalogimpedance attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogImpedance.Conductance"]], "config (dwfstate attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfState.Config"]], "continuity (dwfdmm attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDmm.Continuity"]], "cosine (dwfwindow attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfWindow.Cosine"]], "current (dwfanalogio attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogIO.Current"]], "current (dwfanalogoutmode attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogOutMode.Current"]], "custom (dwfanalogoutfunction attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogOutFunction.Custom"]], "custom (dwfdigitalouttype attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDigitalOutType.Custom"]], "custompattern (dwfanalogoutfunction attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogOutFunction.CustomPattern"]], "dc (dwfanalogcoupling attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogCoupling.DC"]], "dc (dwfanalogoutfunction attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogOutFunction.DC"]], "dccurrent (dwfdmm attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDmm.DCCurrent"]], "dclowcurrent (dwfdmm attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDmm.DCLowCurrent"]], "dcvoltage (dwfdmm attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDmm.DCVoltage"]], "ddiscovery (dwfdeviceid attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDeviceID.DDiscovery"]], "devid (dwfenumfilter attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfEnumFilter.DEVID"]], "dps3340 (dwfdeviceid attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDeviceID.DPS3340"]], "decimate (dwfanaloginfilter attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogInFilter.Decimate"]], "demo (dwfenumfilter attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfEnumFilter.Demo"]], "detectoranalogin (dwftriggersource attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfTriggerSource.DetectorAnalogIn"]], "detectordigitalin (dwftriggersource attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfTriggerSource.DetectorDigitalIn"]], "digitaliochannelcount (dwfenumconfiginfo attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfEnumConfigInfo.DigitalIOChannelCount"]], "digitalin (dwftriggersource attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfTriggerSource.DigitalIn"]], "digitalinbuffersize (dwfenumconfiginfo attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfEnumConfigInfo.DigitalInBufferSize"]], "digitalinchannelcount (dwfenumconfiginfo attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfEnumConfigInfo.DigitalInChannelCount"]], "digitalout (dwftriggersource attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfTriggerSource.DigitalOut"]], "digitaloutbuffersize (dwfenumconfiginfo attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfEnumConfigInfo.DigitalOutBufferSize"]], "digitaloutchannelcount (dwfenumconfiginfo attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfEnumConfigInfo.DigitalOutChannelCount"]], "diode (dwfdmm attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDmm.Diode"]], "disable (dwfanalogoutidle attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogOutIdle.Disable"]], "discovery (dwfdeviceid attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDeviceID.Discovery"]], "discovery2 (dwfdeviceid attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDeviceID.Discovery2"]], "discoverya (dwfdeviceversion attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDeviceVersion.DiscoveryA"]], "discoveryb (dwfdeviceversion attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDeviceVersion.DiscoveryB"]], "discoveryc (dwfdeviceversion attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDeviceVersion.DiscoveryC"]], "dissipation (dwfanalogimpedance attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogImpedance.Dissipation"]], "dmm (dwfanalogio attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogIO.Dmm"]], "done (dwfstate attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfState.Done"]], "dwfacquisitionmode (class in pydwf.core.auxiliary.enum_types)": [[26, "pydwf.core.auxiliary.enum_types.DwfAcquisitionMode"]], "dwfanalogcoupling (class in pydwf.core.auxiliary.enum_types)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogCoupling"]], "dwfanalogio (class in pydwf.core.auxiliary.enum_types)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogIO"]], "dwfanalogimpedance (class in pydwf.core.auxiliary.enum_types)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogImpedance"]], "dwfanaloginfilter (class in pydwf.core.auxiliary.enum_types)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogInFilter"]], "dwfanalogintriggerlengthcondition (class in pydwf.core.auxiliary.enum_types)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogInTriggerLengthCondition"]], "dwfanalogintriggertype (class in pydwf.core.auxiliary.enum_types)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogInTriggerType"]], "dwfanalogoutfunction (class in pydwf.core.auxiliary.enum_types)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogOutFunction"]], "dwfanalogoutidle (class in pydwf.core.auxiliary.enum_types)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogOutIdle"]], "dwfanalogoutmode (class in pydwf.core.auxiliary.enum_types)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogOutMode"]], "dwfanalogoutnode (class in pydwf.core.auxiliary.enum_types)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogOutNode"]], "dwfdeviceid (class in pydwf.core.auxiliary.enum_types)": [[26, "pydwf.core.auxiliary.enum_types.DwfDeviceID"]], "dwfdeviceparameter (class in pydwf.core.auxiliary.enum_types)": [[26, "pydwf.core.auxiliary.enum_types.DwfDeviceParameter"]], "dwfdeviceversion (class in pydwf.core.auxiliary.enum_types)": [[26, "pydwf.core.auxiliary.enum_types.DwfDeviceVersion"]], "dwfdigitalinclocksource (class in pydwf.core.auxiliary.enum_types)": [[26, "pydwf.core.auxiliary.enum_types.DwfDigitalInClockSource"]], "dwfdigitalinsamplemode (class in pydwf.core.auxiliary.enum_types)": [[26, "pydwf.core.auxiliary.enum_types.DwfDigitalInSampleMode"]], "dwfdigitaloutidle (class in pydwf.core.auxiliary.enum_types)": [[26, "pydwf.core.auxiliary.enum_types.DwfDigitalOutIdle"]], "dwfdigitaloutoutput (class in pydwf.core.auxiliary.enum_types)": [[26, "pydwf.core.auxiliary.enum_types.DwfDigitalOutOutput"]], "dwfdigitalouttype (class in pydwf.core.auxiliary.enum_types)": [[26, "pydwf.core.auxiliary.enum_types.DwfDigitalOutType"]], "dwfdmm (class in pydwf.core.auxiliary.enum_types)": [[26, "pydwf.core.auxiliary.enum_types.DwfDmm"]], "dwfenumconfiginfo (class in pydwf.core.auxiliary.enum_types)": [[26, "pydwf.core.auxiliary.enum_types.DwfEnumConfigInfo"]], "dwfenumfilter (class in pydwf.core.auxiliary.enum_types)": [[26, "pydwf.core.auxiliary.enum_types.DwfEnumFilter"]], "dwferrorcode (class in pydwf.core.auxiliary.enum_types)": [[26, "pydwf.core.auxiliary.enum_types.DwfErrorCode"]], "dwfstate (class in pydwf.core.auxiliary.enum_types)": [[26, "pydwf.core.auxiliary.enum_types.DwfState"]], "dwftriggerslope (class in pydwf.core.auxiliary.enum_types)": [[26, "pydwf.core.auxiliary.enum_types.DwfTriggerSlope"]], "dwftriggersource (class in pydwf.core.auxiliary.enum_types)": [[26, "pydwf.core.auxiliary.enum_types.DwfTriggerSource"]], "dwfwindow (class in pydwf.core.auxiliary.enum_types)": [[26, "pydwf.core.auxiliary.enum_types.DwfWindow"]], "eexplorer (dwfdeviceid attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDeviceID.EExplorer"]], "eexplorerc (dwfdeviceversion attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDeviceVersion.EExplorerC"]], "eexplorere (dwfdeviceversion attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDeviceVersion.EExplorerE"]], "eexplorerf (dwfdeviceversion attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDeviceVersion.EExplorerF"]], "eclypse (dwfdeviceid attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDeviceID.Eclypse"]], "edge (dwfanalogintriggertype attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogInTriggerType.Edge"]], "either (dwftriggerslope attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfTriggerSlope.Either"]], "enable (dwfanalogio attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogIO.Enable"]], "extfreq (dwfdeviceparameter attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDeviceParameter.ExtFreq"]], "external (dwfdigitalinclocksource attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDigitalInClockSource.External"]], "external1 (dwftriggersource attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfTriggerSource.External1"]], "external2 (dwfdigitalinclocksource attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDigitalInClockSource.External2"]], "external2 (dwftriggersource attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfTriggerSource.External2"]], "external3 (dwftriggersource attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfTriggerSource.External3"]], "external4 (dwftriggersource attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfTriggerSource.External4"]], "fm (dwfanalogoutnode attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogOutNode.FM"]], "fall (dwftriggerslope attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfTriggerSlope.Fall"]], "flattop (dwfwindow attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfWindow.FlatTop"]], "freqphase (dwfdeviceparameter attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDeviceParameter.FreqPhase"]], "frequency (dwfanalogio attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogIO.Frequency"]], "frequency (dwfdeviceparameter attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDeviceParameter.Frequency"]], "hamming (dwfwindow attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfWindow.Hamming"]], "hann (dwfwindow attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfWindow.Hann"]], "high (dwfdigitaloutidle attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDigitalOutIdle.High"]], "high (dwftriggersource attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfTriggerSource.High"]], "iimag (dwfanalogimpedance attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogImpedance.Iimag"]], "impedance (dwfanalogimpedance attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogImpedance.Impedance"]], "impedancephase (dwfanalogimpedance attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogImpedance.ImpedancePhase"]], "init (dwfdigitaloutidle attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDigitalOutIdle.Init"]], "initial (dwfanalogoutidle attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogOutIdle.Initial"]], "internal (dwfdigitalinclocksource attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDigitalInClockSource.Internal"]], "invalidparameter0 (dwferrorcode attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfErrorCode.InvalidParameter0"]], "invalidparameter1 (dwferrorcode attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfErrorCode.InvalidParameter1"]], "invalidparameter2 (dwferrorcode attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfErrorCode.InvalidParameter2"]], "invalidparameter3 (dwferrorcode attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfErrorCode.InvalidParameter3"]], "invalidparameter4 (dwferrorcode attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfErrorCode.InvalidParameter4"]], "ireal (dwfanalogimpedance attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogImpedance.Ireal"]], "irms (dwfanalogimpedance attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogImpedance.Irms"]], "kaiser (dwfwindow attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfWindow.Kaiser"]], "keeponclose (dwfdeviceparameter attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDeviceParameter.KeepOnClose"]], "ledbrightness (dwfdeviceparameter attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDeviceParameter.LedBrightness"]], "less (dwfanalogintriggerlengthcondition attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogInTriggerLengthCondition.Less"]], "low (dwfdigitaloutidle attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDigitalOutIdle.Low"]], "low (dwftriggersource attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfTriggerSource.Low"]], "measure (dwfanalogio attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogIO.Measure"]], "minmax (dwfanaloginfilter attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogInFilter.MinMax"]], "more (dwfanalogintriggerlengthcondition attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogInTriggerLengthCondition.More"]], "network (dwfenumfilter attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfEnumFilter.Network"]], "noerc (dwferrorcode attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfErrorCode.NoErc"]], "noise (dwfanalogoutfunction attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogOutFunction.Noise"]], "noise (dwfdigitalinsamplemode attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDigitalInSampleMode.Noise"]], "none_ (dwftriggersource attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfTriggerSource.None_"]], "notsupported (dwferrorcode attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfErrorCode.NotSupported"]], "offset (dwfanalogoutidle attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogOutIdle.Offset"]], "onclose (dwfdeviceparameter attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDeviceParameter.OnClose"]], "opendrain (dwfdigitaloutoutput attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDigitalOutOutput.OpenDrain"]], "opensource (dwfdigitaloutoutput attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDigitalOutOutput.OpenSource"]], "otherinfotext (dwfenumconfiginfo attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfEnumConfigInfo.OtherInfoText"]], "overs (dwfacquisitionmode attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAcquisitionMode.Overs"]], "pc (dwftriggersource attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfTriggerSource.PC"]], "parallelcapacitance (dwfanalogimpedance attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogImpedance.ParallelCapacitance"]], "parallelinductance (dwfanalogimpedance attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogImpedance.ParallelInductance"]], "play (dwfanalogoutfunction attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogOutFunction.Play"]], "play (dwfdigitalouttype attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDigitalOutType.Play"]], "playpattern (dwfanalogoutfunction attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogOutFunction.PlayPattern"]], "power (dwfanalogio attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogIO.Power"]], "prefill (dwfstate attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfState.Prefill"]], "pulse (dwfanalogintriggertype attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogInTriggerType.Pulse"]], "pulse (dwfanalogoutfunction attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogOutFunction.Pulse"]], "pulse (dwfdigitalouttype attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDigitalOutType.Pulse"]], "pushpull (dwfdigitaloutoutput attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDigitalOutOutput.PushPull"]], "quality (dwfanalogimpedance attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogImpedance.Quality"]], "rom (dwfdigitalouttype attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDigitalOutType.ROM"]], "rampdown (dwfanalogoutfunction attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogOutFunction.RampDown"]], "rampup (dwfanalogoutfunction attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogOutFunction.RampUp"]], "random (dwfdigitalouttype attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDigitalOutType.Random"]], "range (dwfanalogio attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogIO.Range"]], "reactance (dwfanalogimpedance attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogImpedance.Reactance"]], "ready (dwfstate attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfState.Ready"]], "record (dwfacquisitionmode attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAcquisitionMode.Record"]], "rectangular (dwfwindow attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfWindow.Rectangular"]], "remote (dwfenumfilter attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfEnumFilter.Remote"]], "resistance (dwfanalogio attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogIO.Resistance"]], "resistance (dwfanalogimpedance attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogImpedance.Resistance"]], "resistance (dwfdmm attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDmm.Resistance"]], "rise (dwftriggerslope attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfTriggerSlope.Rise"]], "running (dwfstate attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfState.Running"]], "scanscreen (dwfacquisitionmode attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAcquisitionMode.ScanScreen"]], "scanshift (dwfacquisitionmode attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAcquisitionMode.ScanShift"]], "seriescapacitance (dwfanalogimpedance attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogImpedance.SeriesCapacitance"]], "seriesinductance (dwfanalogimpedance attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogImpedance.SeriesInductance"]], "simple (dwfdigitalinsamplemode attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDigitalInSampleMode.Simple"]], "sine (dwfanalogoutfunction attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogOutFunction.Sine"]], "sinepower (dwfanalogoutfunction attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogOutFunction.SinePower"]], "single (dwfacquisitionmode attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAcquisitionMode.Single"]], "single1 (dwfacquisitionmode attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAcquisitionMode.Single1"]], "slew (dwfanalogio attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogIO.Slew"]], "square (dwfanalogoutfunction attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogOutFunction.Square"]], "state (dwfdigitalouttype attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDigitalOutType.State"]], "susceptance (dwfanalogimpedance attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogImpedance.Susceptance"]], "templimit (dwfdeviceparameter attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDeviceParameter.TempLimit"]], "temperature (dwfanalogio attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogIO.Temperature"]], "temperature (dwfdmm attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDmm.Temperature"]], "threestate (dwfdigitaloutoutput attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDigitalOutOutput.ThreeState"]], "time (dwfanalogio attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogIO.Time"]], "timeout (dwfanalogintriggerlengthcondition attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogInTriggerLengthCondition.Timeout"]], "tooltiptext (dwfenumconfiginfo attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfEnumConfigInfo.TooltipText"]], "transition (dwfanalogintriggertype attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogInTriggerType.Transition"]], "trapezium (dwfanalogoutfunction attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogOutFunction.Trapezium"]], "triangle (dwfanalogoutfunction attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogOutFunction.Triangle"]], "triangular (dwfwindow attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfWindow.Triangular"]], "triggered (dwfstate attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfState.Triggered"]], "type (dwfenumfilter attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfEnumFilter.Type"]], "usb (dwfenumfilter attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfEnumFilter.USB"]], "undocumented (dwfanalogio attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogIO.Undocumented"]], "unknownerror (dwferrorcode attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfErrorCode.UnknownError"]], "usblimit (dwfdeviceparameter attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDeviceParameter.UsbLimit"]], "usbpower (dwfdeviceparameter attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDeviceParameter.UsbPower"]], "vimag (dwfanalogimpedance attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogImpedance.Vimag"]], "voltage (dwfanalogio attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogIO.Voltage"]], "voltage (dwfanalogoutmode attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogOutMode.Voltage"]], "vreal (dwfanalogimpedance attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogImpedance.Vreal"]], "vrms (dwfanalogimpedance attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogImpedance.Vrms"]], "wait (dwfstate attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfState.Wait"]], "window (dwfanalogintriggertype attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfAnalogInTriggerType.Window"]], "zet (dwfdigitaloutidle attribute)": [[26, "pydwf.core.auxiliary.enum_types.DwfDigitalOutIdle.Zet"]], "dwflibraryerror (class in pydwf.core.auxiliary.exceptions)": [[27, "pydwf.core.auxiliary.exceptions.DwfLibraryError"]], "pydwferror (class in pydwf.core.auxiliary.exceptions)": [[27, "pydwf.core.auxiliary.exceptions.PyDwfError"]], "code (dwflibraryerror attribute)": [[27, "pydwf.core.auxiliary.exceptions.DwfLibraryError.code"]], "msg (dwflibraryerror attribute)": [[27, "pydwf.core.auxiliary.exceptions.DwfLibraryError.msg"]], "opendwfdevice() (in module pydwf.utilities.open_dwf_device)": [[29, "pydwf.utilities.open_dwf_device.openDwfDevice"]]}})